{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "lib/_stream_0.js",
    "lib/_stream_1.js",
    "lib/aria-rules.js",
    "lib/linter.js",
    "lib/logger.js",
    "lib/role-rules.js",
    "lib/rules.js",
    "lib/runner.js",
    "lib/utils.js"
  ],
  "names": [],
  "mappingsxzxbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACx
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\"use strict\";\n\n    const { $, $$, cssEscape } = require('./utils');\n    const rules = require('./rules');\n    module.exports = new Map([\n      [\n        \"alt\",\n        Object.assign(\n          { name: \"alt\" },\n          {\n  message: 'missing alt attribute',\n  selector: 'img:not([alt])',\n}\n        ),\n      ],[\n        \"aria/roles\",\n        Object.assign(\n          { name: \"aria/roles\" },\n          {\n  message(el) {\n    const rule = rules.match(el);\n    const role = el.getAttribute('role');\n    if (rule.implicitRoles.includes(role)) {\n      return `role \"${role}\" is implicit for this element and not allowed`;\n    }\n    if (!rules.roles.includes(role)) {\n      return `role \"${role}\" is not a known role`;\n    }\n    return `role \"${role}\" is not allowed for this element`;\n  },\n  selector: '[role]',\n  filter(el) {\n    const rule = rules.match(el);\n    const role = el.getAttribute('role');\n    return rule.allowedRoles.includes(role);\n  },\n}\n        ),\n      ],[\n        \"fieldset/checkbox-groups-in-fieldset\",\n        Object.assign(\n          { name: \"fieldset/checkbox-groups-in-fieldset\" },\n          {\n  message: 'All checkbox groups must be within a fieldset',\n  selector: 'input[type=checkbox]',\n  filter: (el) => {\n    if (!el.name) {\n      return true;\n    }\n\n    if (el.form && !(el.form.elements[el.name] instanceof NodeList)) {\n      return true;\n    }\n\n    if (!el.form && $$(`input[type=checkbox][name=\"${cssEscape(el.name)}\"]`).filter(elm => !elm.form).length === 1) {\n      return true;\n    }\n\n    return el.closest('fieldset');\n  },\n}\n        ),\n      ],[\n        \"fieldset/fieldset-has-legend\",\n        Object.assign(\n          { name: \"fieldset/fieldset-has-legend\" },\n          {\n  message: 'All fieldsets must have a legend',\n  selector: 'fieldset',\n  filter: (el) => {\n    const first = el.firstElementChild;\n    return first && first.matches('legend') && first.textContent.trim();\n  },\n}\n        ),\n      ],[\n        \"fieldset/legend-has-fieldset\",\n        Object.assign(\n          { name: \"fieldset/legend-has-fieldset\" },\n          {\n  message: 'All legends must be the first child of a fieldset',\n  selector: ':not(fieldset)>legend,fieldset>legend:not(:first-child)',\n}\n        ),\n      ],[\n        \"fieldset/radios-in-fieldset\",\n        Object.assign(\n          { name: \"fieldset/radios-in-fieldset\" },\n          {\n  message: 'All radio inputs must be within a fieldset',\n  selector: 'input[type=radio]',\n  filter: el => el.closest('fieldset'),\n}\n        ),\n      ],[\n        \"headings\",\n        Object.assign(\n          { name: \"headings\" },\n          {\n  message: 'Headings must be nested correctly',\n  selector: 'h2,h3,h4,h5,h6',\n  allowed: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n  previous(el) {\n    let cursor = el.previousElementSibling;\n    while (cursor && cursor.lastElementChild) {\n      cursor = cursor.lastElementChild;\n    }\n    return cursor;\n  },\n  filter(el) {\n    let cursor = el;\n    const level = +el.nodeName[1];\n    do {\n      cursor = this.previous(cursor) || cursor.parentElement;\n      if (cursor && cursor.matches(this.allowed.join())) {\n        return cursor.matches(this.allowed.slice(level - 2).join(','));\n      }\n    } while (cursor);\n    return false;\n  },\n}\n        ),\n      ],[\n        \"label/buttons-have-labels\",\n        Object.assign(\n          { name: \"label/buttons-have-labels\" },\n          {\n  message: 'buttons must have a label',\n  selector: 'button',\n  filter(el) {\n    let text;\n    if (el.hasAttribute('aria-labelledby')) {\n      text = el.getAttribute('aria-labelledby')\n        .split(/\\s+/)\n        .map(id => document.getElementById(id))\n        .map(node => (node ? node.innerText : ''))\n        .join(' ');\n    } else if (el.hasAttribute('aria-label')) {\n      text = el.getAttribute('aria-label');\n    } else {\n      text = el.innerText;\n    }\n\n    return text.trim();\n  },\n}\n        ),\n      ],[\n        \"label/inputs-are-labelled\",\n        Object.assign(\n          { name: \"label/inputs-are-labelled\" },\n          {\n  message: 'all form elements must have a label',\n  selector: 'input,select,textarea',\n  filter(el) {\n    if (/^(?:submit|reset|button|image|hidden)$/.test(el.type)) {\n      return true;\n    }\n\n    let label;\n\n    if (el.hasAttribute('aria-labelledby')) {\n      label = $(`#${el.getAttribute('aria-labelledby')}`);\n    }\n\n    if (!label && el.hasAttribute('aria-label')) {\n      label = { textContent: el.getAttribute('aria-label') };\n    }\n\n    if (!label) {\n      if (el.id) {\n        label = $(`label[for=\"${cssEscape(el.id)}\"]`);\n      }\n      if (!label) {\n        label = el.closest('label');\n      }\n    }\n\n    return label && label.textContent.trim();\n  },\n}\n        ),\n      ],[\n        \"label/labels-have-inputs\",\n        Object.assign(\n          { name: \"label/labels-have-inputs\" },\n          {\n  message: 'all labels must be linked to a control',\n  selector: 'label',\n  filter: el => el.htmlFor && document.getElementById(el.htmlFor),\n}\n        ),\n      ],[\n        \"label/links-have-labels\",\n        Object.assign(\n          { name: \"label/links-have-labels\" },\n          {\n  message: 'links must have a label',\n  selector: 'a',\n  filter(el) {\n    let text;\n    if (el.hasAttribute('aria-labelledby')) {\n      text = el.getAttribute('aria-labelledby')\n        .split(/\\s+/)\n        .map(id => document.getElementById(id))\n        .map(node => (node ? node.innerText : ''))\n        .join(' ');\n    } else if (el.hasAttribute('aria-label')) {\n      text = el.getAttribute('aria-label');\n    } else {\n      text = el.innerText;\n    }\n\n    return text.trim();\n  },\n}\n        ),\n      ],[\n        \"list-id\",\n        Object.assign(\n          { name: \"list-id\" },\n          {\n  message: 'no datalist found',\n  selector: 'input[list]',\n  filter(el) {\n    const listId = el.getAttribute('list');\n    return listId && $(`datalist[id=\"${cssEscape(listId)}\"]`);\n  },\n}\n        ),\n      ],[\n        \"no-duplicate-anchor-names\",\n        Object.assign(\n          { name: \"no-duplicate-anchor-names\" },\n          {\n  message: 'Name is not unique',\n  selector: 'a[name]',\n  filter(el) {\n    const id = cssEscape(el.name);\n    return id && $$(`a[name=\"${id}\"],[id=\"${id}\"]`).length === 1;\n  },\n}\n        ),\n      ],[\n        \"no-empty-select\",\n        Object.assign(\n          { name: \"no-empty-select\" },\n          {\n  message: 'Selects should have options',\n  selector: 'select',\n  filter: el => $$('option', el).length,\n}\n        ),\n      ],[\n        \"no-links-to-missing-fragments\",\n        Object.assign(\n          { name: \"no-links-to-missing-fragments\" },\n          {\n  message: 'Fragment not found in document',\n  selector: 'a[href*=\"#\"]',\n  removeHash(ob) {\n    return ob.href.replace(/#.*$/, '');\n  },\n  filter(el) {\n    if (this.removeHash(location) !== this.removeHash(el)) {\n      return true;\n    }\n    const id = cssEscape(decodeURI(el.hash.slice(1)));\n    return $(`[id=\"${id}\"],a[name=\"${id}\"]`);\n  },\n}\n        ),\n      ],[\n        \"no-multiple-select\",\n        Object.assign(\n          { name: \"no-multiple-select\" },\n          {\n  message: 'Do not use multiple selects',\n  selector: 'select[multiple]',\n}\n        ),\n      ],[\n        \"no-outside-controls\",\n        Object.assign(\n          { name: \"no-outside-controls\" },\n          {\n  message: 'All controls should be within a form',\n  selector: 'input,textarea,select',\n  filter: el => el.form,\n}\n        ),\n      ],[\n        \"no-reset\",\n        Object.assign(\n          { name: \"no-reset\" },\n          {\n  message: 'Do not use reset buttons',\n  selector: 'input[type=reset],button[type=reset]',\n}\n        ),\n      ],[\n        \"unique-id\",\n        Object.assign(\n          { name: \"unique-id\" },\n          {\n  message: 'id is not unique',\n  selector: '[id]',\n  filter: el => !el.id || $$(`[id=\"${cssEscape(el.id)}\"]`).length === 1,\n}\n        ),\n      ]\n    ]);\n  ",
    "\"use strict\";\nmodule.exports = \"1.0.0\"",
    "\"use strict\";\n/**\n * Rules for aria properties\n *\n * https://w3c.github.io/html-aria/\n */\n\n// Aria properties that can be used on any HTML element\nconst globalAria = [\n  'atomic', 'busy', 'controls', 'current', 'describedby', 'details',\n  'disabled', 'dropeffect', 'errormessage', 'flowto', 'grabbed',\n  'haspopup', 'hidden', 'invalid', 'keyshortcuts', 'label',\n  'labelledby', 'live', 'owns', 'relevant', 'roledescription',\n];\n\n\n// All roles and their allowed aria properties\nconst expanded = {\n  allowed: ['expanded'],\n};\n\nconst roles = {\n  alert: expanded,\n  alertdialog: {\n    allowed: ['expanded', 'modal'],\n  },\n  application: {\n    allowed: ['activedescendant'],\n  },\n  article: expanded,\n  banner: expanded,\n  button: {\n    allowed: ['expanded', 'pressed'],\n  },\n  cell: {},\n  checkbox: {\n    required: ['checked'],\n  },\n  columnheader: {\n    allowed: ['sort', 'readonly', 'required', 'selected', 'expanded'],\n  },\n  combobox: {\n    required: ['expanded'],\n    allowed: ['autocomplete', 'required', 'activedescendant'],\n  },\n  complementary: expanded,\n  contentinfo: expanded,\n  definition: expanded,\n  dialog: expanded,\n  directory: expanded,\n  document: expanded,\n  feed: {\n    allowed: ['setsize', 'expanded'],\n  },\n  figure: expanded,\n  form: expanded,\n  grid: {\n    allowed: ['level', 'multiselectable', 'readonly', 'activedescendant', 'expanded'],\n  },\n  gridcell: {\n    allowed: ['readonly', 'required', 'selected', 'expanded'],\n  },\n  group: {\n    allowed: ['activedescendant', 'expanded'],\n  },\n  heading: {\n    allowed: ['level', 'expanded'],\n  },\n  img: expanded,\n  link: expanded,\n  list: expanded,\n  listbox: {\n    allowed: ['multiselectable', 'required', 'expanded', 'activedescendant', 'expanded'],\n  },\n  listitem: {\n    allowed: ['level', 'posinset', 'setsize', 'expanded'],\n  },\n  log: expanded,\n  main: expanded,\n  marquee: expanded,\n  math: expanded,\n  menu: {\n    allowed: ['activedescendant', 'expanded'],\n  },\n  menubar: {\n    allowed: ['activedescendant'],\n  },\n  menuitem: {},\n  menuitemcheckbox: {\n    required: ['checked'],\n  },\n  menuitemradio: {\n    required: ['checked'],\n    allowed: ['posinset', 'selected', 'setsize'],\n  },\n  navigation: expanded,\n  note: expanded,\n  option: {\n    allowed: ['checked', 'posinset', 'selected', 'setsize'],\n  },\n  presentation: {},\n  progressbar: {\n    allowed: ['valuemax', 'valuemin', 'valuenow', 'valuetext'],\n  },\n  radio: {\n    required: ['checked'],\n    allowed: ['posinset', 'selected', 'setsize'],\n  },\n  radiogroup: {\n    allowed: ['required', 'activedescendant', 'expanded'],\n  },\n  region: expanded,\n  row: {\n    allowed: [\n      'colindex', 'level', 'rowindex', 'selected', 'level', 'selected',\n      'activedescendant', 'expanded',\n    ],\n  },\n  rowgroup: {\n    allowed: ['activedescendant', 'expanded'],\n  },\n  rowheader: {\n    allowed: ['sort', 'readonly', 'required', 'selected', 'expanded'],\n  },\n  scrollbar: {\n    required: ['controls', 'orientation', 'valuemax', 'valuemin', 'valuenow'],\n    allowed: ['expanded'],\n  },\n  search: {\n    allowed: ['expanded', 'orientation'],\n  },\n  searchbox: {\n    allowed: ['activedescendant', 'autocomplete', 'multiline', 'placeholder', 'readonly', 'required'],\n  },\n  separator: {\n    allowed: ['valuetext'],\n  },\n  slider: {\n    required: ['valuemax', 'valuemin', 'valuenow'],\n    allowed: ['orientation', 'valuetext'],\n  },\n  spinbutton: {\n    required: ['valuemax', 'valuemin', 'valuenow'],\n    allowed: ['required', 'valuetext'],\n  },\n  status: expanded,\n  switch: {\n    required: ['checked'],\n  },\n  tab: {\n    allowed: ['selected', 'expanded'],\n  },\n  table: {\n    allowed: ['colcount', 'rowcount'],\n  },\n  tablist: {\n    allowed: ['level', 'activedescendant', 'expanded'],\n  },\n  tabpanel: expanded,\n  term: expanded,\n  textbox: {\n    allowed: ['activedescendant', 'autocomplete', 'multiline', 'placeholder', 'readonly', 'required'],\n  },\n  timer: expanded,\n  toolbar: {\n    allowed: ['activedescendant', 'expanded'],\n  },\n  tooltip: expanded,\n  tree: {\n    allowed: ['multiselectable', 'required', 'activedescendant', 'expanded'],\n  },\n  treegrid: ['level', 'multiselecteable', 'readonly', 'activedescendant', 'expanded', 'required'],\n  treeitem: ['level', 'posinset', 'setsize', 'expanded', 'checked', 'selected'],\n};\n\nconst bool = ['true', 'false'];\nconst tri = ['true', 'false', 'mixed'];\n\n// Allowed aria property values\nconst properties = {\n  activedescendant: 'id',\n  atomic: bool,\n  autocomplete: ['inline', 'list', 'both', 'none'],\n  busy: bool,\n  checked: tri,\n};\n\nexports.globalAria = globalAria;\nexports.roles = roles;\nexports.properties = properties;\n",
    "\"use strict\";\nconst Runner = require('./runner');\nconst Logger = require('./logger');\nconst tests = require('./tests');\nconst utils = require('./utils');\nconst version = require('./version');\nconst rules = require('./rules');\n\nconst Linter = module.exports = class AccessibilityLinter extends Runner {\n  constructor(options) {\n    options = options || {};\n    options.logger = options.logger || new Logger();\n    options.tests = options.tests || tests;\n    super(options);\n\n    this.root = options.root || document;\n  }\n\n  /**\n   * Start looking for issues\n   */\n  observe() {\n    this.run(this.root);\n    this.observer = utils.observe(this.run.bind(this), this.root);\n  }\n\n  /**\n   * Stop looking for issues\n   */\n  stopObserving() {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  }\n};\n\nLinter.Logger = Logger;\nLinter.tests = tests;\nLinter.version = version;\nLinter.rules = rules;\n",
    "\"use strict\";\n/* eslint-disable no-console */\nmodule.exports = class Logger {\n  constructor(docLink) {\n    this.docLink = docLink;\n  }\n\n  error(test, el) {\n    console.error.apply(console, this.message(test, el));\n  }\n\n  warn(test, el) {\n    console.warn.apply(console, this.message(test, el));\n  }\n\n  message(test, el) {\n    return [\n      typeof test.message === 'function' ? test.message(el) : test.message,\n      el,\n      this.getLink(test),\n    ].filter(Boolean);\n  }\n\n  getLink(test) {\n    if (!this.docLink || !test.doc) {\n      return null;\n    }\n\n    return `${this.docLink}#${test.doc}`;\n  }\n};\n",
    "\"use strict\";\n/**\n * Rules for what an element allows\n *\n * https://w3c.github.io/html-aria/\n */\n\nfunction rule(options = {}) {\n  return Object.assign(\n    {\n      roles: false,\n      aria: true,\n      selector: '*',\n      implicitAria: false,\n    },\n    options,\n    {\n      implicit: [].concat(options.implicit || []),\n    }\n  );\n}\n\n// Common rules\nconst noRoleOrAria = rule({ aria: false });\nconst noRole = rule();\nconst anyRole = rule({ roles: true });\n\nexports.defaultRule = anyRole;\n\n// Hash of elements and rules\nexports.rules = {\n  a: [\n    rule({\n      selector: '[href]',\n      implicit: 'link',\n      roles: [\n        'button', 'checkbox', 'menuitem', 'menuitemcheckbox',\n        'menuitemradio', 'radio', 'tab', 'switch', 'treeitem',\n      ],\n      implicitAria: true,\n    }),\n    rule({\n      selector: ':not([href])',\n      roles: true,\n    }),\n  ],\n  address: rule({\n    implicit: ['contentinfo'],\n  }),\n  area: [\n    rule({\n      selector: '[href]',\n      implicit: 'link',\n      implicitAria: true,\n    }),\n  ],\n  article: rule({\n    implicit: 'article',\n    roles: ['presentation', 'document', 'application', 'main', 'region'],\n  }),\n  aside: rule({\n    implicit: 'complementary',\n    roles: ['note', 'region', 'search'],\n  }),\n  audio: rule({\n    roles: ['application'],\n  }),\n  base: noRoleOrAria,\n  body: rule({\n    implicit: ['document'],\n  }),\n  button: [\n    rule({\n      selector: '[type=menu]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio'],\n    }),\n    rule({\n      implicit: 'button',\n      roles: [\n        'checkbox', 'link', 'menuitem', 'menuitemcheckbox',\n        'menuitemradio', 'radio', 'switch', 'tab',\n      ],\n    }),\n  ],\n  caption: noRole,\n  col: noRoleOrAria,\n  colgroup: noRoleOrAria,\n  datalist: rule({\n    implicit: 'listbox',\n    implicitAria: true,\n  }),\n  dd: rule({\n    implicit: 'definition',\n    implicitAria: true,\n  }),\n  details: rule({\n    implicit: 'group',\n    implicitAria: true,\n  }),\n  dialog: rule({\n    implicit: 'dialog',\n    roles: ['alertdialog'],\n    implicitAria: true,\n  }),\n  div: anyRole,\n  dl: rule({\n    implicit: 'list',\n    roles: ['group', 'presentation'],\n  }),\n  dt: rule({\n    implicit: 'listitem',\n    implicitAria: true,\n  }),\n  embed: rule({\n    roles: ['application', 'document', 'presentation', 'img'],\n  }),\n  fieldset: rule({\n    roles: ['group', 'presentation'],\n  }),\n  figure: rule({\n    implicit: 'figure',\n    roles: ['group', 'presentation'],\n  }),\n  footer: [\n    rule({\n      selector: 'article footer,section footer',\n      roles: ['group', 'presentation'],\n    }),\n    rule({\n      implicit: 'contentinfo',\n      roles: ['group', 'presentation'],\n    }),\n  ],\n  form: rule({\n    implicit: 'form',\n    roles: ['search', 'presentation'],\n  }),\n  p: anyRole,\n  pre: anyRole,\n  blockquote: anyRole,\n  h1: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h2: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h3: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h4: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h5: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h6: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  head: noRoleOrAria,\n  header: [\n    rule({\n      selector: 'article header,section header',\n      roles: ['group', 'presentation'],\n    }),\n    rule({\n      implicit: 'banner',\n      roles: ['group', 'presentation'],\n    }),\n  ],\n  hr: rule({\n    implicit: 'separator',\n    roles: ['presentation'],\n    implicitAria: true,\n  }),\n  html: noRoleOrAria,\n  iframe: rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  img: [\n    rule({\n      selector: '[alt=\"\"]',\n      roles: ['presentation'],\n      aria: false,\n    }),\n    rule({\n      implicit: 'img',\n      roles: true,\n    }),\n  ],\n  input: [\n    rule({\n      selector: '[list]:not([type]),[list][type=text],[list][type=search],[list][type=tel],[list][type=url],[list][type=email]',\n      implicit: 'combobox',\n      implicitAria: true,\n    }),\n    rule({\n      selector: '[type=button]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio', 'switch', 'tab'],\n    }),\n    rule({\n      selector: '[type=image]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio', 'switch'],\n    }),\n    rule({\n      selector: '[type=checkbox]',\n      implicit: 'checkbox',\n      roles: ['button', 'menuitemcheckbox', 'switch'],\n    }),\n    rule({\n      selector: ':not([type]),[type=password],[type=tel],[type=text],[type=url]',\n      implicit: 'textbox',\n    }),\n    rule({\n      selector: '[type=email]',\n      implicit: 'textbox',\n      implicitAria: true,\n    }),\n    rule({\n      selector: '[type=hidden]',\n      aria: false,\n    }),\n    rule({\n      selector: '[type=number]',\n      implicit: 'spinbutton',\n      implicitAria: true,\n    }),\n    rule({\n      selector: '[type=radio]',\n      implicit: 'radio',\n      roles: ['menuitemradio'],\n    }),\n    rule({\n      selector: '[type=range]',\n      implicit: 'slider',\n    }),\n    rule({\n      selector: '[type=reset],[type=submit]',\n      implicit: 'button',\n      implicitAria: true,\n    }),\n    rule({\n      selector: '[type=search]',\n      implicit: 'searchbox',\n      implicitAria: true,\n    }),\n    noRole,\n  ],\n  ins: anyRole,\n  del: anyRole,\n  keygen: noRole,\n  label: noRole,\n  legend: noRole,\n  li: [\n    rule({\n      selector: 'ol>li,ul>li',\n      implicit: 'listitem',\n      roles: [\n        'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option',\n        'presentation', 'separator', 'tab', 'treeitem',\n      ],\n    }),\n  ],\n  link: [\n    rule({\n      selector: '[href]',\n      implicit: 'link',\n      globalAria: false,\n    }),\n  ],\n  main: rule({\n    implicit: 'main',\n  }),\n  map: noRoleOrAria,\n  math: rule({\n    implicit: 'math',\n  }),\n  menu: [\n    rule({\n      selector: '[type=toolbar]',\n      implicit: 'toolbar',\n      implicitAria: true,\n    }),\n  ],\n  menuitem: [\n    rule({\n      selector: '[type=command]',\n      implicit: 'menuitem',\n      implicitAria: true,\n    }),\n    rule({\n      selector: '[type=checkbox]',\n      implicit: 'menuitemcheckbox',\n      implicitAria: true,\n    }),\n    rule({\n      selector: '[type=radio]',\n      implicit: 'menuitemradio',\n      implicitAria: true,\n    }),\n  ],\n  meta: noRoleOrAria,\n  meter: rule({\n    implicit: 'progressbar',\n  }),\n  nav: rule({\n    implicit: 'navigation',\n  }),\n  noscript: noRoleOrAria,\n  object: rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  ol: rule({\n    implicit: 'list',\n    roles: [\n      'directory', 'group', 'listbox', 'menu', 'menubar', 'presentation',\n      'radiogroup', 'tablist', 'toolbar', 'tree',\n    ],\n  }),\n  optgroup: rule({\n    implicit: 'group',\n  }),\n  option: [\n    rule({\n      selector: 'select>option,select>optgroup>option,datalist>option',\n      implicit: 'option',\n    }),\n    noRoleOrAria,\n  ],\n  output: rule({\n    implicit: 'status',\n    roles: true,\n  }),\n  param: noRoleOrAria,\n  picture: noRoleOrAria,\n  progress: rule({\n    implicit: 'progressbar',\n    implicitAria: true,\n  }),\n  script: noRoleOrAria,\n  section: rule({\n    implicit: 'region',\n    roles: [\n      'alert', 'alertdialog', 'application', 'banner', 'complementary',\n      'contentinfo', 'dialog', 'document', 'log', 'main', 'marquee',\n      'navigation', 'search', 'status',\n    ],\n  }),\n  select: rule({\n    implicit: 'listbox',\n  }),\n  source: noRoleOrAria,\n  span: anyRole,\n  style: noRoleOrAria,\n  svg: rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  summary: rule({\n    implicit: 'button',\n    implicitAria: true,\n  }),\n  table: rule({\n    implicit: 'table',\n    roles: true,\n  }),\n  template: noRoleOrAria,\n  textarea: rule({\n    implicit: 'textbox',\n  }),\n  tbody: rule({\n    implicit: 'rowgroup',\n    roles: true,\n  }),\n  thead: rule({\n    implicit: 'rowgroup',\n    roles: true,\n  }),\n  tfoot: rule({\n    implicit: 'rowgroup',\n    roles: true,\n  }),\n  title: noRoleOrAria,\n  td: rule({\n    implicit: 'cell',\n    roles: true,\n  }),\n  em: anyRole,\n  strong: anyRole,\n  small: anyRole,\n  s: anyRole,\n  cite: anyRole,\n  q: anyRole,\n  dfn: anyRole,\n  abbr: anyRole,\n  time: anyRole,\n  code: anyRole,\n  var: anyRole,\n  samp: anyRole,\n  kbd: anyRole,\n  sub: anyRole,\n  sup: anyRole,\n  i: anyRole,\n  b: anyRole,\n  u: anyRole,\n  mark: anyRole,\n  ruby: anyRole,\n  rt: anyRole,\n  rp: anyRole,\n  bdi: anyRole,\n  bdo: anyRole,\n  br: anyRole,\n  wbr: anyRole,\n  th: rule({\n    implicit: ['columnheader', 'rowheader'],\n    roles: true,\n  }),\n  tr: rule({\n    implicit: 'row',\n    roles: true,\n  }),\n  track: noRoleOrAria,\n  ul: rule({\n    implicit: 'list',\n    roles: [\n      'directory', 'group', 'listbox', 'menu', 'menubar',\n      'tablist', 'toolbar', 'tree', 'presentation',\n    ],\n  }),\n  video: rule({\n    roles: ['application'],\n  }),\n};\n",
    "\"use strict\";\n/**\n * Rules engine for aria conformance\n *\n * https://w3c.github.io/html-aria/\n */\nconst { rules: elementRules, defaultRule } = require('./role-rules');\nconst { roles } = require('./aria-rules');\n\nconst allRoles = Object.keys(roles);\n\nfunction getAllowedRoles(rule) {\n  if (rule.roles === false) {\n    return [];\n  }\n  if (rule.roles === true) {\n    return allRoles.filter(role => !rule.implicit.includes(role));\n  }\n  return rule.roles;\n}\n\n/**\n * Given an element, return an object with the aria information\n */\nexports.match = function match(el) {\n  const name = el.nodeName.toLowerCase();\n  let rule = elementRules[name];\n  if (Array.isArray(rule)) {\n    rule = rule.find(item => item.selector === '*' || el.matches(item.selector));\n  }\n  rule = rule || defaultRule;\n  const allowedRoles = getAllowedRoles(rule);\n\n  return {\n    implicitRoles: rule.implicit,\n    allowedRoles,\n  };\n};\n\nexports.roles = allRoles;\n",
    "\"use strict\";\nconst { $$ } = require('./utils');\n\nconst dataAttr = 'allylint';\n\nconst addToSetArray = (set, key, value) => set.set(key, (set.get(key) || []).concat(value));\nconst isInSetArray = (set, key, value) => (set.get(key) || []).includes(value);\nconst cssEscape = value => value.replace(/\"/g, '\\\\\"');\n\nmodule.exports = class Runner {\n  constructor(config) {\n    this.tests = config.tests;\n    this.whitelist = config.whitelist || {};\n    this.logger = config.logger;\n\n    // Elements and issues already reported\n    this.reported = new WeakMap();\n    // Elements that are whitelisted\n    this.whitelisted = new WeakMap();\n    // Elements with ignore attributes\n    this.ignored = new WeakMap();\n  }\n\n  /**\n   * Run all the tests\n   * @param {HTMLElement} [context] A context to run the tests within\n   */\n  run(context) {\n    this.tests\n      .forEach((test, name) => this.runTest(test, name, context));\n  }\n\n  /**\n   * Run a single test\n   * @param {Object} test The test to run\n   * @param {HTMLElement} [context] A context to run the tests within\n   */\n  runTest(test, name, context) {\n    $$(test.selector, context)\n      .filter(el => this.filterIgnoreAttribute(el, name))\n      .filter(el => this.filterWhitelist(el, name))\n      .filter(el => !isInSetArray(this.reported, el, name))\n      .filter(el => (test.filter ? !test.filter(el) : true))\n      .forEach((el) => {\n        this.logger.error(test, el);\n        addToSetArray(this.reported, el, name);\n      });\n  }\n\n  /**\n   * Filter elements on the whitelist\n   */\n  filterWhitelist(el, testName) {\n    const whitelist = this.whitelist;\n\n    if (isInSetArray(this.whitelisted, el, testName)) {\n      return false;\n    }\n\n    const isWhitelisted = Object.keys(whitelist).some((selector) => {\n      const testList = whitelist[selector];\n      if (testList && !testList.includes(testName)) {\n        return false;\n      }\n      return el.matches(selector);\n    });\n\n    if (isWhitelisted) {\n      addToSetArray(this.whitelisted, el, testName);\n      return false;\n    }\n    return true;\n  }\n\n  filterIgnoreAttribute(el, testName) {\n    if (isInSetArray(this.ignored, el, testName)) {\n      return false;\n    }\n\n    const ignore = el.matches(\n      `[data-${dataAttr}-ignore=\"\"],[data-${dataAttr}-ignore~=\"${cssEscape(testName)}\"]`\n    );\n\n    if (ignore) {\n      addToSetArray(this.ignored, el, testName);\n      return false;\n    }\n\n    return true;\n  }\n};\n",
    "\"use strict\";\n/**\n * Find DOM nodes from a selector.  The found node can include the supplied context\n * @param {String|NodeList} selector\n * @param {HTMLElement} [context]\n */\nexports.$$ = function $$(selector, context) {\n  const root = context || document;\n  const els = Array.from(root.querySelectorAll(selector));\n  if (context && context instanceof Element && context.matches(selector)) {\n    els.push(context);\n  }\n  return els;\n};\n\nexports.$ = function $(selector, context) {\n  return exports.$$(selector, context)[0];\n};\n\nexports.cssEscape = function cssEscape(name) {\n  return name.replace(/[\"\\\\]/g, '\\\\$&');\n};\n\n/**\n * Observe for child list mutations\n * @param {Function} fn function to call for each mutation\n */\nexports.observe = function mutationObserver(fn, root) {\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      Array.from(mutation.addedNodes)\n        .filter(node => node.nodeType === Node.ELEMENT_NODE)\n        .forEach(node => fn(node));\n    });\n  });\n  observer.observe(root, { subtree: true, childList: true });\n  return observer;\n};\n"
  ]
}