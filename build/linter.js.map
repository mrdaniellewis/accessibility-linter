{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "lib/rules/aria/attribute-values/rule.js",
    "lib/rules/aria/deprecated-attributes/rule.js",
    "lib/rules/aria/immutable-role/rule.js",
    "lib/rules/aria/invalid-attributes/rule.js",
    "lib/rules/aria/landmark/one-banner/rule.js",
    "lib/rules/aria/landmark/one-contentinfo/rule.js",
    "lib/rules/aria/landmark/one-main/rule.js",
    "lib/rules/aria/landmark/prefer-main/rule.js",
    "lib/rules/aria/no-focusable-hidden/rule.js",
    "lib/rules/aria/no-focusable-role-none/rule.js",
    "lib/rules/aria/no-none-without-presentation/rule.js",
    "lib/rules/aria/one-role/rule.js",
    "lib/rules/aria/roles/rule.js",
    "lib/rules/colour-contrast/aa/rule.js",
    "lib/rules/colour-contrast/aaa/rule.js",
    "lib/rules/data-attributes/rule.js",
    "lib/rules/details-and-summary/rule.js",
    "lib/rules/elements/obsolete/rule.js",
    "lib/rules/elements/unknown/rule.js",
    "lib/rules/fieldset-and-legend/rule.js",
    "lib/rules/headings/rule.js",
    "lib/rules/ids/form-attribute/rule.js",
    "lib/rules/ids/imagemap-ids/rule.js",
    "lib/rules/ids/labels-have-inputs/rule.js",
    "lib/rules/ids/list-id/rule.js",
    "lib/rules/ids/no-duplicate-anchor-names/rule.js",
    "lib/rules/ids/unique-id/rule.js",
    "lib/rules/labels/area/rule.js",
    "lib/rules/labels/aria-command/rule.js",
    "lib/rules/labels/controls/rule.js",
    "lib/rules/labels/group/rule.js",
    "lib/rules/labels/headings/rule.js",
    "lib/rules/labels/img/rule.js",
    "lib/rules/labels/links/rule.js",
    "lib/rules/labels/tabindex/rule.js",
    "lib/rules/lang/rule.js",
    "lib/rules/multiple-in-group/rule.js",
    "lib/rules/no-button-without-type/rule.js",
    "lib/rules/no-consecutive-brs/rule.js",
    "lib/rules/no-empty-select/rule.js",
    "lib/rules/no-links-as-buttons/rule.js",
    "lib/rules/no-links-to-missing-fragments/rule.js",
    "lib/rules/no-multiple-select/rule.js",
    "lib/rules/no-outside-controls/rule.js",
    "lib/rules/no-reset/rule.js",
    "lib/rules/no-unassociated-labels/rule.js",
    "lib/rules/title/rule.js",
    "lib/_stream_47.js",
    "lib/_stream_48.js",
    "lib/config/allowed-aria.js",
    "lib/config/aria-attributes.js",
    "lib/config/elements.js",
    "lib/config/index.js",
    "lib/config/roles.js",
    "lib/index.js",
    "lib/linter.js",
    "lib/logger.js",
    "lib/rules/rule.js",
    "lib/runner.js",
    "lib/support/constants.js",
    "lib/support/element-cache.js",
    "lib/support/extended-array.js",
    "lib/support/set-cache.js",
    "lib/utils/aria.js",
    "lib/utils/contrast.js",
    "lib/utils/cssEscape.js",
    "lib/utils/hidden.js",
    "lib/utils/index.js",
    "lib/utils/name.js",
    "lib/utils/selectors.js",
    "lib/utils/style.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACflbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClhzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvhpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst config = require('../../../config');\nconst ExtendedArray = require('../../../support/extended-array');\nconst { rSpace } = require('../../../support/constants');\n\nconst checkers = {\n  string(value) {\n    return !value.trim() ? 'must be a non-empty string' : null;\n  },\n\n  integer(value) {\n    return /^-?\\d+$/.test(value) ? null : 'must be an integer';\n  },\n\n  number(value) {\n    // Although not entirely clear, let us assume the number follows the html5 specification\n    return /^-?(?:\\d+\\.\\d+|\\d+|\\.\\d+)(?:[eE][+-]?\\d+)?$/.test(value) ? null : 'must be a floating point number';\n  },\n\n  token(value, { tokens }) {\n    return tokens.includes(value) ? null : `must be one of: ${tokens.join(', ')}`;\n  },\n\n  tokenlist(value, { tokens, alone }) {\n    const values = value.split(/\\s+/).filter(Boolean);\n    const unknown = values.filter(token => !tokens.includes(token));\n    if (values.length === 0) {\n      return `must be one or more of: ${tokens.join(', ')}`;\n    }\n    if (unknown.length) {\n      return `contains unknown values: ${unknown.join(', ')}`;\n    }\n    if (alone && values.length > 1) {\n      const alones = values.filter(token => alone.includes(token));\n      if (alones.length) {\n        return `should only contain the following values on their own: ${alones.join(', ')}`;\n      }\n    }\n    return null;\n  },\n\n  id(value) {\n    if (!value.trim()) {\n      return 'must be an element id';\n    }\n\n    if (rSpace.test(value)) {\n      return 'must not contain spaces';\n    }\n\n    return document.getElementById(value) ? null : `no element can be found with an id of ${value}`;\n  },\n\n  idlist(value) {\n    if (!value.trim()) {\n      return 'must be a list of one of more ids';\n    }\n    const missing = value.split(rSpace).filter(id => !document.getElementById(id));\n    if (!missing.length) {\n      return null;\n    }\n    return missing.map(id => `no element can be found with an id of ${id}`);\n  },\n};\n\nmodule.exports = class extends Rule {\n  selector() {\n    return this._selector || (this._selector = Object.keys(config.ariaAttributes).map(name => `[aria-${name}]`).join(','));\n  }\n\n  test(el) {\n    return ExtendedArray.from(el.attributes)\n      .map(({ name, value }) => {\n        if (!name.startsWith('aria-')) {\n          return null;\n        }\n        name = name.slice(5);\n        const description = config.ariaAttributes[name];\n        if (!description) {\n          return null;\n        }\n        return new ExtendedArray()\n          .concat(checkers[description.values.type](value, description.values))\n          .compact()\n          .map(message => `aria-${name} ${message}`);\n      })\n      .compact()\n      .flatten();\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst config = require('../../../config');\n\nmodule.exports = class extends Rule {\n  deprecated() {\n    return this._deprecated || (this._deprecated = Object.entries(config.ariaAttributes)\n      .filter(([, value]) => value.deprecated)\n      .map(([name]) => `aria-${name}`));\n  }\n\n  selector() {\n    return this.deprecated().map(name => `[${name}]`).join(',');\n  }\n\n  test(el) {\n    return Array.from(el.attributes)\n      .filter(({ name }) => this.deprecated().includes(name))\n      .map(({ name }) => `${name} is deprecated`);\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  constructor(settings) {\n    super(settings);\n    this.history = new WeakMap();\n  }\n\n  selector() {\n    return '[role]';\n  }\n\n  test(el) {\n    const role = el.getAttribute('role');\n    if (this.history.has(el)) {\n      if (this.history.get(el) !== role) {\n        return 'an elements role must not be modified';\n      }\n    } else {\n      this.history.set(el, role);\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst config = require('../../../config');\n\nmodule.exports = class extends Rule {\n  setDefaults() {\n    this.includeHidden = true;\n  }\n\n  selector() {\n    return '*';\n  }\n\n  test(el) {\n    const invalid = Array.from(el.attributes)\n      .map(attr => attr.name)\n      .filter(name => name.indexOf('aria-') === 0)\n      .map(name => name.slice(5))\n      .filter(name => !Object.keys(config.ariaAttributes).includes(name));\n\n    if (invalid.length) {\n      return `element has unknown aria attribute${invalid.length > 1 ? 's' : ''}: ${invalid.map(name => `aria-${name}`).join(', ')}`;\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'header,[role~=banner]';\n  }\n\n  get role() {\n    return 'banner';\n  }\n\n  get message() {\n    return `there should only be one element with a role of ${this.role} in each document or application`;\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, this.role)) {\n      return null;\n    }\n\n    const found = utils.$$(this.selector())\n      .filter(elm => utils.aria.hasRole(elm, this.role))\n      .groupBy(elm => utils.aria.closestRole(elm, ['application', 'document']))\n      .filter(group => group.includes(el))\n      .flatten();\n\n    if (found.length > 1) {\n      return this.message;\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst BannerRule = require('../one-banner/rule');\n\nmodule.exports = class extends BannerRule {\n  selector() {\n    return 'footer,[role~=contentinfo]';\n  }\n\n  get role() {\n    return 'contentinfo';\n  }\n};\n",
    "\"use strict\";\nconst BannerRule = require('../one-banner/rule');\n\nmodule.exports = class extends BannerRule {\n  selector() {\n    return 'main,[role~=main]';\n  }\n\n  get role() {\n    return 'main';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return ':not(main)[role~=main]';\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, 'main')) {\n      return null;\n    }\n\n    return 'use a main element for role=main';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nconst focusable = ['button:not(:disabled)', 'input:not([type=\"hidden\"]):not(:disabled)', 'select:not(:disabled)', 'textarea:not(:disabled)', 'a[href]', 'area[href]', '[tabindex]'];\n\nmodule.exports = class extends Rule {\n  selector() {\n    return this._selector || (this._selector = focusable.map(selector => `${selector}[aria-hidden=\"true\"]`).join(','));\n  }\n\n  test(el, utils) {\n    if (el.nodeName.toLowerCase() === 'area' || !utils.hidden(el)) {\n      return 'do not mark focusable elements with `aria-hidden=\"true\"`';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nconst focusable = 'button,input:not([type=\"hidden\"]),meter,output,progress,select,textarea,a[href],area[href],[tabindex]';\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[role~=none],[role~=presentation]';\n  }\n\n  test(el, utils) {\n    if (el.matches(focusable) && utils.aria.hasRole(el, ['none', 'presentation'])) {\n      return 'do not mark focusable elements with a role of presentation or none';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[role=\"none\"]';\n  }\n\n  test() {\n    return 'use a role of \"none presentation\" to support older user-agents';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[role]';\n  }\n\n  test(el) {\n    const roles = el.getAttribute('role').split(rSpace).filter(Boolean);\n    if (roles.join(' ') === 'none presentation') {\n      return null;\n    }\n\n    if (roles.length > 1) {\n      return 'do not add multiple roles';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst config = require('../../../config');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[role]';\n  }\n\n  test(el, utils) {\n    const role = el.getAttribute('role').trim();\n    if (!role) {\n      return 'role attribute should not be empty';\n    }\n\n    let error;\n    const allowed = utils.aria.allowed(el);\n    role.split(rSpace).some((name) => {\n      if (!config.roles[name]) {\n        error = `role \"${name}\" is not a known role`;\n        return true;\n      }\n\n      if (config.roles[name].abstract) {\n        error = `role \"${name}\" is an abstract role and should not be used`;\n        return true;\n      }\n\n      if (allowed.implicit.includes(name)) {\n        error = `role \"${name}\" is implicit for this element and should not be specified`;\n        return true;\n      }\n\n      if (allowed.roles === '*') {\n        return null;\n      }\n\n      if (!allowed.roles.includes(name)) {\n        error = `role \"${name}\" is not allowed for this element`;\n      }\n\n      return null;\n    });\n\n    return error;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst ExtendedArray = require('../../../support/extended-array');\n\n/**\n *  Check the colour contrast for all visible nodes with child text nodes\n */\nmodule.exports = class extends Rule {\n  setDefaults() {\n    this.enabled = false;\n    this.min = 4.5;\n    this.minLarge = 3;\n  }\n\n  run(context, filter = () => true, utils) {\n    context = context || document;\n    return this.iterate(context, utils, false)\n      .filter(filter)\n      .map(el => this.findAncestor(el, utils))\n      .unique()\n      .filter(filter)\n      .map(el => [el, this.test(el, utils)])\n      .filter(([, ratio]) => ratio)\n      .map(([el, ratio]) => this.message(el, ratio));\n  }\n\n  iterate(node, utils, iterateSiblings) {\n    let found = new ExtendedArray();\n    let cursor = node;\n    while (cursor) {\n      if (!utils.hidden(cursor, { noAria: true })) {\n        if (this.hasTextNode(cursor)) {\n          found.push(cursor);\n        }\n\n        if (cursor.firstElementChild) {\n          found = found.concat(this.iterate(cursor.firstElementChild, utils, true));\n        }\n      }\n\n      if (iterateSiblings) {\n        cursor = cursor.nextElementSibling;\n      } else {\n        cursor = null;\n      }\n    }\n\n    return found;\n  }\n\n  // Does the element have a text node with content\n  hasTextNode(el) {\n    return Array.from(el.childNodes)\n      .filter(node => node.nodeType === Node.TEXT_NODE)\n      .some(node => node.data.trim());\n  }\n\n  // Find the last ancestor or self with the same colours\n  findAncestor(el, utils) {\n    const colour = utils.contrast.textColour(el);\n    const backgroundColour = utils.contrast.backgroundColour(el);\n\n    let cursor = el;\n    while (cursor.parentNode !== document) {\n      const parent = cursor.parentNode;\n      if (utils.contrast.textColour(parent) !== colour\n        && utils.contrast.backgroundColour(parent) !== backgroundColour) {\n        break;\n      }\n      cursor = parent;\n    }\n\n    return cursor;\n  }\n\n  // Does the element meet AAA or AA standards\n  test(el, utils) {\n    const ratio = parseFloat(utils.contrast.textContrast(el).toFixed(2));\n\n    if (ratio >= this.min) {\n      return null;\n    }\n\n    const fontSize = parseFloat(utils.style(el, 'fontSize'));\n    const large = fontSize >= 24 /* 18pt */ || (fontSize >= 18.66 /* 14pt */ && utils.style(el, 'fontWeight') >= 700);\n\n    if (large && ratio >= this.minLarge) {\n      return null;\n    }\n\n    return ratio;\n  }\n\n  message(el, ratio) {\n    return { el, message: `contrast is too low ${parseFloat(ratio.toFixed(2))}:1`, type: this.type };\n  }\n};\n",
    "\"use strict\";\nconst ColourContrastAARule = require('../aa/rule.js');\n\nmodule.exports = class extends ColourContrastAARule {\n  setDefaults() {\n    this.min = 7;\n    this.minLarge = 4.5;\n    this.enabled = false;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[data],[data-]';\n  }\n\n  test() {\n    return 'data is an attribute prefix';\n  }\n};\n",
    "\"use strict\";\nconst FieldsetRule = require('../fieldset-and-legend/rule');\n\nmodule.exports = class extends FieldsetRule {\n  get parent() {\n    return 'details';\n  }\n\n  get child() {\n    return 'summary';\n  }\n\n  isHidden(el, utils) {\n    // summary will be hidden if details is not open\n    return el.nodeName.toLowerCase() !== 'summary' && utils.hidden(el);\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst config = require('../../../config');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return this._selector || (this._selector = Object.keys(config.elements).filter(el => config.elements[el].obsolete).join(','));\n  }\n\n  test() {\n    return 'do not use obsolete elements';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst config = require('../../../config');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return this._selector || (this._selector = Object.keys(config.elements).map(name => `:not(${name})`).join(''));\n  }\n\n  test(el) {\n    if (el.closest('svg,math')) {\n      return null;\n    }\n    return 'unknown element';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nfunction getFirstChild(el) {\n  let cursor = el.firstChild;\n  while (cursor instanceof Text && !cursor.data.trim()) {\n    cursor = cursor.nextSibling;\n  }\n  return cursor;\n}\n\nmodule.exports = class extends Rule {\n  get parent() {\n    return 'fieldset';\n  }\n\n  get child() {\n    return 'legend';\n  }\n\n  isHidden(el, utils) {\n    return utils.hidden(el);\n  }\n\n  selector() {\n    return `${this.parent},${this.child}`;\n  }\n\n  test(el, utils) {\n    if (this.isHidden(el, utils)) {\n      return null;\n    }\n\n    if (el.nodeName.toLowerCase() === this.parent) {\n      const firstChild = getFirstChild(el);\n      if (firstChild\n        && firstChild instanceof HTMLElement\n        && firstChild.nodeName.toLowerCase() === this.child\n        && !utils.hidden(firstChild)) {\n        return null;\n      }\n      return `a <${this.parent}> must have a visible <${this.child}> as their first child`;\n    }\n\n    // Legend\n    if (el.parentNode.nodeName.toLowerCase() === this.parent) {\n      const firstChild = getFirstChild(el.parentNode);\n      if (firstChild === el) {\n        return null;\n      }\n    }\n    return `a <${this.child}> must be the first child of a <${this.parent}>`;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nconst selector = 'h2,h3,h4,h5,h6,[role~=heading]';\n\nfunction previous(el) {\n  let cursor = el.previousElementSibling;\n  while (cursor && cursor.lastElementChild) {\n    cursor = cursor.lastElementChild;\n  }\n  return cursor;\n}\n\nfunction getLevel(el) {\n  return /h[1-6]/i.test(el.nodeName) ? +el.nodeName[1] : (+el.getAttribute('aria-level') || 2);\n}\n\nmodule.exports = class extends Rule {\n  selector() {\n    return `${selector}:not([aria-level=\"1\"])`;\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, 'heading') || utils.hidden(el)) {\n      return null;\n    }\n    let cursor = el;\n    const level = getLevel(el);\n    do {\n      cursor = previous(cursor) || cursor.parentElement;\n      if (cursor && cursor.matches(`h1,${selector}`) && !utils.hidden(cursor) && utils.aria.hasRole(cursor, 'heading')) {\n        const previousLevel = getLevel(cursor);\n        if (level <= previousLevel + 1) {\n          return null;\n        }\n        break;\n      }\n    } while (cursor);\n    return 'headings must be nested correctly';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nconst selector = ['button', 'fieldset', 'input', 'object', 'output', 'select', 'textarea'].map(name => `${name}[form]`).join(',');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return selector;\n  }\n\n  test(el) {\n    const formId = el.getAttribute('form');\n    if (!formId) {\n      return 'form attribute should be an id';\n    }\n\n    if (rSpace.test(formId)) {\n      return 'form attribute should not contain spaces';\n    }\n\n    const form = document.getElementById(formId);\n    if (!form) {\n      return `cannot find element for form attribute with id \"${formId}\"`;\n    }\n\n    if (form.nodeName.toLowerCase() !== 'form') {\n      return 'form attribute does not point to a form';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'map';\n  }\n\n  test(el, utils) {\n    if (!el.name) {\n      return 'name attribute is required';\n    }\n\n    if (rSpace.test(el.name)) {\n      return 'name attribute must not contain spaces';\n    }\n\n    const name = el.name.toLowerCase();\n    const mapNames = utils.$$('map[name]').map(map => map.name.toLowerCase());\n    if (mapNames.filter(item => item === name).length > 1) {\n      return 'name attribute must be case-insensitively unique';\n    }\n\n    const imgUseMaps = utils.$$('img[usemap]').map(img => img.useMap.toLowerCase());\n    if (!imgUseMaps.includes(`#${name}`)) {\n      return 'name attribute should be referenced by an img usemap attribute';\n    }\n\n    if (el.id && el.id !== el.name) {\n      return 'if the id attribute is present it must equal the name attribute';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'label[for]';\n  }\n\n  test(el) {\n    if (!el.htmlFor) {\n      return 'for attribute should not be empty';\n    }\n\n    if (rSpace.test(el.htmlFor)) {\n      return 'for attribute should not contain spaces';\n    }\n\n    if (document.getElementById(el.htmlFor)) {\n      return null;\n    }\n\n    return 'no element can be found with id of id attribute';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'input[list]';\n  }\n\n  test(el, utils) {\n    const listId = el.getAttribute('list');\n\n    if (!listId) {\n      return 'list attribute should not be empty';\n    }\n\n    if (rSpace.test(listId)) {\n      return 'list attribute should not contain spaces';\n    }\n\n    if (listId && utils.$(`datalist[id=\"${utils.cssEscape(listId)}\"]`)) {\n      return null;\n    }\n    return 'no datalist found';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a[name]';\n  }\n\n  test(el, utils) {\n    if (!el.name) {\n      return 'name should not be empty';\n    }\n    if (el.id && el.id !== el.name) {\n      return 'if the id attribute is present it must equal the name attribute';\n    }\n    const id = utils.cssEscape(el.name);\n    if (id && utils.$$(`a[name=\"${id}\"],[id=\"${id}\"]`).length > 1) {\n      return 'name is not unique';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[id]';\n  }\n\n  test(el, utils) {\n    if (!el.id) {\n      return 'id should not be empty';\n    }\n    if (rSpace.test(el.id)) {\n      return 'id should not contain space characters';\n    }\n    if (!el.id || utils.$$(`[id=\"${utils.cssEscape(el.id)}\"]`).length > 1) {\n      return 'id is not unique';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'area[href]';\n  }\n\n  test(el, utils) {\n    const map = el.closest('map');\n    if (!map || !map.name) {\n      return null;\n    }\n    const img = utils.$(`img[usemap=\"#${utils.cssEscape(map.name)}\"]`);\n    if (!img || utils.hidden(img)) {\n      return null;\n    }\n    if (el.alt) {\n      return null;\n    }\n    return 'area with a href must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector(utils) {\n    return this._selector || (this._selector = utils.aria.rolesOfType('command').map(role => `[role~=\"${role}\"]`).join(','));\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, utils.aria.rolesOfType('command'))) {\n      return null;\n    }\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'elements with a role with a superclass of command must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'button,input:not([type=\"hidden\"]),meter,output,progress,select,textarea';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'form controls must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'fieldset,details,[role~=group],[role~=radiogroup]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)\n      || (el.nodeName.toLowerCase() !== 'fieldset' && !utils.aria.hasRole(el, ['group', 'radiogroup']))\n      || utils.accessibleName(el)) {\n      return null;\n    }\n    const name = el.matches('fieldset,details') ? el.nodeName.toLowerCase() : utils.aria.getRole(el);\n    return `${name} must have a label`;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'h1,h2,h3,h4,h5,h6,[role~=\"heading\"]';\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, 'heading')) {\n      return null;\n    }\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'headings must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  setDefaults() {\n    this.includeHidden = true;\n  }\n\n  selector() {\n    return 'img:not([alt])';\n  }\n\n  test() {\n    return 'missing alt attribute';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a[href]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'links with a href must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[tabindex]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'focusable elements must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\n// Language tags are defined in http://www.ietf.org/rfc/bcp/bcp47.txt\nconst match = /^((en-gb-oed)|([a-z]{2,3}(-[a-z]{3})?(-[a-z]{4})?(-[a-z]{2}|-\\d{3})?(-[a-z0-9]{5,8}|-(\\d[a-z0-9]{3}))*))$/i;\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'html';\n  }\n\n  test(el) {\n    if (!el.lang) {\n      return 'missing lang attribute';\n    }\n    if (!match.test(el.lang)) {\n      return 'language code is invalid';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nconst excludeTypes = ['hidden', 'image', 'submit', 'reset', 'button'];\nconst excludeSelector = excludeTypes.map(type => `:not([type=${type}])`).join('');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return this._selector || (this._selector = `input[name]${excludeSelector},textarea[name],select[name],object[name]`);\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n    let group;\n\n    if (el.form) {\n      const elements = el.form.elements[el.name];\n      if (elements instanceof Node) {\n        return null;\n      }\n      group = Array.from(elements)\n        .filter(elm => !excludeTypes.includes(elm.type))\n        .filter(elm => !utils.hidden(elm));\n    } else {\n      const namePart = `[name=\"${utils.cssEscape(el.name)}\"]`;\n      group = utils.$$(`input${namePart}${excludeSelector},textarea${namePart},select${namePart},object${namePart}`)\n        .filter(elm => !elm.form)\n        .filter(elm => !utils.hidden(elm));\n    }\n\n    if (group.length === 1 || el.closest('fieldset') || utils.aria.closestRole(el, ['group', 'radiogroup'])) {\n      return null;\n    }\n\n    return 'multiple inputs with the same name should be in a fieldset, group or radiogroup';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'button:not([type])';\n  }\n\n  test() {\n    return 'all buttons should have a type attribute';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nfunction isBr(el) {\n  return el instanceof Element && el.nodeName.toLowerCase() === 'br';\n}\n\nfunction previousElementIsBr(el, utils) {\n  while ((el = el.previousSibling)) {\n    if ((el instanceof Element && !utils.hidden(el)) || (el instanceof Text && el.data.trim())) {\n      break;\n    }\n  }\n  return isBr(el);\n}\n\nfunction nextElementIsBr(el, utils) {\n  while ((el = el.nextSibling)) {\n    if ((el instanceof Element && !utils.hidden(el)) || (el instanceof Text && el.data.trim())) {\n      break;\n    }\n  }\n  return isBr(el);\n}\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'br + br';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el) || !previousElementIsBr(el, utils) || nextElementIsBr(el, utils)) {\n      return null;\n    }\n\n    return 'do not use <br>s for spacing';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'select:not(:disabled)';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el) || utils.$$('option', el).length) {\n      return null;\n    }\n    return 'selects should have options';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a[role=button],a[href=\"#\"],a[href=\"#!\"],a[href^=\"javascript:\"]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n    return 'use a button instead of a link';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nfunction removeHash(ob) {\n  return ob.href.replace(/#.*$/, '');\n}\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a[href*=\"#\"]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n    if (removeHash(window.location) !== removeHash(el)) {\n      return null;\n    }\n    const id = utils.cssEscape(decodeURI(el.hash.slice(1)));\n    const found = utils.$(`[id=\"${id}\"],a[name=\"${id}\"]`);\n\n    if (!found) {\n      return 'fragment not found in document';\n    }\n\n    if (utils.hidden(found)) {\n      return 'link target is hidden';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'select[multiple]:not(:disabled)';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n    return 'do not use multiple selects';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'input,textarea,select,button:not([type]),button[type=\"submit\"],button[type=\"reset\"]';\n  }\n\n  test(el, utils) {\n    if (el.form || utils.hidden(el) || el.disabled) {\n      return null;\n    }\n    return 'all controls should be associated with a form';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'input[type=reset],button[type=reset]';\n  }\n\n  test() {\n    return 'do not use reset buttons';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nconst labelable = 'input:not([type=hidden]),select,textarea,button,meter,output,progress';\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'label';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n\n    if (el.htmlFor) {\n      const forEl = document.getElementById(el.htmlFor);\n      if (!forEl) {\n        return 'label is not labelling an element';\n      }\n      if (utils.hidden(forEl)) {\n        return 'label is labelling a hidden element';\n      }\n      return null;\n    }\n\n    const targets = utils.$$(labelable, el);\n\n    if (targets.length && !targets.filter(elm => !utils.hidden(elm)).length) {\n      return 'label is labelling a hidden element';\n    }\n\n    if (!targets.length) {\n      return 'label is not labelling an element';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'html';\n  }\n\n  test() {\n    if (document.title.trim()) {\n      return null;\n    }\n    return 'document must have a title';\n  }\n};\n",
    "\"use strict\";\nmodule.exports = [\"aria/attribute-values\",\"aria/deprecated-attributes\",\"aria/immutable-role\",\"aria/invalid-attributes\",\"aria/landmark/one-banner\",\"aria/landmark/one-contentinfo\",\"aria/landmark/one-main\",\"aria/landmark/prefer-main\",\"aria/no-focusable-hidden\",\"aria/no-focusable-role-none\",\"aria/no-none-without-presentation\",\"aria/one-role\",\"aria/roles\",\"colour-contrast/aa\",\"colour-contrast/aaa\",\"data-attributes\",\"details-and-summary\",\"elements/obsolete\",\"elements/unknown\",\"fieldset-and-legend\",\"headings\",\"ids/form-attribute\",\"ids/imagemap-ids\",\"ids/labels-have-inputs\",\"ids/list-id\",\"ids/no-duplicate-anchor-names\",\"ids/unique-id\",\"labels/area\",\"labels/aria-command\",\"labels/controls\",\"labels/group\",\"labels/headings\",\"labels/img\",\"labels/links\",\"labels/tabindex\",\"lang\",\"multiple-in-group\",\"no-button-without-type\",\"no-consecutive-brs\",\"no-empty-select\",\"no-links-as-buttons\",\"no-links-to-missing-fragments\",\"no-multiple-select\",\"no-outside-controls\",\"no-reset\",\"no-unassociated-labels\",\"title\"];",
    "\"use strict\";\nmodule.exports = \"1.9.0\"",
    "\"use strict\";\n/**\n * Aria rules for a HTML element\n *\n * https://w3c.github.io/html-aria/\n */\n\n/**\n * Describes what roles and aria attributes all allowed on an element\n *\n * @typedef {Object} allowedAria\n * @property {String} selector\n * @property {String[]} implicitRoles\n * @property {String[]} roles\n * @property {Boolean} anyRole\n */\n\n/**\n * Generate a rule\n * @returns {allowedAria}\n */\nfunction rule({ selector = '*', implicit = [], roles = [], anyRole = false }) {\n  return {\n    selector,\n    implicit: [].concat(implicit),\n    roles: anyRole ? '*' : roles,\n  };\n}\n\n// Common rules\n// TODO: include aria attribute rules\nconst noRoleOrAria = rule({});\nconst noRole = rule({});\nconst anyRole = rule({ anyRole: true });\n\n/** @enum {(allowedAria|allowedAria[])} */\nmodule.exports = {\n  _default: anyRole,\n  a: [\n    rule({\n      selector: '[href]',\n      implicit: 'link',\n      roles: [\n        'button', 'checkbox', 'menuitem', 'menuitemcheckbox',\n        'menuitemradio', 'radio', 'tab', 'switch', 'treeitem',\n      ],\n    }),\n    rule({\n      selector: ':not([href])',\n      anyRole: true,\n    }),\n  ],\n  address: rule({\n    implicit: ['contentinfo'],\n  }),\n  area: [\n    rule({\n      selector: '[href]',\n      implicit: 'link',\n    }),\n  ],\n  article: rule({\n    implicit: 'article',\n    roles: ['presentation', 'document', 'application', 'main', 'region'],\n  }),\n  aside: rule({\n    implicit: 'complementary',\n    roles: ['note', 'region', 'search'],\n  }),\n  audio: rule({\n    roles: ['application'],\n  }),\n  base: noRoleOrAria,\n  body: rule({\n    implicit: ['document'],\n  }),\n  button: [\n    rule({\n      selector: '[type=menu]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio'],\n    }),\n    rule({\n      implicit: 'button',\n      roles: [\n        'checkbox', 'link', 'menuitem', 'menuitemcheckbox',\n        'menuitemradio', 'radio', 'switch', 'tab',\n      ],\n    }),\n  ],\n  canvas: anyRole,\n  caption: noRole,\n  col: noRoleOrAria,\n  colgroup: noRoleOrAria,\n  data: anyRole,\n  datalist: rule({\n    implicit: 'listbox',\n  }),\n  dd: rule({\n    implicit: 'definition',\n  }),\n  details: rule({\n    implicit: 'group',\n  }),\n  dialog: rule({\n    implicit: 'dialog',\n    roles: ['alertdialog'],\n  }),\n  div: anyRole,\n  dl: rule({\n    implicit: 'list',\n    roles: ['group', 'presentation'],\n  }),\n  dt: rule({\n    implicit: 'listitem',\n  }),\n  embed: rule({\n    roles: ['application', 'document', 'presentation', 'img'],\n  }),\n  fieldset: rule({\n    roles: ['group', 'presentation'],\n  }),\n  figcaption: rule({\n    roles: ['group', 'presentation'],\n  }),\n  figure: rule({\n    implicit: 'figure',\n    roles: ['group', 'presentation'],\n  }),\n  footer: [\n    rule({\n      selector: 'article footer,section footer',\n      roles: ['group', 'presentation'],\n    }),\n    rule({\n      implicit: 'contentinfo',\n      roles: ['group', 'presentation'],\n    }),\n  ],\n  form: rule({\n    implicit: 'form',\n    roles: ['search', 'presentation'],\n  }),\n  p: anyRole,\n  pre: anyRole,\n  blockquote: anyRole,\n  h1: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h2: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h3: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h4: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h5: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h6: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  head: noRoleOrAria,\n  header: [\n    rule({\n      selector: 'article header,section header',\n      roles: ['group', 'presentation'],\n    }),\n    rule({\n      implicit: 'banner',\n      roles: ['group', 'presentation'],\n    }),\n  ],\n  hr: rule({\n    implicit: 'separator',\n    roles: ['presentation'],\n  }),\n  html: noRoleOrAria,\n  iframe: rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  img: [\n    rule({\n      selector: '[alt=\"\"]',\n      roles: ['presentation'],\n      aria: false,\n    }),\n    rule({\n      implicit: 'img',\n      anyRole: true,\n    }),\n  ],\n  input: [\n    rule({\n      selector: '[list]:not([type]),[list][type=text],[list][type=search],[list][type=tel],[list][type=url],[list][type=email]',\n      implicit: 'combobox',\n    }),\n    rule({\n      selector: '[type=button]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio', 'switch', 'tab'],\n    }),\n    rule({\n      selector: '[type=image]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio', 'switch'],\n    }),\n    rule({\n      selector: '[type=checkbox]',\n      implicit: 'checkbox',\n      roles: ['button', 'menuitemcheckbox', 'switch'],\n    }),\n    rule({\n      selector: ':not([type]),[type=password],[type=tel],[type=text],[type=url]',\n      implicit: 'textbox',\n    }),\n    rule({\n      selector: '[type=email]',\n      implicit: 'textbox',\n    }),\n    rule({\n      selector: '[type=hidden]',\n      aria: false,\n    }),\n    rule({\n      selector: '[type=number]',\n      implicit: 'spinbutton',\n    }),\n    rule({\n      selector: '[type=radio]',\n      implicit: 'radio',\n      roles: ['menuitemradio'],\n    }),\n    rule({\n      selector: '[type=range]',\n      implicit: 'slider',\n    }),\n    rule({\n      selector: '[type=reset],[type=submit]',\n      implicit: 'button',\n    }),\n    rule({\n      selector: '[type=search]',\n      implicit: 'searchbox',\n    }),\n    noRole,\n  ],\n  ins: anyRole,\n  del: anyRole,\n  label: noRole,\n  legend: noRole,\n  li: [\n    rule({\n      selector: 'ol>li,ul>li',\n      implicit: 'listitem',\n      roles: [\n        'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option',\n        'presentation', 'separator', 'tab', 'treeitem',\n      ],\n    }),\n  ],\n  link: [\n    rule({\n      selector: '[href]',\n      implicit: 'link',\n      globalAria: false,\n    }),\n  ],\n  main: rule({\n    implicit: 'main',\n  }),\n  map: noRoleOrAria,\n  math: rule({\n    implicit: 'math',\n  }),\n  menu: [\n    rule({\n      selector: '[type=toolbar]',\n      implicit: 'toolbar',\n    }),\n  ],\n  menuitem: [\n    rule({\n      selector: '[type=command]',\n      implicit: 'menuitem',\n    }),\n    rule({\n      selector: '[type=checkbox]',\n      implicit: 'menuitemcheckbox',\n    }),\n    rule({\n      selector: '[type=radio]',\n      implicit: 'menuitemradio',\n    }),\n  ],\n  meta: noRoleOrAria,\n  meter: rule({\n    implicit: 'progressbar',\n  }),\n  nav: rule({\n    implicit: 'navigation',\n  }),\n  noscript: noRoleOrAria,\n  object: rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  ol: rule({\n    implicit: 'list',\n    roles: [\n      'directory', 'group', 'listbox', 'menu', 'menubar', 'presentation',\n      'radiogroup', 'tablist', 'toolbar', 'tree',\n    ],\n  }),\n  optgroup: rule({\n    implicit: 'group',\n  }),\n  option: [\n    rule({\n      selector: 'select>option,select>optgroup>option,datalist>option',\n      implicit: 'option',\n    }),\n    noRoleOrAria,\n  ],\n  output: rule({\n    implicit: 'status',\n    anyRole: true,\n  }),\n  param: noRoleOrAria,\n  picture: noRoleOrAria,\n  progress: rule({\n    implicit: 'progressbar',\n  }),\n  script: noRoleOrAria,\n  section: rule({\n    implicit: 'region',\n    roles: [\n      'alert', 'alertdialog', 'application', 'banner', 'complementary',\n      'contentinfo', 'dialog', 'document', 'log', 'main', 'marquee',\n      'navigation', 'search', 'status',\n    ],\n  }),\n  select: rule({\n    implicit: 'listbox',\n  }),\n  source: noRoleOrAria,\n  span: anyRole,\n  style: noRoleOrAria,\n  svg: rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  summary: rule({\n    implicit: 'button',\n  }),\n  table: rule({\n    implicit: 'table',\n    anyRole: true,\n  }),\n  template: noRoleOrAria,\n  textarea: rule({\n    implicit: 'textbox',\n  }),\n  tbody: rule({\n    implicit: 'rowgroup',\n    anyRole: true,\n  }),\n  thead: rule({\n    implicit: 'rowgroup',\n    anyRole: true,\n  }),\n  tfoot: rule({\n    implicit: 'rowgroup',\n    anyRole: true,\n  }),\n  title: noRoleOrAria,\n  td: rule({\n    implicit: 'cell',\n    anyRole: true,\n  }),\n  em: anyRole,\n  strong: anyRole,\n  small: anyRole,\n  s: anyRole,\n  cite: anyRole,\n  q: anyRole,\n  dfn: anyRole,\n  abbr: anyRole,\n  time: anyRole,\n  code: anyRole,\n  var: anyRole,\n  samp: anyRole,\n  kbd: anyRole,\n  sub: anyRole,\n  sup: anyRole,\n  i: anyRole,\n  b: anyRole,\n  u: anyRole,\n  mark: anyRole,\n  ruby: anyRole,\n  rb: anyRole,\n  rtc: anyRole,\n  rt: anyRole,\n  rp: anyRole,\n  bdi: anyRole,\n  bdo: anyRole,\n  br: anyRole,\n  wbr: anyRole,\n  th: rule({\n    implicit: ['columnheader', 'rowheader'],\n    anyRole: true,\n  }),\n  tr: rule({\n    implicit: 'row',\n    anyRole: true,\n  }),\n  track: noRoleOrAria,\n  ul: rule({\n    implicit: 'list',\n    roles: [\n      'directory', 'group', 'listbox', 'menu', 'menubar',\n      'tablist', 'toolbar', 'tree', 'presentation',\n    ],\n  }),\n  video: rule({\n    roles: ['application'],\n  }),\n};\n",
    "\"use strict\";\n/**\n *  Aria properties\n */\n\n/**\n * Describes an aria value\n *\n * @typedef {Object} ariaValue\n * @property {String} type One of string, integer, number, id, idlist, token, tokenlist\n * @property {String[]} tokens\n * @property {String[]} alone\n */\n\n/**\n * Describes an aria property\n *\n * @typedef {Object} ariaProperty\n * @property {ariaValue} values\n * @property {Boolean} global\n */\n\nconst boolean = {\n  type: 'token',\n  tokens: ['true', 'false'],\n};\n\nconst tristate = {\n  type: 'token',\n  tokens: ['true', 'false', 'mixed', 'undefined'],\n};\n\nconst nilableBoolean = {\n  type: 'token',\n  tokens: ['true', 'false', 'undefined'],\n};\n\n\n/** @enum {ariaProperty} */\nmodule.exports = {\n  activedescendant: {\n    values: { type: 'id' },\n  },\n  atomic: {\n    values: boolean,\n    global: true,\n  },\n  autocomplete: {\n    values: {\n      type: 'token',\n      tokens: ['inline', 'list', 'both', 'none'],\n    },\n  },\n  busy: {\n    values: boolean,\n    global: true,\n  },\n  checked: {\n    values: tristate,\n  },\n  colcount: {\n    values: { type: 'integer' },\n  },\n  colindex: {\n    values: { type: 'integer' },\n  },\n  colspan: {\n    values: { type: 'integer' },\n  },\n  controls: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  current: {\n    values: {\n      type: 'token',\n      tokens: ['page', 'step', 'location', 'date', 'time', 'true', 'false'],\n    },\n    global: true,\n  },\n  describedby: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  details: {\n    values: { type: 'id' },\n    global: true,\n  },\n  disabled: {\n    values: boolean,\n    global: true,\n  },\n  dropeffect: {\n    values: {\n      type: 'tokenlist',\n      tokens: ['copy', 'execute', 'link', 'move', 'none', 'popup'],\n      alone: ['none'],\n    },\n    deprecated: true,\n    global: true,\n  },\n  errormessage: {\n    values: { type: 'id' },\n    global: true,\n  },\n  expanded: {\n    values: nilableBoolean,\n  },\n  flowto: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  grabbed: {\n    values: nilableBoolean,\n    deprecated: true,\n    global: true,\n  },\n  haspopup: {\n    values: {\n      type: 'token',\n      tokens: ['false', 'true', 'menu', 'listbox', 'tree', 'grid', 'dialog'],\n    },\n    global: true,\n  },\n  hidden: {\n    values: nilableBoolean,\n    global: true,\n  },\n  invalid: {\n    values: {\n      type: 'token',\n      tokens: ['grammar', 'false', 'spelling', 'true'],\n    },\n    global: true,\n  },\n  keyshortcuts: {\n    values: { type: 'string' },\n    global: true,\n  },\n  label: {\n    values: { type: 'string' },\n    global: true,\n  },\n  labelledby: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  level: {\n    values: { type: 'integer' },\n  },\n  live: {\n    values: {\n      type: 'token',\n      tokens: ['assertive', 'off', 'polite'],\n    },\n    global: true,\n  },\n  modal: {\n    values: boolean,\n  },\n  multiline: {\n    values: boolean,\n  },\n  multiselectable: {\n    values: boolean,\n  },\n  orientation: {\n    values: {\n      type: 'token',\n      tokens: ['horizontal', 'undefined', 'vertical'],\n    },\n  },\n  owns: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  placeholder: {\n    values: { type: 'string' },\n  },\n  posinset: {\n    values: { type: 'integer' },\n  },\n  pressed: {\n    values: tristate,\n  },\n  readonly: {\n    values: boolean,\n  },\n  relevant: {\n    values: {\n      type: 'tokenlist',\n      tokens: ['additions', 'all', 'removals', 'text'],\n      alone: ['all'],\n    },\n    global: true,\n  },\n  required: {\n    values: boolean,\n  },\n  roledescription: {\n    values: { type: 'string' },\n    global: true,\n  },\n  rowcount: {\n    values: { type: 'integer' },\n  },\n  rowindex: {\n    values: { type: 'integer' },\n  },\n  rowspan: {\n    values: { type: 'integer' },\n  },\n  selected: {\n    values: nilableBoolean,\n  },\n  setsize: {\n    values: { type: 'integer' },\n  },\n  sort: {\n    values: {\n      type: 'token',\n      tokens: ['ascending', 'descending', 'none', 'other'],\n    },\n  },\n  valuemax: {\n    values: { type: 'number' },\n  },\n  valuemin: {\n    values: { type: 'number' },\n  },\n  valuenow: {\n    values: { type: 'number' },\n  },\n  valuetext: {\n    values: { type: 'string' },\n  },\n};\n",
    "\"use strict\";\n/**\n * Data for HTML elements.  Based on\n * - https://www.w3.org/TR/html52/\n * - https://w3c.github.io/html-aria/\n */\n\n/**\n * Describes an aria property\n *\n * @typedef {Object} htmlElement\n * @property {Function} nativeLabel\n * @property {Function} nativeDescription\n * @property {Boolean} obsolete\n */\n\nconst labels = (el, utils) => {\n  let found = [];\n  // If more than one element has our ID we must be the first\n  if (el.id && document.getElementById(el.id) === el) {\n    found = utils.$$(`label[for=\"${utils.cssEscape(el.id)}\"]`);\n  }\n  found.push(el.closest('label:not([for])'));\n  return found.filter(Boolean).filter(elm => !utils.hidden(elm, { ariaHidden: true }));\n};\n\nconst obsolete = { obsolete: true };\n\n/** @enum {htmlElement} */\nmodule.exports = {\n  a: {},\n  abbr: {},\n  acronym: obsolete,\n  address: {},\n  applet: obsolete,\n  area: {\n    nativeLabel(el) {\n      return el.alt || '';\n    },\n  },\n  article: {},\n  aside: {},\n  audio: {},\n  b: {},\n  base: {},\n  basefont: obsolete,\n  bdi: {},\n  bdo: {},\n  bgsound: obsolete,\n  big: obsolete,\n  blink: obsolete,\n  blockquote: {},\n  body: {},\n  br: {},\n  button: {\n    nativeLabel: labels,\n  },\n  canvas: {},\n  caption: {},\n  center: obsolete,\n  cite: {},\n  code: {},\n  col: {},\n  colgroup: {},\n  command: obsolete,\n  data: {},\n  datalist: {},\n  dd: {},\n  del: {},\n  details: {\n    nativeLabel(el, utils) {\n      const found = el.querySelector('summary');\n      if (found && utils.hidden(found, { ariaHidden: true })) {\n        return null;\n      }\n      return found;\n    },\n  },\n  dfn: {},\n  dialog: {},\n  dir: obsolete,\n  div: {},\n  dl: {},\n  dt: {},\n  em: {},\n  embed: {},\n  fieldset: {\n    nativeLabel(el, utils) {\n      const found = el.querySelector('legend');\n      if (found && utils.hidden(found, { ariaHidden: true })) {\n        return null;\n      }\n      return found;\n    },\n  },\n  figcaption: {},\n  figure: {},\n  font: obsolete,\n  footer: {},\n  form: {},\n  frame: obsolete,\n  frameset: obsolete,\n  h1: {},\n  h2: {},\n  h3: {},\n  h4: {},\n  h5: {},\n  h6: {},\n  head: {},\n  header: {},\n  hgroup: obsolete,\n  hr: {},\n  html: {},\n  i: {},\n  iframe: {},\n  image: obsolete,\n  img: {\n    nativeLabel(el) {\n      return el.alt || '';\n    },\n  },\n  input: {\n    nativeLabel(el, utils) {\n      if (el.type === 'hidden') {\n        return null;\n      }\n\n      if (el.type === 'image') {\n        return el.alt || el.value || '';\n      }\n\n      if (['submit', 'reset', 'button'].includes(el.type)) {\n        return el.value;\n      }\n\n      return labels(el, utils);\n    },\n  },\n  ins: {},\n  isindex: obsolete,\n  kbd: {},\n  keygen: obsolete,\n  label: {},\n  legend: {},\n  li: {},\n  link: {},\n  listing: obsolete,\n  main: {},\n  map: {},\n  mark: {},\n  marquee: obsolete,\n  math: {},\n  menu: {},\n  menuitem: {},\n  meta: {},\n  meter: {\n    nativeLabel: labels,\n  },\n  multicol: obsolete,\n  nav: {},\n  nextid: obsolete,\n  nobr: obsolete,\n  noembed: obsolete,\n  noframes: obsolete,\n  noscript: {},\n  object: {},\n  ol: {},\n  optgroup: {},\n  option: {},\n  output: {\n    nativeLabel: labels,\n  },\n  p: {},\n  param: {},\n  picture: {},\n  plaintext: obsolete,\n  pre: {},\n  progress: {\n    nativeLabel: labels,\n  },\n  q: {},\n  rb: {},\n  rp: {},\n  rt: {},\n  rtc: {},\n  ruby: {},\n  s: {},\n  samp: {},\n  script: {},\n  section: {},\n  select: {\n    nativeLabel: labels,\n  },\n  small: {},\n  source: {},\n  spacer: obsolete,\n  span: {},\n  strike: obsolete,\n  strong: {},\n  style: {},\n  sub: {},\n  summary: {},\n  sup: {},\n  svg: {},\n  table: {},\n  tbody: {},\n  td: {},\n  template: {},\n  textarea: {\n    nativeLabel: labels,\n  },\n  tfoot: {},\n  th: {},\n  thead: {},\n  time: {},\n  title: {},\n  tr: {},\n  track: {},\n  tt: obsolete,\n  u: {},\n  ul: {},\n  var: {},\n  video: {},\n  wbr: {},\n  xmp: obsolete,\n};\n",
    "\"use strict\";\nexports.allowedAria = require('./allowed-aria');\nexports.ariaAttributes = require('./aria-attributes');\nexports.elements = require('./elements');\nexports.roles = require('./roles');\n",
    "\"use strict\";\n/**\n * Rules for aria properties\n *\n * https://w3c.github.io/html-aria/\n */\n\n/**\n * Describes an aria role\n *\n * @typedef {Object} ariaRole\n * @property {String[]} allowed\n * @property {String[]} subclass\n * @property {String[]} required Required aria properties\n * @property {Boolean} nameFromContent\n * @property {Boolean} abstract\n */\n\n/** @enum {ariaRole} */\nmodule.exports = {\n  alert: {\n    allowed: ['expanded'],\n    subclass: ['alertdialog'],\n  },\n  alertdialog: {\n    allowed: ['expanded', 'modal'],\n  },\n  application: {\n    allowed: ['activedescendant'],\n  },\n  article: {\n    allowed: ['expanded'],\n  },\n  banner: {\n    allowed: ['expanded'],\n  },\n  button: {\n    allowed: ['expanded', 'pressed'],\n    nameFromContent: true,\n  },\n  cell: {\n    nameFromContent: true,\n    subclass: ['columnheader', 'gridcell', 'rowheader'],\n  },\n  checkbox: {\n    required: ['checked'],\n    nameFromContent: true,\n    subclass: ['menuitemcheckbox', 'switch'],\n  },\n  columnheader: {\n    allowed: ['sort', 'readonly', 'required', 'selected', 'expanded'],\n    nameFromContent: true,\n  },\n  combobox: {\n    required: ['expanded'],\n    allowed: ['autocomplete', 'required', 'activedescendant'],\n  },\n  command: {\n    abstract: true,\n    subclass: ['button', 'link', 'menuitem'],\n  },\n  complementary: {\n    allowed: ['expanded'],\n  },\n  composite: {\n    abstract: true,\n    subclass: ['grid', 'select', 'spinbutton', 'tablist'],\n  },\n  contentinfo: {\n    allowed: ['expanded'],\n  },\n  definition: {\n    allowed: ['expanded'],\n  },\n  dialog: {\n    allowed: ['expanded'],\n    subclass: ['alertdialog'],\n  },\n  directory: {\n    allowed: ['expanded'],\n  },\n  document: {\n    allowed: ['expanded'],\n    subclass: ['article'],\n  },\n  feed: {\n    allowed: ['setsize', 'expanded'],\n  },\n  figure: {\n    allowed: ['expanded'],\n  },\n  form: {\n    allowed: ['expanded'],\n  },\n  grid: {\n    allowed: ['level', 'multiselectable', 'readonly', 'activedescendant', 'expanded'],\n    subclass: ['treegrid'],\n  },\n  gridcell: {\n    allowed: ['readonly', 'required', 'selected', 'expanded'],\n    nameFromContent: true,\n    subclass: ['columnheader', 'rowheader'],\n  },\n  group: {\n    allowed: ['activedescendant', 'expanded'],\n    subclass: ['row', 'select', 'toolbar'],\n  },\n  heading: {\n    allowed: ['level', 'expanded'],\n    nameFromContent: true,\n  },\n  img: {\n    allowed: ['expanded'],\n  },\n  input: {\n    abstract: true,\n    subclass: ['checkbox', 'option', 'radio', 'slider', 'spinbutton', 'textbox'],\n  },\n  landmark: {\n    abstract: true,\n    subclass: ['banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'region', 'search'],\n  },\n  link: {\n    allowed: ['expanded'],\n    nameFromContent: true,\n  },\n  list: {\n    allowed: ['expanded'],\n    subclass: ['directory', 'feed'],\n  },\n  listbox: {\n    allowed: ['multiselectable', 'required', 'expanded', 'activedescendant', 'expanded'],\n  },\n  listitem: {\n    allowed: ['level', 'posinset', 'setsize', 'expanded'],\n    subclass: ['treeitem'],\n  },\n  log: {\n    allowed: ['expanded'],\n  },\n  main: {\n    allowed: ['expanded'],\n  },\n  marquee: {\n    allowed: ['expanded'],\n  },\n  math: {\n    allowed: ['expanded'],\n  },\n  menu: {\n    allowed: ['activedescendant', 'expanded'],\n    subclass: ['menubar'],\n  },\n  menubar: {\n    allowed: ['activedescendant'],\n  },\n  menuitem: {\n    nameFromContent: true,\n    subclass: ['menuitemcheckbox'],\n  },\n  menuitemcheckbox: {\n    required: ['checked'],\n    nameFromContent: true,\n    subclass: ['menuitemradio'],\n  },\n  menuitemradio: {\n    required: ['checked'],\n    allowed: ['posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n  },\n  navigation: {\n    allowed: ['expanded'],\n  },\n  none: {},\n  note: {\n    allowed: ['expanded'],\n  },\n  option: {\n    allowed: ['checked', 'posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n    subclass: ['treeitem'],\n  },\n  presentation: {},\n  progressbar: {\n    allowed: ['valuemax', 'valuemin', 'valuenow', 'valuetext'],\n  },\n  radio: {\n    required: ['checked'],\n    allowed: ['posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n    subclass: ['menuitemradio'],\n  },\n  radiogroup: {\n    allowed: ['required', 'activedescendant', 'expanded'],\n  },\n  range: {\n    abstract: true,\n    subclass: ['progressbar', 'scrollbar', 'slider', 'spinbutton'],\n  },\n  region: {\n    allowed: ['expanded'],\n  },\n  roletype: {\n    abstract: true,\n    subclass: ['structure', 'widget', 'window'],\n  },\n  row: {\n    allowed: [\n      'colindex', 'level', 'rowindex', 'selected', 'level', 'selected',\n      'activedescendant', 'expanded',\n    ],\n    nameFromContent: true,\n  },\n  rowgroup: {\n    allowed: ['activedescendant', 'expanded'],\n    nameFromContent: true,\n  },\n  rowheader: {\n    allowed: ['sort', 'readonly', 'required', 'selected', 'expanded'],\n    nameFromContent: true,\n  },\n  scrollbar: {\n    required: ['controls', 'orientation', 'valuemax', 'valuemin', 'valuenow'],\n    allowed: ['expanded'],\n  },\n  search: {\n    allowed: ['expanded', 'orientation'],\n  },\n  searchbox: {\n    allowed: ['activedescendant', 'autocomplete', 'multiline', 'placeholder', 'readonly', 'required'],\n  },\n  section: {\n    abstract: true,\n    subclass: ['alert', 'cell', 'definition', 'figure', 'group', 'img', 'landmark', 'list', 'listitem', 'log', 'marquee', 'math', 'note', 'status', 'table', 'tabpanel', 'term', 'tooltip'],\n  },\n  sectionhead: {\n    abstract: true,\n    subclass: ['columnheader', 'heading', 'rowheader', 'tab'],\n  },\n  select: {\n    abstract: true,\n    subclass: ['combobox', 'listbox', 'menu', 'radiogroup', 'tree'],\n  },\n  separator: {\n    allowed: ['valuetext'],\n  },\n  slider: {\n    required: ['valuemax', 'valuemin', 'valuenow'],\n    allowed: ['orientation', 'valuetext'],\n  },\n  spinbutton: {\n    required: ['valuemax', 'valuemin', 'valuenow'],\n    allowed: ['required', 'valuetext'],\n  },\n  status: {\n    allowed: ['expanded'],\n    subclass: ['timer'],\n  },\n  structure: {\n    abstract: true,\n    subclass: ['application', 'document', 'none', 'presentation', 'rowgroup', 'section', 'sectionhead', 'separator'],\n  },\n  switch: {\n    required: ['checked'],\n    nameFromContent: true,\n  },\n  tab: {\n    allowed: ['selected', 'expanded'],\n    nameFromContent: true,\n  },\n  table: {\n    allowed: ['colcount', 'rowcount'],\n    subclass: ['grid'],\n  },\n  tablist: {\n    allowed: ['level', 'activedescendant', 'expanded'],\n  },\n  tabpanel: {\n    allowed: ['expanded'],\n  },\n  term: {\n    allowed: ['expanded'],\n  },\n  textbox: {\n    allowed: ['activedescendant', 'autocomplete', 'multiline', 'placeholder', 'readonly', 'required'],\n    subclass: ['searchbox'],\n  },\n  timer: {\n    allowed: ['expanded'],\n  },\n  toolbar: {\n    allowed: ['activedescendant', 'expanded'],\n    nameFromContent: true,\n  },\n  tooltip: {\n    allowed: ['expanded'],\n  },\n  tree: {\n    allowed: ['multiselectable', 'required', 'activedescendant', 'expanded'],\n    nameFromContent: true,\n    subclass: ['treegrid'],\n  },\n  treegrid: {\n    allowed: ['level', 'multiselecteable', 'readonly', 'activedescendant', 'expanded', 'required'],\n  },\n  treeitem: {\n    allowed: ['level', 'posinset', 'setsize', 'expanded', 'checked', 'selected'],\n  },\n  widget: {\n    abstract: true,\n    subclass: ['command', 'composite', 'gridcell', 'input', 'range', 'row', 'separator', 'tab'],\n  },\n  window: {\n    abstract: true,\n    subclass: ['dialog'],\n  },\n};\n",
    "\"use strict\";\n/**\n * Entry point for standalone autorunning linter\n */\nconst Linter = require('./linter');\n\nlet config = window.accessibilityLinterConfig;\nif (!config) {\n  const scriptElement = document.currentScript;\n  if (scriptElement) {\n    const settings = scriptElement.textContent.trim();\n    if (settings) {\n      config = JSON.parse(settings);\n    }\n  }\n}\n\nconst linter = new Linter(config);\nconst start = () => {\n  linter.run();\n  linter.observe();\n};\n\nif (/^(:?interactive|complete)$/.test(document.readyState)) {\n  // Document already loaded\n  start();\n} else {\n  document.addEventListener('DOMContentLoaded', start);\n}\n\nwindow.AccessibilityLinter = Linter;\nwindow.accessibilityLinter = linter;\n",
    "\"use strict\";\nconst Runner = require('./runner');\nconst Logger = require('./logger');\nconst Rule = require('./rules/rule');\nconst rules = require('./rules');\nconst Utils = require('./utils');\nconst version = require('./version');\nconst config = require('./config');\nconst Contrast = require('./utils/contrast');\n\n// eslint-disable-next-line global-require, import/no-dynamic-require\nconst ruleList = new Map(rules.map(path => [path.replace(/\\//g, '-'), require(`./rules/${path}/rule.js`)]));\n\nconst Linter = module.exports = class AccessibilityLinter extends Runner {\n  constructor(options) {\n    options = options || {};\n    options.logger = options.logger || new Logger();\n    options.rules = options.rules || ruleList;\n    super(options);\n\n    this.root = options.root || document;\n  }\n\n  /**\n   * Start looking for issues\n   */\n  observe() {\n    this.observeDomChanges();\n    this.observeFocus();\n  }\n\n  /**\n   * Stop looking for issues\n   */\n  stopObserving() {\n    this.stopObservingDomChanges();\n    this.stopObservingFocus();\n  }\n\n  observeDomChanges() {\n    this.observer = new MutationObserver((mutations) => {\n      // De-duplicate\n      const nodes = new Set(mutations.map((record) => {\n        if (record.type === 'childList') {\n          return record.target;\n        }\n        return record.target.parentNode;\n      }).filter(Boolean));\n\n      // Remove nodes that are children of other nodes\n      nodes.forEach((node1) => {\n        nodes.forEach((node2) => {\n          if (node2 === node1 || !nodes.has(node1)) {\n            return;\n          }\n          if (node2.contains(node1)) {\n            nodes.delete(node1);\n          }\n        });\n      });\n      // Remove nodes that are disconnected\n      nodes.forEach((node) => {\n        if (!document.contains(node)) {\n          nodes.delete(node);\n        }\n      });\n      // Run test against each node\n      nodes.forEach(node => this.run(node));\n    });\n    this.observer.observe(\n      this.root,\n      { subtree: true, childList: true, attributes: true, characterData: true }\n    );\n  }\n\n  stopObservingDomChanges() {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  }\n\n  handleEvent(e) {\n    new Promise(resolve => resolve(this.run(e.target))); // eslint-disable-line no-new\n  }\n\n  observeFocus() {\n    document.addEventListener('focus', this, { capture: true, passive: true });\n    document.addEventListener('blur', this, { capture: true, passive: true });\n  }\n\n  stopObservingFocus() {\n    document.removeEventListener('focus', this, { capture: true, passive: true });\n    document.removeEventListener('blur', this, { capture: true, passive: true });\n  }\n};\n\nLinter.config = config;\nLinter.Logger = Logger;\nLinter.Rule = Rule;\nLinter.rules = ruleList;\nLinter[Symbol.for('accessibility-linter.rule-sources')] = rules;\nLinter.Utils = Utils;\nLinter.version = version;\nLinter.colourContrast = Contrast.colourContrast;\n",
    "\"use strict\";\n/* eslint-disable no-console, class-methods-use-this */\nmodule.exports = class Logger {\n  log({ type, el, message, name }) {\n    console[type].apply(console, [message, el, name].filter(Boolean));\n  }\n};\n",
    "\"use strict\";\nconst ExtendedArray = require('../support/extended-array');\n\nmodule.exports = class Rule {\n  constructor(settings) {\n    this.type = 'error';\n    this.enabled = true;\n    this.setDefaults();\n    Object.assign(this, settings);\n  }\n\n  /**\n   * Set any default properties on the rule before the settings are merged in\n   */\n  setDefaults() {\n    // Nothing to do here\n  }\n\n  /**\n   * Run the rule\n   * @param {Element} [context=document] The element to run the rule against\n   * @param {Function} filter A filter to remove elements that don't need to be tested\n   * @param {Object} caches Utility caches\n   * @returns {String|String[]|null} Zero or more error messages\n   */\n  run(context, filter = () => true, utils) {\n    return utils.$$(this.selector(utils), context)\n      .filter(filter)\n      .map(el => (\n        ExtendedArray.of(this.test(el, utils))\n          .flatten()\n          .compact()\n          .map(message => ({ el, message, type: this.type }))\n      ))\n      .flatten();\n  }\n\n  /**\n   * The selector to select invalid elements\n   */\n  selector() { // eslint-disable-line class-methods-use-this\n    throw new Error('not implemented');\n  }\n\n  /**\n   * Test if an element is invalid\n   * @param {Element} el The element to test\n   * @param {Object} utils Utilities\n   * @returns {String|String[]|null} Zero or more error messages\n   */\n  test(el, utils) { // eslint-disable-line no-unused-vars\n    throw new Error('not implemented');\n  }\n};\n",
    "\"use strict\";\nconst Utils = require('./utils');\nconst SetCache = require('./support/set-cache');\n\nconst dummyCache = {\n  add() {},\n  set() {},\n  has() { return false; },\n};\n\nmodule.exports = class Runner {\n  constructor(config) {\n    const globalSettings = {};\n    if (config.defaultOff) {\n      globalSettings.enabled = false;\n    }\n\n    this.cacheReported = config.cacheReported !== false;\n    this.ruleSettings = config.ruleSettings || {};\n\n    this.rules = new Map(Array.from(config.rules)\n      .map(([name, Rule]) => [\n        name,\n        new Rule(Object.assign({ name }, globalSettings, this.ruleSettings[name])),\n      ])\n    );\n\n    this.ignoreAttribute = config.ignoreAttribute || 'data-accessibility-linter-ignore';\n\n    this.whitelist = config.whitelist;\n    this.logger = config.logger;\n\n    if (this.cacheReported) {\n      this.reported = new SetCache();\n      this.whitelisted = new SetCache();\n      this.globalWhitelisted = new WeakSet();\n      this.ignored = new SetCache();\n    } else {\n      this.reported = this.whitelisted = this.globalWhitelisted = this.ignored = dummyCache;\n    }\n\n    this.utils = null;\n  }\n\n  /**\n   * Run all the rules\n   * @param {HTMLElement} [context] A context to run the rules within\n   */\n  run(context) {\n    this.utils = new Utils();\n    Array.from(this.rules.values())\n      .filter(rule => rule.enabled)\n      .forEach(rule => this.runInternal(rule, context, (el, name) => this.filter(el, name)));\n    this.utils = null;\n  }\n\n  /**\n   * Run one rule regardless of it being enabled\n   * @name {String|Rule} rule A rule or name of a rule\n   * @param {HTMLElement} [context] A context\n   * @param {String} [whitelist] Optionally a whitelist\n   */\n  runRule(rule, { context, whitelist, ruleSettings } = {}) {\n    if (typeof rule === 'string') {\n      rule = this.rules.get(rule);\n    }\n\n    const runner = new Runner({\n      rules: new Map([[rule.name, rule.constructor]]),\n      whitelist: whitelist || this.whitelist,\n      logger: this.logger,\n      ruleSettings: {\n        [rule.name]: Object.assign(\n          {},\n          ruleSettings || this.ruleSettings[rule.name] || {},\n          { enabled: true }\n        ),\n      },\n    });\n\n    runner.run(context);\n  }\n\n  /**\n   * Filter if the element has already reported on this rule or is excluded from this rule\n   * @private\n   */\n  filter(el, name) {\n    return this.notWhitelisted(el, name)\n      && this.notIgnored(el, name)\n      && this.notReported(el, name);\n  }\n\n  /**\n   * Run a single rule\n   * @private\n   */\n  runInternal(rule, context, filter) {\n    rule.run(context, el => filter(el, rule.name), this.utils)\n      .forEach((issue) => {\n        this.reported.set(issue.el, rule.name);\n        this.logger.log(Object.assign({ name: rule.name }, issue));\n      });\n  }\n\n  /**\n   * Has this already been reported for this element\n   * @private\n   */\n  notReported(el, name) {\n    return !this.reported.has(el, name);\n  }\n\n  /**\n   * Is this element excluded by a whitelist\n   * @private\n   */\n  notWhitelisted(el, name) {\n    if (this.globalWhitelisted.has(el) || this.whitelisted.has(el, name)) {\n      return false;\n    }\n\n    if (this.whitelist && el.matches(this.whitelist)) {\n      this.globalWhitelisted.add(el);\n      return false;\n    }\n\n    const whitelist = this.ruleSettings[name] && this.ruleSettings[name].whitelist;\n    if (whitelist && el.matches(whitelist)) {\n      this.whitelisted.set(el, name);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Is this element excluded by an attribute\n   * @private\n   */\n  notIgnored(el, ruleName) {\n    if (this.ignored.has(el, ruleName)) {\n      return false;\n    }\n\n    const ignore = el.matches(\n      `[${this.ignoreAttribute}=\"\"],[${this.ignoreAttribute}~=\"${this.utils.cssEscape(ruleName)}\"]`\n    );\n\n    if (ignore) {\n      this.ignored.set(el, ruleName);\n      return false;\n    }\n\n    return true;\n  }\n};\n",
    "\"use strict\";\n// https://www.w3.org/TR/html52/infrastructure.html#common-parser-idioms\nexports.rSpace = /[ \\t\\n\\f\\r]+/;\n",
    "\"use strict\";\n/**\n * Caching for element values\n */\n/* eslint-disable class-methods-use-this */\n\nfunction getOrSet(cache, key, setter) {\n  if (cache.has(key)) {\n    return cache.get(key);\n  }\n  const value = setter();\n  cache.set(key, value);\n  return value;\n}\n\nmodule.exports = class ElementCache {\n  constructor() {\n    this._cache = new WeakMap();\n  }\n\n  /**\n   * Generate a key from the options supplied to key\n   */\n  key(el, key) {\n    return key;\n  }\n\n  /**\n   * Sets stored value\n   */\n  setter() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   *  Get a value\n   *  @param {Object} el A key to cache against\n   */\n  get(el) {\n    const map = getOrSet(this._cache, el, () => new Map());\n    const optionsKey = this.key.apply(this, arguments);\n    return getOrSet(map, optionsKey, () => this.setter.apply(this, arguments));\n  }\n};\n",
    "\"use strict\";\nmodule.exports = class ExtendedArray extends Array {\n  tap(fn) {\n    fn(this);\n    return this;\n  }\n\n  unique() {\n    const set = new Set();\n    return this.filter(item => (set.has(item) ? false : set.add(item)));\n  }\n\n  groupBy(fn) {\n    const map = new Map();\n    this.forEach((item, i, ar) => {\n      const key = fn(item, i, ar);\n      if (map.has(key)) {\n        map.get(key).push(item);\n      } else {\n        map.set(key, ExtendedArray.of(item));\n      }\n    });\n    return ExtendedArray.from(map.values());\n  }\n\n  compact() {\n    return this.filter(Boolean);\n  }\n\n  flatten() {\n    let result = new ExtendedArray();\n    this.forEach((item) => {\n      if (Array.isArray(item)) {\n        result = result.concat(ExtendedArray.from(item).flatten());\n      } else {\n        result.push(item);\n      }\n    });\n    return result;\n  }\n};\n",
    "\"use strict\";\nmodule.exports = class ElementCache {\n  constructor() {\n    this._cache = new WeakMap();\n  }\n\n  has(el, value) {\n    const set = this._cache.get(el);\n    if (!set) {\n      return false;\n    }\n    return set.has(value);\n  }\n\n  set(el, value) {\n    let set = this._cache.get(el);\n    if (!set) {\n      set = new Set();\n      this._cache.set(el, set);\n    }\n    set.add(value);\n  }\n};\n",
    "\"use strict\";\n/**\n *  Data and functions for aria validation.  Based on\n *  - https://www.w3.org/TR/wai-aria-1.1/\n *  - https://www.w3.org/TR/html52/\n */\nconst config = require('../config');\nconst ExtendedArray = require('../support/extended-array');\n\n/**\n * All roles\n * @type {Object[]}\n */\nexports.allowed = (el) => {\n  const name = el.nodeName.toLowerCase();\n  let found = config.allowedAria[name];\n  if (Array.isArray(found)) {\n    found = found.find(item => item.selector === '*' || el.matches(item.selector));\n  }\n  return found || config.allowedAria._default;\n};\n\n/**\n * Get the elements current role based on the role attribute or implicit role\n * @param {Element} el\n * @returns {String|null}\n */\nexports.getRole = (el) => {\n  let role = null;\n  // Should be the first non-abstract role in the list\n  if ((el.getAttribute('role') || '').split(/\\s+/).filter(Boolean).some((name) => {\n    if (config.roles[name] && !config.roles[name].abstract) {\n      role = name;\n      return true;\n    }\n    return false;\n  })) {\n    return role;\n  }\n  return exports.allowed(el).implicit[0] || null;\n};\n\n/**\n * Does an element have a role. This will test against abstract roles\n * @param {Element|String} target\n * @param {String|String[]} name\n * @returns {Boolean}\n */\nexports.hasRole = (target, name) => {\n  const actualRole = target instanceof HTMLElement ? exports.getRole(target) : target;\n  if (!actualRole) {\n    return false;\n  }\n  return [].concat(name).some(function hasRole(checkRole) {\n    if (checkRole === actualRole) {\n      return true;\n    }\n    return (config.roles[checkRole].subclass || []).some(hasRole);\n  });\n};\n\n/**\n * Find the closest element with the specified role(s)\n * @param {Element} el\n * @param {String|String[]} role\n * @returns {Boolean}\n */\nexports.closestRole = (el, role) => {\n  const roles = [].concat(role);\n  let cursor = el;\n  while ((cursor = cursor.parentNode) && cursor instanceof HTMLElement) {\n    // eslint-disable-next-line no-loop-func\n    if (roles.some(name => exports.hasRole(cursor, name))) {\n      return cursor;\n    }\n  }\n  return null;\n};\n\nexports.rolesOfType = (name) => {\n  const roles = new ExtendedArray();\n  const role = config.roles[name];\n  if (!role.abstract) {\n    roles.push(name);\n  }\n  if (role.subclass) {\n    roles.push(role.subclass.map(exports.rolesOfType));\n  }\n  return roles.flatten();\n};\n",
    "\"use strict\";\n// Luminosity calculation\n/* eslint-disable class-methods-use-this */\n\nfunction gamma(value) {\n  const n = value / 255;\n  // eslint-disable-next-line no-restricted-properties\n  return n <= 0.03928 ? n / 12.92 : Math.pow(((n + 0.055) / 1.055), 2.4);\n}\n\n// Create a canvas for blending colours\nlet _context;\nfunction getCanvasContext() {\n  if (_context) {\n    return _context;\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  _context = canvas.getContext('2d');\n  return _context;\n}\n\nfunction blend(colours) {\n  const context = getCanvasContext();\n  context.clearRect(0, 0, 1, 1);\n  colours.reverse().forEach((colour) => {\n    context.fillStyle = `rgba(${colour.join(',')})`;\n    context.fillRect(0, 0, 1, 1);\n  });\n  const colour = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colour[3] /= 255;\n  return colour;\n}\n\nfunction luminosity(r, g, b) {\n  // https://en.wikipedia.org/wiki/Relative_luminance\n  return (0.2126 * gamma(r)) + (0.7152 * gamma(g)) + (0.0722 * gamma(b));\n}\n\nfunction contrastRatio(l1, l2) {\n  // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n  if (l1 < l2) {\n    [l2, l1] = [l1, l2];\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n\n// Convert a CSS colour to an array of RGBA values\nfunction toRgbaArray(style) {\n  const el = document.createElement('div');\n  el.style.color = style;\n  const value = window.getComputedStyle(el).color;\n  return colourParts(value); // eslint-disable-line no-use-before-define\n}\n\n/**\n * Given a colour in rgba or rgb format, get its parts\n * The parts should be in the range 0 to 1\n */\nfunction colourParts(colour) {\n  if (colour === 'transparent') {\n    return [0, 0, 0, 0];\n  }\n  const match = colour.match(/^rgba?\\((\\d+), *(\\d+), *(\\d+)(?:, *(\\d+(?:\\.\\d+)?))?\\)$/);\n  if (match) {\n    return [+match[1], +match[2], +match[3], parseFloat(match[4]) || 1];\n  }\n  return toRgbaArray(colour);\n}\n\nmodule.exports = class Contrast {\n  constructor(styleCache) {\n    this.styleCache = styleCache;\n  }\n\n  textContrast(el) {\n    return contrastRatio(this._textLuminosity(el), this._backgroundLuminosity(el));\n  }\n\n  _blendWithBackground(colour, el) {\n    if (colour[3] === 1) {\n      return colour;\n    }\n    const colourStack = [colour];\n    let cursor = el;\n    let currentColour = colour;\n    do {\n      let background;\n      if (cursor === document) {\n        // I assume this is always the case?\n        background = [255, 255, 255, 1];\n      } else {\n        background = colourParts(this.styleCache.get(cursor, 'backgroundColor'));\n      }\n      currentColour = background;\n      if (currentColour[3] !== 0) {\n        colourStack.push(currentColour);\n      }\n    } while (currentColour[3] !== 1 && (cursor = cursor.parentNode));\n    return blend(colourStack);\n  }\n\n  textColour(el) {\n    const colour = colourParts(this.styleCache.get(el, 'color'));\n    return this._blendWithBackground(colour, el);\n  }\n\n  backgroundColour(el) {\n    return this._blendWithBackground([0, 0, 0, 0], el);\n  }\n\n  _textLuminosity(el) {\n    return luminosity.apply(null, this.textColour(el));\n  }\n\n  _backgroundLuminosity(el) {\n    return luminosity.apply(null, this.backgroundColour(el));\n  }\n\n  /**\n   * The contrast between two colours\n   */\n  static colourContrast(foreground, background) {\n    foreground = colourParts(foreground);\n    background = colourParts(background);\n    if (background[3] !== 1) {\n      background = blend([background, [255, 255, 255, 1]]);\n    }\n    if (foreground[3] !== 1) {\n      foreground = blend([foreground, background]);\n    }\n    return contrastRatio(\n      luminosity.apply(null, foreground),\n      luminosity.apply(null, background)\n    );\n  }\n};\n\n// The following are exposed for unit testing\nmodule.exports.prototype._blend = blend;\nmodule.exports.prototype._luminosity = luminosity;\nmodule.exports.prototype._colourParts = colourParts;\nmodule.exports.prototype._contrastRatio = contrastRatio;\n",
    "\"use strict\";\nmodule.exports = function cssEscape(name) {\n  return name.replace(/[\"\\\\]/g, '\\\\$&');\n};\n",
    "\"use strict\";\n/**\n *  Determine if an element is hidden or not\n */\n/* eslint-disable class-methods-use-this */\n\nconst ElementCache = require('../support/element-cache');\n\n// Elements that don't have client rectangles\nconst noRects = ['br', 'wbr'];\n\n// Is the element hidden using CSS\nfunction cssHidden(el, style) {\n  return style.get(el, 'visibility') !== 'visible' || style.get(el, 'display') === 'none';\n}\n\n// Is the element hidden from accessibility software\nfunction hidden(el, style, ariaHidden = false) {\n  if (el === document) {\n    return false;\n  }\n  return (ariaHidden && el.getAttribute('aria-hidden') === 'true')\n    || (!noRects.includes(el.nodeName.toLowerCase()) && el.getClientRects().length === 0)\n    || (ariaHidden && !!el.closest('[aria-hidden=true]'))\n    || cssHidden(el, style);\n}\n\n/**\n *  Cache of hidden element\n */\nmodule.exports = class Hidden extends ElementCache {\n  constructor(style) {\n    super();\n    this.style = style;\n  }\n\n  key(el, { ariaHidden = false } = {}) {\n    return ariaHidden;\n  }\n\n  setter(el, { ariaHidden = false } = {}) {\n    return hidden(el, this.style, ariaHidden);\n  }\n};\n",
    "\"use strict\";\nconst { $, $$ } = require('./selectors');\nconst { accessibleName, accessibleDescription } = require('./name');\nconst aria = require('./aria');\nconst Contrast = require('./contrast');\nconst cssEscape = require('./cssEscape');\nconst Hidden = require('./hidden');\nconst Style = require('./style');\n\nconst getOrSet = (cache, el, setter) => {\n  if (cache.has(el)) {\n    return cache.get(el);\n  }\n\n  const value = setter();\n  cache.set(el, value);\n  return value;\n};\n\n/**\n * Helpers functions\n */\nconst Utils = class Utils {\n  constructor() {\n    this._style = new Style();\n    this._hidden = new Hidden(this._style);\n    this._nameCache = new WeakMap();\n    this._descriptionCache = new WeakMap();\n    this.contrast = new Contrast(this._style);\n  }\n\n  hidden(el, options) {\n    return this._hidden.get(el, options);\n  }\n\n  style(el, name, pseudo) {\n    return this._style.get(el, name, pseudo);\n  }\n\n  accessibleName(el) {\n    return getOrSet(\n      this._nameCache,\n      el,\n      () => accessibleName(el, Object.assign({ utils: this }))\n    );\n  }\n\n  accessibleDescription(el) {\n    return getOrSet(\n      this._descriptionCache,\n      el,\n      () => accessibleDescription(el, Object.assign({ utils: this }))\n    );\n  }\n};\n\nUtils.prototype.$ = $;\nUtils.prototype.$$ = $$;\nUtils.prototype.aria = aria;\nUtils.prototype.cssEscape = cssEscape;\n\nmodule.exports = Utils;\n",
    "\"use strict\";\n// An implementation of the text alternative computation\n// https://www.w3.org/TR/accname-aam-1.1/#mapping_additional_nd_te\nconst { $, $$ } = require('./selectors');\nconst config = require('../config');\nconst { getRole, hasRole } = require('./aria');\n\nconst nameFromContentRoles = Object.keys(config.roles)\n  .filter(name => config.roles[name].nameFromContent);\nconst controlRoles = ['textbox', 'combobox', 'listbox', 'range'];\n\nclass AccessibleName {\n  constructor(el, options = {}) {\n    this.el = el;\n    this.recursion = !!options.recursion;\n    this.allowHidden = !!options.allowHidden;\n    this.includeHidden = !!options.includeHidden;\n    this.noAriaBy = !!options.noAriaBy;\n    this.history = options.history || [];\n    this.isWithinWidget = 'isWithinWidget' in options ? options.isWithinWidget : hasRole(this.role, 'widget');\n    this.utils = options.utils;\n\n    this.sequence = [\n      () => this.hidden(),\n      () => this.ariaBy(),\n      () => this.embedded(),\n      () => this.ariaLabel(),\n      () => this.native(),\n      () => this.loop(),\n      () => this.dom(),\n      () => this.tooltip(),\n    ];\n  }\n\n  get role() {\n    return this._role || (this._role = getRole(this.el));\n  }\n\n  get nodeName() {\n    return this._nodeName || (this._nodeName = this.el.nodeName.toLowerCase());\n  }\n\n  build() {\n    let text = '';\n    this.sequence.some(fn => (text = fn()) != null);\n\n    text = text || '';\n\n    if (!this.recursion) {\n      // To a flat string\n      text = text.trim().replace(/\\s+/g, ' ');\n    }\n\n    return text;\n  }\n\n  loop() {\n    return this.history.includes(this.el) ? '' : null;\n  }\n\n  hidden() {\n    if (this.includeHidden) {\n      return null;\n    }\n    const isHidden = this.utils.hidden(this.el, { ariaHidden: true });\n    if (this.allowHidden && isHidden) {\n      this.includeHidden = true;\n      return null;\n    }\n    return isHidden ? '' : null;\n  }\n\n  ariaBy(attr = 'aria-labelledby') {\n    if (this.noAriaBy) {\n      return null;\n    }\n\n    const ids = this.el.getAttribute(attr) || '';\n    if (ids) {\n      return ids.trim().split(/\\s+/)\n        .map(id => document.getElementById(id))\n        .filter(Boolean)\n        .map(elm => this.recurse(elm, { allowHidden: true, noAriaBy: attr === 'aria-labelledby' }))\n        .filter(Boolean)\n        .join(' ');\n    }\n\n    return null;\n  }\n\n  ariaLabel() {\n    return this.el.getAttribute('aria-label') || null;\n  }\n\n  native(prop = 'nativeLabel') {\n    if (['none', 'presentation'].includes(this.role)) {\n      return null;\n    }\n\n    const element = config.elements[this.nodeName];\n    if (element && element[prop]) {\n      let value = element[prop](this.el, this.utils);\n      if (typeof value === 'string') {\n        return value;\n      }\n      if (value instanceof HTMLElement) {\n        value = [value];\n      }\n      if (Array.isArray(value)) {\n        return value\n          .filter(Boolean)\n          .map(elm => this.recurse(elm, { allowHidden: true }))\n          .join(' ') || null;\n      }\n    }\n    return null;\n  }\n\n  embedded() {\n    const useEmbeddedName = this.isWithinWidget\n      && this.recursion\n      && controlRoles.some(name => hasRole(this.role, name));\n\n    if (!useEmbeddedName) {\n      return null;\n    }\n\n    const { el, role } = this;\n\n    if (['input', 'textarea'].includes(this.nodeName) && !hasRole(role, 'button')) {\n      return el.value;\n    }\n\n    if (this.nodeName === 'select') {\n      return Array.from(this.el.selectedOptions)\n        .map(option => option.value)\n        .join(' ');\n    }\n\n    if (hasRole(role, 'textbox')) {\n      return el.textContent;\n    }\n\n    if (hasRole(role, 'combobox')) {\n      const input = $('input', el);\n      if (input) {\n        return input.value;\n      }\n      return '';\n    }\n\n    if (hasRole(role, 'listbox')) {\n      return $$('[aria-selected=\"true\"]', el)\n        .map(elm => this.recurse(elm))\n        .join(' ');\n    }\n\n    if (hasRole(role, 'range')) {\n      return el.getAttribute('aria-valuetext') || el.getAttribute('aria-valuenow') || '';\n    }\n\n    return null;\n  }\n\n  // Find the label from the dom\n  dom() {\n    if (!this.recursion && !nameFromContentRoles.includes(this.role)) {\n      return null;\n    }\n\n    return Array.from(this.el.childNodes)\n      .map((node) => {\n        if (node instanceof Text) {\n          return node.textContent;\n        }\n        if (node instanceof Element) {\n          return this.recurse(node);\n        }\n        return null;\n      })\n      .filter(Boolean)\n      .join('') || null;\n  }\n\n  // Find a tooltip label\n  tooltip() {\n    return this.el.title || null;\n  }\n\n  recurse(el, options = {}) {\n    return new this.constructor(el, Object.assign({\n      history: this.history.concat(this.el),\n      includeHidden: this.includeHidden,\n      noAriaBy: this.noAriaBy,\n      recursion: true,\n      isWithinWidget: this.isWithinWidget,\n      utils: this.utils,\n    }, options)).build();\n  }\n}\n\nclass AccessibleDescription extends AccessibleName {\n  constructor(el, options) {\n    super(el, options);\n\n    this.sequence.unshift(() => this.describedBy());\n  }\n\n  describedBy() {\n    if (this.recursion) {\n      return null;\n    }\n\n    if (this.utils.hidden(this.el, { ariaHidden: true })) {\n      return '';\n    }\n\n    const ariaBy = this.ariaBy('aria-describedby');\n    if (ariaBy !== null) {\n      return ariaBy;\n    }\n\n    return this.native('nativeDescription') || '';\n  }\n}\n\nexports.accessibleName = (el, options) => new AccessibleName(el, options).build();\nexports.accessibleDescription = (el, options) => new AccessibleDescription(el, options).build();\n",
    "\"use strict\";\nconst ExtendedArray = require('../support/extended-array');\n\nexports.$$ = function $$(selector, context) {\n  const root = context || document;\n  const els = ExtendedArray.from(root.querySelectorAll(selector));\n  if (context && context instanceof Element && context.matches(selector)) {\n    els.push(context);\n  }\n  return els;\n};\n\nexports.$ = function $(selector, context) {\n  return exports.$$(selector, context)[0];\n};\n",
    "\"use strict\";\n/**\n * A cache of computed style properties\n */\n/* eslint-disable class-methods-use-this */\nconst ElementCache = require('../support/element-cache');\n\nfunction getStyle(el, name, pseudo) {\n  return window.getComputedStyle(el, pseudo ? `::${pseudo}` : null)[name];\n}\n\nmodule.exports = class Style extends ElementCache {\n  key(el, name, pseudo) {\n    return `${name}~${pseudo}`;\n  }\n\n  setter(el, name, pseudo) {\n    return getStyle(el, name, pseudo);\n  }\n};\n"
  ]
}