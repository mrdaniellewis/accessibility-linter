{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "lib/_stream_0.js",
    "lib/_stream_1.js",
    "lib/aria/index.js",
    "lib/aria/match.js",
    "lib/aria/roles.js",
    "lib/elements.js",
    "lib/index.js",
    "lib/linter.js",
    "lib/logger.js",
    "lib/runner.js",
    "lib/utils/hidden.js",
    "lib/utils/index.js"
  ],
  "names": [],
  "mappingsnhbvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\"use strict\";\n\n    const { $, $$, cssEscape } = require('./utils');\n    const aria = require('./aria');\n    const elements = require('./elements');\n    module.exports = new Map([\n      [\n        \"alt\",\n        Object.assign(\n          { name: \"alt\" },\n          ({\n  message: 'missing alt attribute',\n  selector: 'img:not([alt])',\n})\n        ),\n      ],[\n        \"aria/roles\",\n        Object.assign(\n          { name: \"aria/roles\" },\n          ({\n  message(el) {\n    return this.check(el);\n  },\n  check(el) {\n    const role = el.getAttribute('role').trim();\n    if (!role) {\n      return 'role attribute should not be empty';\n    }\n    let error;\n    const rule = aria.match(el);\n    role.split(/\\s+/).some((name) => {\n      if (!aria.roles[name]) {\n        error = `\"${name}\" is not a known role`;\n        return true;\n      }\n\n      if (rule.implicitRoles.includes(name)) {\n        error = `role \"${name}\" is implicit for this element and should not be specified`;\n        return true;\n      }\n\n      if (!rule.allowedRoles.includes(name)) {\n        error = `role \"${name}\" is not allowed for this element`;\n      }\n\n      return false;\n    });\n\n    return error;\n  },\n  selector: '[role]',\n  filter(el) {\n    return !this.check(el);\n  },\n})\n        ),\n      ],[\n        \"elements/obsolete\",\n        Object.assign(\n          { name: \"elements/obsolete\" },\n          ({\n  message: 'do not use obsolete elements',\n  selector: Object.keys(elements).filter(el => elements[el].obsolete).join(','),\n})\n        ),\n      ],[\n        \"elements/unknown\",\n        Object.assign(\n          { name: \"elements/unknown\" },\n          ({\n  message: 'unknown element',\n  selector: Object.keys(elements).map(name => `:not(${name})`).join(''),\n})\n        ),\n      ],[\n        \"fieldset/fieldset-has-legend\",\n        Object.assign(\n          { name: \"fieldset/fieldset-has-legend\" },\n          ({\n  message: 'All fieldsets must have a legend',\n  selector: 'fieldset',\n  filter: (el) => {\n    const first = el.firstElementChild;\n    return first && first.matches('legend') && first.textContent.trim();\n  },\n})\n        ),\n      ],[\n        \"fieldset/legend-has-fieldset\",\n        Object.assign(\n          { name: \"fieldset/legend-has-fieldset\" },\n          ({\n  message: 'All legends must be the first child of a fieldset',\n  selector: ':not(fieldset)>legend,fieldset>legend:not(:first-child)',\n})\n        ),\n      ],[\n        \"fieldset/multiple-in-fieldset\",\n        Object.assign(\n          { name: \"fieldset/multiple-in-fieldset\" },\n          ({\n  message: 'Multiple inputs with the same name should be in a fieldset',\n  selector: 'input[name]:not([type=hidden]),textarea[name],select[name]',\n  filter: (el) => {\n    let group;\n\n    if (el.form) {\n      const elements = el.form.elements[el.name];\n      if (elements instanceof Node) {\n        return true;\n      }\n      group = Array.from(elements).filter(elm => elm.type !== 'hidden');\n    } else {\n      const namePart = `[name=\"${cssEscape(el.name)}\"]`;\n      group = $$(`input${namePart}:not([type=hidden]),textarea${namePart},select${namePart}`).filter(elm => !elm.form);\n    }\n\n    return group.length === 1 || el.closest('fieldset');\n  },\n})\n        ),\n      ],[\n        \"headings\",\n        Object.assign(\n          { name: \"headings\" },\n          ({\n  message: 'Headings must be nested correctly',\n  selector: 'h2,h3,h4,h5,h6',\n  allowed: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n  previous(el) {\n    let cursor = el.previousElementSibling;\n    while (cursor && cursor.lastElementChild) {\n      cursor = cursor.lastElementChild;\n    }\n    return cursor;\n  },\n  filter(el) {\n    let cursor = el;\n    const level = +el.nodeName[1];\n    do {\n      cursor = this.previous(cursor) || cursor.parentElement;\n      if (cursor && cursor.matches(this.allowed.join())) {\n        return cursor.matches(this.allowed.slice(level - 2).join(','));\n      }\n    } while (cursor);\n    return false;\n  },\n})\n        ),\n      ],[\n        \"label/buttons-have-labels\",\n        Object.assign(\n          { name: \"label/buttons-have-labels\" },\n          ({\n  message: 'buttons must have a label',\n  selector: 'button',\n  filter(el) {\n    let text;\n    if (el.hasAttribute('aria-labelledby')) {\n      text = el.getAttribute('aria-labelledby')\n        .split(/\\s+/)\n        .map(id => document.getElementById(id))\n        .map(node => (node ? node.innerText : ''))\n        .join(' ');\n    } else if (el.hasAttribute('aria-label')) {\n      text = el.getAttribute('aria-label');\n    } else {\n      text = el.innerText;\n    }\n\n    return text.trim();\n  },\n})\n        ),\n      ],[\n        \"label/inputs-are-labelled\",\n        Object.assign(\n          { name: \"label/inputs-are-labelled\" },\n          ({\n  message: 'all form elements must have a label',\n  selector: 'input,select,textarea',\n  filter(el) {\n    if (/^(?:submit|reset|button|image|hidden)$/.test(el.type)) {\n      return true;\n    }\n\n    let label;\n\n    if (el.hasAttribute('aria-labelledby')) {\n      label = $(`#${el.getAttribute('aria-labelledby')}`);\n    }\n\n    if (!label && el.hasAttribute('aria-label')) {\n      label = { textContent: el.getAttribute('aria-label') };\n    }\n\n    if (!label) {\n      if (el.id) {\n        label = $(`label[for=\"${cssEscape(el.id)}\"]`);\n      }\n      if (!label) {\n        label = el.closest('label');\n      }\n    }\n\n    return label && label.textContent.trim();\n  },\n})\n        ),\n      ],[\n        \"label/labels-have-inputs\",\n        Object.assign(\n          { name: \"label/labels-have-inputs\" },\n          ({\n  message: 'all labels must be linked to a control',\n  selector: 'label',\n  filter: el => el.htmlFor && document.getElementById(el.htmlFor),\n})\n        ),\n      ],[\n        \"label/links-have-labels\",\n        Object.assign(\n          { name: \"label/links-have-labels\" },\n          ({\n  message: 'links must have a label',\n  selector: 'a',\n  filter(el) {\n    let text;\n    if (el.hasAttribute('aria-labelledby')) {\n      text = el.getAttribute('aria-labelledby')\n        .split(/\\s+/)\n        .map(id => document.getElementById(id))\n        .map(node => (node ? node.innerText : ''))\n        .join(' ');\n    } else if (el.hasAttribute('aria-label')) {\n      text = el.getAttribute('aria-label');\n    } else {\n      text = el.innerText;\n    }\n\n    return text.trim();\n  },\n})\n        ),\n      ],[\n        \"lang\",\n        Object.assign(\n          { name: \"lang\" },\n          // Language tags are defined in http://www.ietf.org/rfc/bcp/bcp47.txt\n// This regular expression ignores reserved parts, irregular codes, extensions and private use\n({\n  message: el => (el.lang ? 'language code is invalid' : 'missing lang attribute'),\n  selector: 'html',\n  match: /^((en-gb-oed)|([a-z]{2,3}(-[a-z]{3})?(-[a-z]{4})?(-[a-z]{2}|-\\d{3})?(-[a-z0-9]{5,8}|-(\\d[a-z0-9]{3}))*))$/i,\n  filter(el) {\n    return this.match.test(el.lang);\n  },\n})\n        ),\n      ],[\n        \"list-id\",\n        Object.assign(\n          { name: \"list-id\" },\n          ({\n  message: 'no datalist found',\n  selector: 'input[list]',\n  filter(el) {\n    const listId = el.getAttribute('list');\n    return listId && $(`datalist[id=\"${cssEscape(listId)}\"]`);\n  },\n})\n        ),\n      ],[\n        \"namespace-attributes\",\n        Object.assign(\n          { name: \"namespace-attributes\" },\n          ({\n  message: (el) => {\n    const names = ['data', 'data-', 'aria', 'aria-'].filter(name => el.hasAttribute(name));\n    return `invalid attribute${names.length > 1 ? 's' : ''}: ${names.join(', ')}`;\n  },\n  selector: '[data],[data-],[aria],[aria-]',\n})\n        ),\n      ],[\n        \"no-button-without-type\",\n        Object.assign(\n          { name: \"no-button-without-type\" },\n          ({\n  message: 'all buttons should have a type attribute',\n  selector: 'button:not([type])',\n})\n        ),\n      ],[\n        \"no-duplicate-anchor-names\",\n        Object.assign(\n          { name: \"no-duplicate-anchor-names\" },\n          ({\n  message: 'Name is not unique',\n  selector: 'a[name]',\n  filter(el) {\n    const id = cssEscape(el.name);\n    return id && $$(`a[name=\"${id}\"],[id=\"${id}\"]`).length === 1;\n  },\n})\n        ),\n      ],[\n        \"no-empty-select\",\n        Object.assign(\n          { name: \"no-empty-select\" },\n          ({\n  message: 'Selects should have options',\n  selector: 'select',\n  filter: el => $$('option', el).length,\n})\n        ),\n      ],[\n        \"no-links-to-missing-fragments\",\n        Object.assign(\n          { name: \"no-links-to-missing-fragments\" },\n          ({\n  message: 'Fragment not found in document',\n  selector: 'a[href*=\"#\"]',\n  removeHash(ob) {\n    return ob.href.replace(/#.*$/, '');\n  },\n  filter(el) {\n    if (this.removeHash(location) !== this.removeHash(el)) {\n      return true;\n    }\n    const id = cssEscape(decodeURI(el.hash.slice(1)));\n    return $(`[id=\"${id}\"],a[name=\"${id}\"]`);\n  },\n})\n        ),\n      ],[\n        \"no-multiple-select\",\n        Object.assign(\n          { name: \"no-multiple-select\" },\n          ({\n  message: 'Do not use multiple selects',\n  selector: 'select[multiple]',\n})\n        ),\n      ],[\n        \"no-outside-controls\",\n        Object.assign(\n          { name: \"no-outside-controls\" },\n          ({\n  message: 'All controls should be within a form',\n  selector: 'input,textarea,select',\n  filter: el => el.form,\n})\n        ),\n      ],[\n        \"no-reset\",\n        Object.assign(\n          { name: \"no-reset\" },\n          ({\n  message: 'Do not use reset buttons',\n  selector: 'input[type=reset],button[type=reset]',\n})\n        ),\n      ],[\n        \"title\",\n        Object.assign(\n          { name: \"title\" },\n          ({\n  message: 'document must have a title',\n  selector: 'html',\n  filter() {\n    return document.title.trim();\n  },\n})\n        ),\n      ],[\n        \"unique-id\",\n        Object.assign(\n          { name: \"unique-id\" },\n          ({\n  message: 'id is not unique',\n  selector: '[id]',\n  filter: el => !el.id || $$(`[id=\"${cssEscape(el.id)}\"]`).length === 1,\n})\n        ),\n      ]\n    ]);\n  ",
    "\"use strict\";\nmodule.exports = \"1.4.0\"",
    "\"use strict\";\n/**\n *  Data and functions for aria validation.  Based on\n *  - https://www.w3.org/TR/wai-aria-1.1/\n *  - https://www.w3.org/TR/html52/\n */\n\n// const attributes = require('./attributes');\nconst match = require('./match');\nconst roles = require('./roles');\n\n/**\n * All roles\n * @type {Object}\n */\nexports.roles = roles;\n\n/**\n * Get the elements current role based on the role attribute or implicit role\n * @param {Element} el\n * @returns {String|null}\n */\nexports.getRole = (el) => {\n  let role = null;\n  // Should be the first non-abstract role in the list\n  if ((el.getAttribute('role') || '').split(/\\s+/).some((name) => {\n    if (roles[name]) {\n      role = name;\n      return true;\n    }\n    return false;\n  })) {\n    return role;\n  }\n  return match(el).implicitRoles[0] || null;\n};\n\n/**\n * Get the aria rules for an element\n * @param {Element} el\n * @returns {Object}\n */\nexports.getElementRules = el => match(el);\n",
    "\"use strict\";\n/**\n * Aria rules for a HTML element\n *\n * https://w3c.github.io/html-aria/\n */\n\nconst allRoles = require('./roles');\n\nclass Rule {\n  constructor({ selector = '*', implicit = [], roles = [], anyRole = false }) {\n    this.selector = selector;\n    this.implicitRoles = [].concat(implicit);\n    this.roles = roles;\n    this.anyRole = anyRole;\n  }\n\n  get allowedRoles() {\n    if (this.anyRole) {\n      return Object.keys(allRoles).filter(name => !this.implicitRoles.includes(name));\n    }\n    return this.roles;\n  }\n}\n\n// Common rules\n// TODO: include aria attribute rules\nconst noRoleOrAria = new Rule({});\nconst noRole = new Rule({});\nconst anyRole = new Rule({ anyRole: true });\n\n// Hash of elements and rules\nconst rules = {\n  a: [\n    new Rule({\n      selector: '[href]',\n      implicit: 'link',\n      roles: [\n        'button', 'checkbox', 'menuitem', 'menuitemcheckbox',\n        'menuitemradio', 'radio', 'tab', 'switch', 'treeitem',\n      ],\n    }),\n    new Rule({\n      selector: ':not([href])',\n      anyRole: true,\n    }),\n  ],\n  address: new Rule({\n    implicit: ['contentinfo'],\n  }),\n  area: [\n    new Rule({\n      selector: '[href]',\n      implicit: 'link',\n    }),\n  ],\n  article: new Rule({\n    implicit: 'article',\n    roles: ['presentation', 'document', 'application', 'main', 'region'],\n  }),\n  aside: new Rule({\n    implicit: 'complementary',\n    roles: ['note', 'region', 'search'],\n  }),\n  audio: new Rule({\n    roles: ['application'],\n  }),\n  base: noRoleOrAria,\n  body: new Rule({\n    implicit: ['document'],\n  }),\n  button: [\n    new Rule({\n      selector: '[type=menu]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio'],\n    }),\n    new Rule({\n      implicit: 'button',\n      roles: [\n        'checkbox', 'link', 'menuitem', 'menuitemcheckbox',\n        'menuitemradio', 'radio', 'switch', 'tab',\n      ],\n    }),\n  ],\n  caption: noRole,\n  col: noRoleOrAria,\n  colgroup: noRoleOrAria,\n  datalist: new Rule({\n    implicit: 'listbox',\n  }),\n  dd: new Rule({\n    implicit: 'definition',\n  }),\n  details: new Rule({\n    implicit: 'group',\n  }),\n  dialog: new Rule({\n    implicit: 'dialog',\n    roles: ['alertdialog'],\n  }),\n  div: anyRole,\n  dl: new Rule({\n    implicit: 'list',\n    roles: ['group', 'presentation'],\n  }),\n  dt: new Rule({\n    implicit: 'listitem',\n  }),\n  embed: new Rule({\n    roles: ['application', 'document', 'presentation', 'img'],\n  }),\n  fieldset: new Rule({\n    roles: ['group', 'presentation'],\n  }),\n  figure: new Rule({\n    implicit: 'figure',\n    roles: ['group', 'presentation'],\n  }),\n  footer: [\n    new Rule({\n      selector: 'article footer,section footer',\n      roles: ['group', 'presentation'],\n    }),\n    new Rule({\n      implicit: 'contentinfo',\n      roles: ['group', 'presentation'],\n    }),\n  ],\n  form: new Rule({\n    implicit: 'form',\n    roles: ['search', 'presentation'],\n  }),\n  p: anyRole,\n  pre: anyRole,\n  blockquote: anyRole,\n  h1: new Rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h2: new Rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h3: new Rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h4: new Rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h5: new Rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h6: new Rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  head: noRoleOrAria,\n  header: [\n    new Rule({\n      selector: 'article header,section header',\n      roles: ['group', 'presentation'],\n    }),\n    new Rule({\n      implicit: 'banner',\n      roles: ['group', 'presentation'],\n    }),\n  ],\n  hr: new Rule({\n    implicit: 'separator',\n    roles: ['presentation'],\n  }),\n  html: noRoleOrAria,\n  iframe: new Rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  img: [\n    new Rule({\n      selector: '[alt=\"\"]',\n      roles: ['presentation'],\n      aria: false,\n    }),\n    new Rule({\n      implicit: 'img',\n      anyRole: true,\n    }),\n  ],\n  input: [\n    new Rule({\n      selector: '[list]:not([type]),[list][type=text],[list][type=search],[list][type=tel],[list][type=url],[list][type=email]',\n      implicit: 'combobox',\n    }),\n    new Rule({\n      selector: '[type=button]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio', 'switch', 'tab'],\n    }),\n    new Rule({\n      selector: '[type=image]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio', 'switch'],\n    }),\n    new Rule({\n      selector: '[type=checkbox]',\n      implicit: 'checkbox',\n      roles: ['button', 'menuitemcheckbox', 'switch'],\n    }),\n    new Rule({\n      selector: ':not([type]),[type=password],[type=tel],[type=text],[type=url]',\n      implicit: 'textbox',\n    }),\n    new Rule({\n      selector: '[type=email]',\n      implicit: 'textbox',\n    }),\n    new Rule({\n      selector: '[type=hidden]',\n      aria: false,\n    }),\n    new Rule({\n      selector: '[type=number]',\n      implicit: 'spinbutton',\n    }),\n    new Rule({\n      selector: '[type=radio]',\n      implicit: 'radio',\n      roles: ['menuitemradio'],\n    }),\n    new Rule({\n      selector: '[type=range]',\n      implicit: 'slider',\n    }),\n    new Rule({\n      selector: '[type=reset],[type=submit]',\n      implicit: 'button',\n    }),\n    new Rule({\n      selector: '[type=search]',\n      implicit: 'searchbox',\n    }),\n    noRole,\n  ],\n  ins: anyRole,\n  del: anyRole,\n  keygen: noRole,\n  label: noRole,\n  legend: noRole,\n  li: [\n    new Rule({\n      selector: 'ol>li,ul>li',\n      implicit: 'listitem',\n      roles: [\n        'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option',\n        'presentation', 'separator', 'tab', 'treeitem',\n      ],\n    }),\n  ],\n  link: [\n    new Rule({\n      selector: '[href]',\n      implicit: 'link',\n      globalAria: false,\n    }),\n  ],\n  main: new Rule({\n    implicit: 'main',\n  }),\n  map: noRoleOrAria,\n  math: new Rule({\n    implicit: 'math',\n  }),\n  menu: [\n    new Rule({\n      selector: '[type=toolbar]',\n      implicit: 'toolbar',\n    }),\n  ],\n  menuitem: [\n    new Rule({\n      selector: '[type=command]',\n      implicit: 'menuitem',\n    }),\n    new Rule({\n      selector: '[type=checkbox]',\n      implicit: 'menuitemcheckbox',\n    }),\n    new Rule({\n      selector: '[type=radio]',\n      implicit: 'menuitemradio',\n    }),\n  ],\n  meta: noRoleOrAria,\n  meter: new Rule({\n    implicit: 'progressbar',\n  }),\n  nav: new Rule({\n    implicit: 'navigation',\n  }),\n  noscript: noRoleOrAria,\n  object: new Rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  ol: new Rule({\n    implicit: 'list',\n    roles: [\n      'directory', 'group', 'listbox', 'menu', 'menubar', 'presentation',\n      'radiogroup', 'tablist', 'toolbar', 'tree',\n    ],\n  }),\n  optgroup: new Rule({\n    implicit: 'group',\n  }),\n  option: [\n    new Rule({\n      selector: 'select>option,select>optgroup>option,datalist>option',\n      implicit: 'option',\n    }),\n    noRoleOrAria,\n  ],\n  output: new Rule({\n    implicit: 'status',\n    anyRole: true,\n  }),\n  param: noRoleOrAria,\n  picture: noRoleOrAria,\n  progress: new Rule({\n    implicit: 'progressbar',\n  }),\n  script: noRoleOrAria,\n  section: new Rule({\n    implicit: 'region',\n    roles: [\n      'alert', 'alertdialog', 'application', 'banner', 'complementary',\n      'contentinfo', 'dialog', 'document', 'log', 'main', 'marquee',\n      'navigation', 'search', 'status',\n    ],\n  }),\n  select: new Rule({\n    implicit: 'listbox',\n  }),\n  source: noRoleOrAria,\n  span: anyRole,\n  style: noRoleOrAria,\n  svg: new Rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  summary: new Rule({\n    implicit: 'button',\n  }),\n  table: new Rule({\n    implicit: 'table',\n    anyRole: true,\n  }),\n  template: noRoleOrAria,\n  textarea: new Rule({\n    implicit: 'textbox',\n  }),\n  tbody: new Rule({\n    implicit: 'rowgroup',\n    anyRole: true,\n  }),\n  thead: new Rule({\n    implicit: 'rowgroup',\n    anyRole: true,\n  }),\n  tfoot: new Rule({\n    implicit: 'rowgroup',\n    anyRole: true,\n  }),\n  title: noRoleOrAria,\n  td: new Rule({\n    implicit: 'cell',\n    anyRole: true,\n  }),\n  em: anyRole,\n  strong: anyRole,\n  small: anyRole,\n  s: anyRole,\n  cite: anyRole,\n  q: anyRole,\n  dfn: anyRole,\n  abbr: anyRole,\n  time: anyRole,\n  code: anyRole,\n  var: anyRole,\n  samp: anyRole,\n  kbd: anyRole,\n  sub: anyRole,\n  sup: anyRole,\n  i: anyRole,\n  b: anyRole,\n  u: anyRole,\n  mark: anyRole,\n  ruby: anyRole,\n  rt: anyRole,\n  rp: anyRole,\n  bdi: anyRole,\n  bdo: anyRole,\n  br: anyRole,\n  wbr: anyRole,\n  th: new Rule({\n    implicit: ['columnheader', 'rowheader'],\n    anyRole: true,\n  }),\n  tr: new Rule({\n    implicit: 'row',\n    anyRole: true,\n  }),\n  track: noRoleOrAria,\n  ul: new Rule({\n    implicit: 'list',\n    roles: [\n      'directory', 'group', 'listbox', 'menu', 'menubar',\n      'tablist', 'toolbar', 'tree', 'presentation',\n    ],\n  }),\n  video: new Rule({\n    roles: ['application'],\n  }),\n};\n\nmodule.exports = function match(el) {\n  const name = el.nodeName.toLowerCase();\n  let found = rules[name];\n  if (Array.isArray(found)) {\n    found = found.find(item => item.selector === '*' || el.matches(item.selector));\n  }\n  return found || anyRole;\n};\n",
    "\"use strict\";\n/**\n * Rules for aria properties\n *\n * https://w3c.github.io/html-aria/\n */\n\nmodule.exports = {\n  alert: {\n    allowed: ['expanded'],\n  },\n  alertdialog: {\n    allowed: ['expanded', 'modal'],\n  },\n  application: {\n    allowed: ['activedescendant'],\n  },\n  article: {\n    allowed: ['expanded'],\n  },\n  banner: {\n    allowed: ['expanded'],\n  },\n  button: {\n    allowed: ['expanded', 'pressed'],\n    nameFromContent: true,\n  },\n  cell: {\n    nameFromContent: true,\n  },\n  checkbox: {\n    required: ['checked'],\n    nameFromContent: true,\n  },\n  columnheader: {\n    allowed: ['sort', 'readonly', 'required', 'selected', 'expanded'],\n    nameFromContent: true,\n  },\n  combobox: {\n    required: ['expanded'],\n    allowed: ['autocomplete', 'required', 'activedescendant'],\n  },\n  complementary: {\n    allowed: ['expanded'],\n  },\n  contentinfo: {\n    allowed: ['expanded'],\n  },\n  definition: {\n    allowed: ['expanded'],\n  },\n  dialog: {\n    allowed: ['expanded'],\n  },\n  directory: {\n    allowed: ['expanded'],\n  },\n  document: {\n    allowed: ['expanded'],\n  },\n  feed: {\n    allowed: ['setsize', 'expanded'],\n  },\n  figure: {\n    allowed: ['expanded'],\n  },\n  form: {\n    allowed: ['expanded'],\n  },\n  grid: {\n    allowed: ['level', 'multiselectable', 'readonly', 'activedescendant', 'expanded'],\n  },\n  gridcell: {\n    allowed: ['readonly', 'required', 'selected', 'expanded'],\n    nameFromContent: true,\n  },\n  group: {\n    allowed: ['activedescendant', 'expanded'],\n  },\n  heading: {\n    allowed: ['level', 'expanded'],\n    nameFromContent: true,\n  },\n  img: {\n    allowed: ['expanded'],\n  },\n  link: {\n    allowed: ['expanded'],\n    nameFromContent: true,\n  },\n  list: {\n    allowed: ['expanded'],\n  },\n  listbox: {\n    allowed: ['multiselectable', 'required', 'expanded', 'activedescendant', 'expanded'],\n  },\n  listitem: {\n    allowed: ['level', 'posinset', 'setsize', 'expanded'],\n  },\n  log: {\n    allowed: ['expanded'],\n  },\n  main: {\n    allowed: ['expanded'],\n  },\n  marquee: {\n    allowed: ['expanded'],\n  },\n  math: {\n    allowed: ['expanded'],\n  },\n  menu: {\n    allowed: ['activedescendant', 'expanded'],\n  },\n  menubar: {\n    allowed: ['activedescendant'],\n  },\n  menuitem: {\n    nameFromContent: true,\n  },\n  menuitemcheckbox: {\n    required: ['checked'],\n    nameFromContent: true,\n  },\n  menuitemradio: {\n    required: ['checked'],\n    allowed: ['posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n  },\n  navigation: {\n    allowed: ['expanded'],\n  },\n  note: {\n    allowed: ['expanded'],\n  },\n  option: {\n    allowed: ['checked', 'posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n  },\n  presentation: {},\n  progressbar: {\n    allowed: ['valuemax', 'valuemin', 'valuenow', 'valuetext'],\n  },\n  radio: {\n    required: ['checked'],\n    allowed: ['posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n  },\n  radiogroup: {\n    allowed: ['required', 'activedescendant', 'expanded'],\n  },\n  region: {\n    allowed: ['expanded'],\n  },\n  row: {\n    allowed: [\n      'colindex', 'level', 'rowindex', 'selected', 'level', 'selected',\n      'activedescendant', 'expanded',\n    ],\n    nameFromContent: true,\n  },\n  rowgroup: {\n    allowed: ['activedescendant', 'expanded'],\n    nameFromContent: true,\n  },\n  rowheader: {\n    allowed: ['sort', 'readonly', 'required', 'selected', 'expanded'],\n    nameFromContent: true,\n  },\n  scrollbar: {\n    required: ['controls', 'orientation', 'valuemax', 'valuemin', 'valuenow'],\n    allowed: ['expanded'],\n  },\n  search: {\n    allowed: ['expanded', 'orientation'],\n  },\n  searchbox: {\n    allowed: ['activedescendant', 'autocomplete', 'multiline', 'placeholder', 'readonly', 'required'],\n  },\n  separator: {\n    allowed: ['valuetext'],\n  },\n  slider: {\n    required: ['valuemax', 'valuemin', 'valuenow'],\n    allowed: ['orientation', 'valuetext'],\n  },\n  spinbutton: {\n    required: ['valuemax', 'valuemin', 'valuenow'],\n    allowed: ['required', 'valuetext'],\n  },\n  status: {\n    allowed: ['expanded'],\n  },\n  switch: {\n    required: ['checked'],\n    nameFromContent: true,\n  },\n  tab: {\n    allowed: ['selected', 'expanded'],\n    nameFromContent: true,\n  },\n  table: {\n    allowed: ['colcount', 'rowcount'],\n  },\n  tablist: {\n    allowed: ['level', 'activedescendant', 'expanded'],\n  },\n  tabpanel: {\n    allowed: ['expanded'],\n  },\n  term: {\n    allowed: ['expanded'],\n  },\n  textbox: {\n    allowed: ['activedescendant', 'autocomplete', 'multiline', 'placeholder', 'readonly', 'required'],\n  },\n  timer: {\n    allowed: ['expanded'],\n  },\n  toolbar: {\n    allowed: ['activedescendant', 'expanded'],\n    nameFromContent: true,\n  },\n  tooltip: {\n    allowed: ['expanded'],\n  },\n  tree: {\n    allowed: ['multiselectable', 'required', 'activedescendant', 'expanded'],\n    nameFromContent: true,\n  },\n  treegrid: {\n    allowed: ['level', 'multiselecteable', 'readonly', 'activedescendant', 'expanded', 'required'],\n  },\n  treeitem: {\n    allowed: ['level', 'posinset', 'setsize', 'expanded', 'checked', 'selected'],\n  },\n};\n",
    "\"use strict\";\n/**\n * Data for HTML elements.  Based on\n * - https://www.w3.org/TR/html52/\n * - https://w3c.github.io/html-aria/\n */\n\nconst obsolete = { obsolete: true };\nmodule.exports = {\n  a: {},\n  abbr: {},\n  acronym: obsolete,\n  address: {},\n  applet: obsolete,\n  area: {},\n  article: {},\n  aside: {},\n  audio: {},\n  b: {},\n  base: {},\n  basefont: obsolete,\n  bdi: {},\n  bdo: {},\n  bgsound: obsolete,\n  big: obsolete,\n  blink: obsolete,\n  blockquote: {},\n  body: {},\n  br: {},\n  button: {},\n  canvas: {},\n  caption: {},\n  center: obsolete,\n  cite: {},\n  code: {},\n  col: {},\n  colgroup: {},\n  command: obsolete,\n  data: {},\n  datalist: {},\n  dd: {},\n  del: {},\n  details: {},\n  dfn: {},\n  dialog: {},\n  dir: obsolete,\n  div: {},\n  dl: {},\n  dt: {},\n  em: {},\n  embed: {},\n  fieldset: {},\n  figcaption: {},\n  figure: {},\n  font: obsolete,\n  footer: {},\n  form: {},\n  frame: obsolete,\n  frameset: obsolete,\n  h1: {},\n  h2: {},\n  h3: {},\n  h4: {},\n  h5: {},\n  h6: {},\n  head: {},\n  header: {},\n  hgroup: obsolete,\n  hr: {},\n  html: {},\n  i: {},\n  iframe: {},\n  image: obsolete,\n  img: {},\n  input: {},\n  ins: {},\n  isindex: obsolete,\n  kbd: {},\n  keygen: obsolete,\n  label: {},\n  legend: {},\n  li: {},\n  link: {},\n  listing: obsolete,\n  main: {},\n  map: {},\n  mark: {},\n  marquee: obsolete,\n  menu: {},\n  menuitem: {},\n  meta: {},\n  meter: {},\n  multicol: obsolete,\n  nav: {},\n  nextid: obsolete,\n  nobr: obsolete,\n  noembed: obsolete,\n  noframes: obsolete,\n  noscript: {},\n  object: {},\n  ol: {},\n  optgroup: {},\n  option: {},\n  output: {},\n  p: {},\n  param: {},\n  picture: {},\n  plaintext: obsolete,\n  pre: {},\n  progress: {},\n  q: {},\n  rb: {},\n  rp: {},\n  rt: {},\n  rtc: {},\n  ruby: {},\n  s: {},\n  samp: {},\n  script: {},\n  section: {},\n  select: {},\n  small: {},\n  source: {},\n  spacer: obsolete,\n  span: {},\n  strike: obsolete,\n  strong: {},\n  style: {},\n  sub: {},\n  summary: {},\n  sup: {},\n  table: {},\n  tbody: {},\n  td: {},\n  template: {},\n  textarea: {},\n  tfoot: {},\n  th: {},\n  thead: {},\n  time: {},\n  title: {},\n  tr: {},\n  track: {},\n  tt: obsolete,\n  u: {},\n  ul: {},\n  var: {},\n  video: {},\n  wbr: {},\n  xmp: obsolete,\n};\n",
    "\"use strict\";\n/**\n * Entry point for standalone autorunning linter\n */\nconst Linter = require('./linter');\n\nlet config = window.accessibilityLinterConfig;\nif (!config) {\n  const scriptElement = document.currentScript;\n  if (scriptElement) {\n    const settings = scriptElement.textContent.trim();\n    if (settings) {\n      config = JSON.parse(settings);\n    }\n  }\n}\n\nconst linter = new Linter(config);\nconst start = () => {\n  linter.run();\n  linter.observe();\n};\n\nif (/^(:?interactive|complete)$/.test(document.readyState)) {\n  // Document already loaded\n  start();\n} else {\n  document.addEventListener('DOMContentLoaded', start);\n}\n\nmodule.exports = linter;\n",
    "\"use strict\";\nconst Runner = require('./runner');\nconst Logger = require('./logger');\nconst rules = require('./rules');\nconst utils = require('./utils');\nconst version = require('./version');\nconst aria = require('./aria');\nconst elements = require('./elements');\n\nconst Linter = module.exports = class AccessibilityLinter extends Runner {\n  constructor(options) {\n    options = options || {};\n    options.logger = options.logger || new Logger();\n    options.rules = options.rules || rules;\n    super(options);\n\n    this.root = options.root || document;\n  }\n\n  /**\n   * Start looking for issues\n   */\n  observe() {\n    this.observer = utils.observe(this.run.bind(this), this.root);\n  }\n\n  /**\n   * Stop looking for issues\n   */\n  stopObserving() {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  }\n};\n\nLinter.Logger = Logger;\nLinter.rules = rules;\nLinter.version = version;\nLinter.aria = aria;\nLinter.elements = elements;\nLinter.utils = utils;\n",
    "\"use strict\";\n/* eslint-disable no-console */\nmodule.exports = class Logger {\n  constructor(docLink) {\n    this.docLink = docLink;\n  }\n\n  error(rule, el) {\n    console.error.apply(console, this.message(rule, el));\n  }\n\n  warn(rule, el) {\n    console.warn.apply(console, this.message(rule, el));\n  }\n\n  message(rule, el) {\n    return [\n      typeof rule.message === 'function' ? rule.message(el) : rule.message,\n      el,\n      this.getLink(rule),\n    ].filter(Boolean);\n  }\n\n  getLink(rule) {\n    if (!this.docLink || !rule.doc) {\n      return null;\n    }\n\n    return `${this.docLink}#${rule.doc}`;\n  }\n};\n",
    "\"use strict\";\nconst { $$ } = require('./utils');\n\nconst dataAttr = 'accessibility-linter';\n\nconst addToSetArray = (set, key, value) => set.set(key, (set.get(key) || []).concat(value));\nconst isInSetArray = (set, key, value) => (set.get(key) || []).includes(value);\nconst cssEscape = value => value.replace(/\"/g, '\\\\\"');\n\nmodule.exports = class Runner {\n  constructor(config) {\n    this.rules = config.rules;\n    this.ruleSettings = config.ruleSettings || {};\n    this.defaultOff = !!config.defaultOff;\n\n    this.whitelist = config.whitelist;\n    this.logger = config.logger;\n\n    // Elements and issues already reported\n    this.reported = new WeakMap();\n    // Elements that are whitelisted\n    this.whitelisted = new WeakMap();\n    // Elements with ignore attributes\n    this.ignored = new WeakMap();\n  }\n\n  settings(name) {\n    return this.ruleSettings[name] || {};\n  }\n\n  /**\n   * Run all the rules\n   * @param {HTMLElement} [context] A context to run the rules within\n   */\n  run(context) {\n    this.rules\n      .forEach((rule, name) => {\n        const enabled = this.settings(name).enabled;\n        if (enabled === false ||\n          (enabled !== true && (this.defaultOff || rule.enabled === false))) {\n          return;\n        }\n        this.runRule(rule, name, context);\n      });\n  }\n\n  /**\n   * Run a single rule\n   * @param {Object} rule The rule to run\n   * @param {HTMLElement} [context] A context to run the rules within\n   */\n  runRule(rule, name, context) {\n    $$(rule.selector, context)\n      .filter(el => this.filterIgnoreAttribute(el, name))\n      .filter(el => this.filterWhitelist(el, name))\n      .filter(el => !isInSetArray(this.reported, el, name))\n      .filter(el => (rule.filter ? !rule.filter(el) : true))\n      .forEach((el) => {\n        const type = this.settings(name).type || rule.type || 'error';\n        this.logger[type](rule, el);\n        addToSetArray(this.reported, el, name);\n      });\n  }\n\n  /**\n   * Filter elements on the whitelist\n   */\n  filterWhitelist(el, name) {\n    if (isInSetArray(this.whitelisted, el, name)) {\n      return false;\n    }\n\n    const globalWhitelist = this.whitelist;\n    const whitelist = this.settings(name).whitelist;\n    const isWhitelisted = (globalWhitelist && el.matches(globalWhitelist)) ||\n      (whitelist || el.matches(whitelist));\n\n    if (isWhitelisted) {\n      addToSetArray(this.whitelisted, el, name);\n      return false;\n    }\n\n    return true;\n  }\n\n  filterIgnoreAttribute(el, ruleName) {\n    if (isInSetArray(this.ignored, el, ruleName)) {\n      return false;\n    }\n\n    const ignore = el.matches(\n      `[data-${dataAttr}-ignore=\"\"],[data-${dataAttr}-ignore~=\"${cssEscape(ruleName)}\"]`\n    );\n\n    if (ignore) {\n      addToSetArray(this.ignored, el, ruleName);\n      return false;\n    }\n\n    return true;\n  }\n};\n",
    "\"use strict\";\n// Is the element hidden using CSS\nfunction cssHidden(el) {\n  const style = window.getComputedStyle(el);\n  return style.visibility !== 'visible' || style.display === 'none';\n}\n\n// Is the element hidden from accessibility software\nmodule.exports = function hidden(el) {\n  return el.getAttribute('aria-hidden') === 'true'\n    || el.getClientRects().length === 0\n    || !!el.closest('[aria-hidden=true]')\n    || cssHidden(el);\n};\n",
    "\"use strict\";\n/**\n * Utils for working with the DOM\n */\n\nconst hidden = require('./hidden');\n\n/**\n * Find DOM nodes from a selector.  The found node can include the supplied context\n * @param {String|NodeList} selector\n * @param {HTMLElement} [context]\n */\nexports.$$ = function $$(selector, context) {\n  const root = context || document;\n  const els = Array.from(root.querySelectorAll(selector));\n  if (context && context instanceof Element && context.matches(selector)) {\n    els.push(context);\n  }\n  return els;\n};\n\nexports.$ = function $(selector, context) {\n  return exports.$$(selector, context)[0];\n};\n\nexports.cssEscape = function cssEscape(name) {\n  return name.replace(/[\"\\\\]/g, '\\\\$&');\n};\n\nexports.hidden = hidden;\n\n/**\n * Observe for child list mutations\n * @param {Function} fn function to call for each mutation\n */\nexports.observe = function mutationObserver(fn, root) {\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      Array.from(mutation.addedNodes)\n        .filter(node => node.nodeType === Node.ELEMENT_NODE)\n        .forEach(node => fn(node));\n    });\n  });\n  observer.observe(root, { subtree: true, childList: true });\n  return observer;\n};\n"
  ]
}