{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "lib/rules/aria/allowed-attributes/rule.js",
    "lib/rules/aria/attribute-values/rule.js",
    "lib/rules/aria/deprecated-attributes/rule.js",
    "lib/rules/aria/immutable-role/rule.js",
    "lib/rules/aria/landmark/one-banner/rule.js",
    "lib/rules/aria/landmark/one-contentinfo/rule.js",
    "lib/rules/aria/landmark/one-main/rule.js",
    "lib/rules/aria/landmark/prefer-main/rule.js",
    "lib/rules/aria/landmark/required/rule.js",
    "lib/rules/aria/no-focusable-hidden/rule.js",
    "lib/rules/aria/no-focusable-role-none/rule.js",
    "lib/rules/aria/no-none-without-presentation/rule.js",
    "lib/rules/aria/one-role/rule.js",
    "lib/rules/aria/roles/rule.js",
    "lib/rules/aria/unsupported-elements/rule.js",
    "lib/rules/attributes/data/rule.js",
    "lib/rules/attributes/no-javascript-handlers/rule.js",
    "lib/rules/attributes/no-positive-tab-index/rule.js",
    "lib/rules/colour-contrast/aa/rule.js",
    "lib/rules/colour-contrast/aaa/rule.js",
    "lib/rules/details-and-summary/rule.js",
    "lib/rules/elements/obsolete/rule.js",
    "lib/rules/elements/unknown/rule.js",
    "lib/rules/fieldset-and-legend/rule.js",
    "lib/rules/headings/rule.js",
    "lib/rules/ids/form-attribute/rule.js",
    "lib/rules/ids/imagemap-ids/rule.js",
    "lib/rules/ids/labels-have-inputs/rule.js",
    "lib/rules/ids/list-id/rule.js",
    "lib/rules/ids/no-duplicate-anchor-names/rule.js",
    "lib/rules/ids/unique-id/rule.js",
    "lib/rules/labels/area/rule.js",
    "lib/rules/labels/aria-command/rule.js",
    "lib/rules/labels/controls/rule.js",
    "lib/rules/labels/group/rule.js",
    "lib/rules/labels/headings/rule.js",
    "lib/rules/labels/img/rule.js",
    "lib/rules/labels/links/rule.js",
    "lib/rules/labels/tabindex/rule.js",
    "lib/rules/lang/rule.js",
    "lib/rules/multiple-in-group/rule.js",
    "lib/rules/no-button-without-type/rule.js",
    "lib/rules/no-consecutive-brs/rule.js",
    "lib/rules/no-empty-select/rule.js",
    "lib/rules/no-links-as-buttons/rule.js",
    "lib/rules/no-links-to-missing-fragments/rule.js",
    "lib/rules/no-multiple-select/rule.js",
    "lib/rules/no-outside-controls/rule.js",
    "lib/rules/no-placeholder-links/rule.js",
    "lib/rules/no-reset/rule.js",
    "lib/rules/no-unassociated-labels/rule.js",
    "lib/rules/security/charset/rule.js",
    "lib/rules/security/target/rule.js",
    "lib/rules/title/rule.js",
    "lib/_stream_54.js",
    "lib/_stream_55.js",
    "lib/config/allowed-aria.js",
    "lib/config/aria-attributes.js",
    "lib/config/elements.js",
    "lib/config/event-handler-attributes.js",
    "lib/config/index.js",
    "lib/config/roles.js",
    "lib/index.js",
    "lib/linter.js",
    "lib/logger.js",
    "lib/rules/rule.js",
    "lib/runner.js",
    "lib/support/constants.js",
    "lib/support/element-cache.js",
    "lib/support/extended-array.js",
    "lib/support/set-cache.js",
    "lib/utils/aria.js",
    "lib/utils/contrast.js",
    "lib/utils/cssEscape.js",
    "lib/utils/hidden.js",
    "lib/utils/index.js",
    "lib/utils/name.js",
    "lib/utils/selectors.js",
    "lib/utils/style.js"
  ],
  "names": [
    "f",
    "exports",
    "module",
    "define",
    "amd",
    "g",
    "window",
    "global",
    "self",
    "this",
    "AccessibilityLinter",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "require",
    "i",
    "Error",
    "code",
    "l",
    "call",
    "length",
    "./rules/aria/allowed-attributes/rule.js",
    "_dereq_",
    "Rule",
    "disableable",
    "placeholderable",
    "requireable",
    "readonlyable",
    "hasContentEditable",
    "el",
    "contentEditable",
    "closest",
    "[object Object]",
    "utils",
    "ariaAttributes",
    "Array",
    "from",
    "attributes",
    "filter",
    "name",
    "startsWith",
    "map",
    "slice",
    "allowed",
    "aria",
    "errors",
    "config",
    "push",
    "noAria",
    "join",
    "role",
    "getRole",
    "includes",
    "nodeName",
    "toLowerCase",
    "hidden",
    "allowsRoleAttributes",
    "roles",
    "ariaForImplicit",
    "implicit",
    "roleConfig",
    "getAttribute",
    "type",
    "required",
    "ExtendedArray",
    "rSpace",
    "checkers",
    "value",
    "trim",
    "test",
    "tokens",
    "alone",
    "values",
    "split",
    "Boolean",
    "unknown",
    "token",
    "alones",
    "document",
    "getElementById",
    "missing",
    "id",
    "_selector",
    "Object",
    "keys",
    "description",
    "concat",
    "compact",
    "message",
    "flatten",
    "_deprecated",
    "entries",
    "deprecated",
    "settings",
    "super",
    "history",
    "WeakMap",
    "has",
    "get",
    "set",
    "hasRole",
    "found",
    "$$",
    "selector",
    "elm",
    "groupBy",
    "closestRole",
    "group",
    "BannerRule",
    "hasLandmark",
    "body",
    "innerText",
    "focusable",
    "matches",
    "isSupported",
    "elements",
    "unsupported",
    "error",
    "supported",
    "some",
    "abstract",
    "eventHandlerAttributes",
    "handlers",
    "tabIndex",
    "enabled",
    "min",
    "minLarge",
    "context",
    "iterate",
    "findAncestor",
    "unique",
    "ratio",
    "node",
    "iterateSiblings",
    "cursor",
    "hasTextNode",
    "firstElementChild",
    "nextElementSibling",
    "childNodes",
    "nodeType",
    "Node",
    "TEXT_NODE",
    "data",
    "colour",
    "contrast",
    "textColour",
    "backgroundColour",
    "parentNode",
    "parent",
    "parseFloat",
    "textContrast",
    "toFixed",
    "fontSize",
    "style",
    "fontWeight",
    "large",
    "ColourContrastAARule",
    "FieldsetRule",
    "child",
    "obsolete",
    "getFirstChild",
    "firstChild",
    "Text",
    "nextSibling",
    "isHidden",
    "HTMLElement",
    "previous",
    "previousElementSibling",
    "lastElementChild",
    "getLevel",
    "level",
    "parentElement",
    "previousLevel",
    "formId",
    "form",
    "mapNames",
    "item",
    "imgUseMaps",
    "img",
    "useMap",
    "htmlFor",
    "listId",
    "$",
    "cssEscape",
    "alt",
    "rolesOfType",
    "ariaHidden",
    "accessibleName",
    "includeHidden",
    "match",
    "lang",
    "excludeTypes",
    "excludeSelector",
    "namePart",
    "isBr",
    "Element",
    "previousElementIsBr",
    "previousSibling",
    "nextElementIsBr",
    "removeHash",
    "ob",
    "href",
    "replace",
    "location",
    "decodeURI",
    "hash",
    "disabled",
    "labelable",
    "forEl",
    "targets",
    "contains",
    "documentElement",
    "characterSet",
    "meta",
    "forEach",
    "head",
    "httpEquiv",
    "constants",
    "target",
    "formTarget",
    "rel",
    "url",
    "action",
    "URL",
    "_",
    "host",
    "title",
    "rule",
    "anyRole",
    "noRoleOrAria",
    "noRole",
    "_default",
    "address",
    "area",
    "article",
    "aside",
    "audio",
    "base",
    "button",
    "canvas",
    "caption",
    "col",
    "colgroup",
    "datalist",
    "dd",
    "details",
    "dialog",
    "div",
    "dl",
    "dt",
    "embed",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "exact",
    "p",
    "pre",
    "blockquote",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "header",
    "hr",
    "html",
    "iframe",
    "input",
    "ins",
    "del",
    "label",
    "legend",
    "li",
    "link",
    "globalAria",
    "main",
    "math",
    "menu",
    "menuitem",
    "meter",
    "nav",
    "noscript",
    "object",
    "ol",
    "optgroup",
    "option",
    "output",
    "param",
    "picture",
    "progress",
    "script",
    "section",
    "select",
    "source",
    "span",
    "svg",
    "summary",
    "table",
    "template",
    "textarea",
    "tbody",
    "thead",
    "tfoot",
    "td",
    "em",
    "strong",
    "small",
    "cite",
    "q",
    "dfn",
    "abbr",
    "time",
    "var",
    "samp",
    "kbd",
    "sub",
    "sup",
    "b",
    "mark",
    "ruby",
    "rb",
    "rtc",
    "rt",
    "rp",
    "bdi",
    "bdo",
    "br",
    "wbr",
    "th",
    "tr",
    "track",
    "ul",
    "video",
    "boolean",
    "tristate",
    "nilableBoolean",
    "activedescendant",
    "atomic",
    "autocomplete",
    "busy",
    "checked",
    "colcount",
    "colindex",
    "colspan",
    "controls",
    "current",
    "describedby",
    "dropeffect",
    "errormessage",
    "expanded",
    "flowto",
    "grabbed",
    "haspopup",
    "invalid",
    "keyshortcuts",
    "labelledby",
    "live",
    "modal",
    "multiline",
    "multiselectable",
    "orientation",
    "owns",
    "placeholder",
    "posinset",
    "pressed",
    "readonly",
    "relevant",
    "roledescription",
    "rowcount",
    "rowindex",
    "rowspan",
    "selected",
    "setsize",
    "sort",
    "valuemax",
    "valuemin",
    "valuenow",
    "valuetext",
    "labels",
    "acronym",
    "applet",
    "basefont",
    "bgsound",
    "big",
    "blink",
    "nativeLabel",
    "center",
    "command",
    "querySelector",
    "dir",
    "font",
    "frame",
    "frameset",
    "hgroup",
    "image",
    "isindex",
    "keygen",
    "listing",
    "marquee",
    "multicol",
    "nextid",
    "nobr",
    "noembed",
    "noframes",
    "plaintext",
    "spacer",
    "strike",
    "tt",
    "xmp",
    "allowedAria",
    "extendElements",
    "original",
    "assign",
    "key",
    "Config",
    "alert",
    "subclass",
    "alertdialog",
    "application",
    "banner",
    "nameFromContent",
    "cell",
    "checkbox",
    "columnheader",
    "combobox",
    "complementary",
    "composite",
    "contentinfo",
    "definition",
    "directory",
    "feed",
    "grid",
    "gridcell",
    "heading",
    "landmark",
    "list",
    "listbox",
    "listitem",
    "log",
    "menubar",
    "menuitemcheckbox",
    "menuitemradio",
    "navigation",
    "none",
    "note",
    "presentation",
    "progressbar",
    "radio",
    "radiogroup",
    "range",
    "region",
    "roletype",
    "row",
    "rowgroup",
    "rowheader",
    "scrollbar",
    "search",
    "searchbox",
    "sectionhead",
    "separator",
    "slider",
    "spinbutton",
    "status",
    "structure",
    "switch",
    "tab",
    "tablist",
    "tabpanel",
    "term",
    "textbox",
    "timer",
    "toolbar",
    "tooltip",
    "tree",
    "treegrid",
    "treeitem",
    "widget",
    "Linter",
    "accessibilityLinterConfig",
    "scriptElement",
    "currentScript",
    "textContent",
    "JSON",
    "parse",
    "linter",
    "start",
    "run",
    "observe",
    "readyState",
    "addEventListener",
    "accessibilityLinter",
    "Runner",
    "Logger",
    "rules",
    "Utils",
    "version",
    "Contrast",
    "ruleList",
    "Map",
    "path",
    "logger",
    "root",
    "observeDomChanges",
    "observeFocus",
    "stopObservingDomChanges",
    "stopObservingFocus",
    "observer",
    "MutationObserver",
    "mutations",
    "nodes",
    "Set",
    "record",
    "node1",
    "node2",
    "delete",
    "subtree",
    "childList",
    "characterData",
    "disconnect",
    "Promise",
    "resolve",
    "capture",
    "passive",
    "removeEventListener",
    "Symbol",
    "for",
    "colourContrast",
    "console",
    "apply",
    "setDefaults",
    "of",
    "SetCache",
    "dummyCache",
    "globalSettings",
    "defaultOff",
    "cacheReported",
    "ruleSettings",
    "ignoreAttribute",
    "whitelist",
    "reported",
    "whitelisted",
    "globalWhitelisted",
    "WeakSet",
    "ignored",
    "runInternal",
    "runner",
    "constructor",
    "notWhitelisted",
    "notIgnored",
    "notReported",
    "issue",
    "add",
    "ruleName",
    "ignore",
    "getOrSet",
    "cache",
    "setter",
    "ElementCache",
    "_cache",
    "optionsKey",
    "arguments",
    "fn",
    "ar",
    "result",
    "isArray",
    "Aria",
    "find",
    "actualRole",
    "checkRole",
    "ELEMENT_NODE",
    "gamma",
    "Math",
    "pow",
    "blendAlpha",
    "d",
    "blendChannel",
    "sc",
    "dc",
    "sa",
    "da",
    "ba",
    "blend",
    "colours",
    "reverse",
    "_r",
    "_g",
    "_b",
    "_a",
    "aNew",
    "round",
    "luminosity",
    "contrastRatio",
    "l1",
    "l2",
    "toRgbaArray",
    "createElement",
    "color",
    "appendChild",
    "getComputedStyle",
    "colourParts",
    "styleCache",
    "_textLuminosity",
    "_backgroundLuminosity",
    "colourStack",
    "currentColour",
    "background",
    "_blendWithBackground",
    "foreground",
    "prototype",
    "_blend",
    "_luminosity",
    "_colourParts",
    "_contrastRatio",
    "noRects",
    "cssHidden",
    "getClientRects",
    "Hidden",
    "accessibleDescription",
    "Style",
    "_style",
    "_hidden",
    "_nameCache",
    "_descriptionCache",
    "options",
    "pseudo",
    "controlRoles",
    "nameFromContentRoles",
    "AccessibleName",
    "recursion",
    "allowHidden",
    "noAriaBy",
    "isWithinWidget",
    "sequence",
    "ariaBy",
    "embedded",
    "ariaLabel",
    "native",
    "loop",
    "dom",
    "_role",
    "_nodeName",
    "text",
    "attr",
    "ids",
    "recurse",
    "prop",
    "element",
    "useEmbeddedName",
    "selectedOptions",
    "build",
    "AccessibleDescription",
    "unshift",
    "describedBy",
    "els",
    "querySelectorAll",
    "getStyle"
  ],
  "mappings": "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AAAA,GAAA2J,KAAA,KAGAqF,OACA7O,YAAAH,GAAAI,OACA,GAAAJ,GAAAiC,OAAA,SAAA,CACA,OAAA,KAGA,GAAAjC,GAAAiC,OAAA,QAAA,CACA,OAAAjC,GAAA2J,KAAA3J,GAAAsC,OAAA,GAGA,IAAA,SAAA,QAAA,UAAAf,SAAAvB,GAAAiC,MAAA,CACA,OAAAjC,GAAAsC,MAGA,OAAAyT,OAAA/V,GAAAI,SAGA6O,OACA+H,QAAA9O,SACA6J,OACAkF,OAAA/O,SACAiH,SACAC,UACAC,MACAC,QACA4H,QAAAhP,SACAsH,QACA5O,OACAuR,QACAgF,QAAAjP,SACAuH,QACAC,MACAnK,YAAA,MAEAoK,UACApK,YAAA,MAEAiG,QACAoE,OACA0G,YAAAP,QAEAqB,SAAAlP,SACA2H,OACAwH,OAAAnP,SACAoP,KAAApP,SACAqP,QAAArP,SACAsP,SAAAtP,SACA4H,YACAC,UACAC,MACAC,YACAC,UACAC,QACAmG,YAAAP,QAEA5H,KACAiC,SACAC,WACAoH,UAAAvP,SACAkG,OACAkC,UACAgG,YAAAP,QAEAtE,KACAY,MACAG,MACAD,MACAD,OACAF,QACAvT,KACAiT,QACAvB,UACAC,WACAC,QACA6F,YAAAP,QAEAxE,SACAb,UACAgH,OAAAxP,SACAyI,QACAgH,OAAAzP,SACAoJ,UACA1J,SACAoK,OACAnB,SACAtL,YAAA,MAEA0M,OACArB,OACAE,SACAG,SACAG,MACAL,YACAC,UACAsF,YAAAP,QAEA5E,SACA0B,MACA3B,SACAU,QACAvF,SACAyG,MACAC,SACA6E,GAAA1P,SACAnJ,KACAiU,MACAnB,OACAoB,SACAL,OACAiF,IAAA3P,mDCzOA,aACAnK,QAAA6H,wBACA,UACA,aACA,SACA,WACA,YACA,mBACA,WACA,UACA,UACA,gBACA,cACA,aACA,SACA,YACA,cACA,aACA,cACA,aACA,cACA,SACA,mBACA,YACA,UACA,UACA,UACA,UACA,YACA,YACA,aACA,UACA,SACA,eACA,mBACA,YACA,cACA,cACA,eACA,eACA,cACA,aACA,cACA,YACA,UACA,UACA,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",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\"use strict\";\nconst Rule = require('../../rule.js');\n\nconst disableable = ['input', 'button', 'select', 'optgroup', 'textarea', 'fieldset']; // option does not need to be included\nconst placeholderable = ['input', 'textarea'];\nconst requireable = ['input', 'select', 'textarea'];\nconst readonlyable = ['text', 'url', 'email'];\n\nfunction hasContentEditable(el) {\n  return el.contentEditable === 'true' || (((el.closest('[contenteditable]') || {}).contentEditable === 'true'));\n}\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '*';\n  }\n\n  test(el, utils) {\n    let ariaAttributes = Array.from(el.attributes)\n      .filter(({ name }) => name.startsWith('aria-'))\n      .map(({ name }) => name.slice(5));\n\n    if (!ariaAttributes.length) {\n      return null;\n    }\n\n    const allowed = utils.aria.allowed(el);\n    const errors = [];\n\n    ariaAttributes = ariaAttributes.filter((name) => {\n      if (!utils.config.ariaAttributes[name]) {\n        errors.push(`aria-${name} is not a known aria attribute`);\n        return false;\n      }\n      return true;\n    });\n\n    if (allowed.noAria) {\n      errors.push(`no aria attributes are allowed on element. Found ${ariaAttributes.map(name => `aria-${name}`).join(', ')}`);\n      return errors;\n    }\n\n    const role = utils.aria.getRole(el, allowed);\n\n    if (['none', 'presentation'].includes(role)) {\n      errors.push(`no aria attributes should be added for a role of ${role}. Found ${ariaAttributes.map(name => `aria-${name}`).join(', ')}`);\n      return errors;\n    }\n\n    const nodeName = el.nodeName.toLowerCase();\n\n    if (ariaAttributes.includes('disabled') && disableable.includes(nodeName)) {\n      errors.push('do not include aria-disabled on elements with a native disabled attribute');\n    }\n\n    if (ariaAttributes.includes('hidden') && el.hidden) {\n      errors.push('do not include aria-hidden on elements with a hidden attribute');\n    }\n\n    // filter global\n    ariaAttributes = ariaAttributes\n      .filter(name => !(utils.config.ariaAttributes[name] || {}).global);\n\n    // filter disallowed\n    const allowsRoleAttributes = allowed.roles === '*'\n      || allowed.roles.includes(role)\n      || (allowed.ariaForImplicit && allowed.implicit.includes(role));\n    const roleConfig = utils.config.roles[role];\n    ariaAttributes = ariaAttributes\n      .filter((name) => {\n        if (allowsRoleAttributes && roleConfig && roleConfig.allowed.includes(name)) {\n          return true;\n        }\n        errors.push(`aria-${name} is not allowed on this element`);\n        return false;\n      });\n\n    if (ariaAttributes.includes('readonly')) {\n      if (el.getAttribute('aria-readonly') === 'true' && hasContentEditable(el)) {\n        errors.push('do not include aria-readonly=\"true\" on elements with contenteditable');\n      }\n\n      if (nodeName === 'textarea' || (nodeName === 'input' && readonlyable.includes(el.type))) {\n        errors.push('do not include aria-readonly on elements with a native readonly attribute');\n      }\n    }\n\n    if (ariaAttributes.includes('placeholder') && placeholderable.includes(nodeName)) {\n      errors.push('do not include aria-placeholder on elements with a native placeholder attribute');\n    }\n\n    if (ariaAttributes.includes('required')\n      && requireable.includes(nodeName)\n      && el.required\n      && el.getAttribute('aria-required') === 'false') {\n      errors.push('do not set aria-required to false if the required attribute is set');\n    }\n\n    return errors;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst ExtendedArray = require('../../../support/extended-array');\nconst { rSpace } = require('../../../support/constants');\n\nconst checkers = {\n  string(value) {\n    return !value.trim() ? 'must be a non-empty string' : null;\n  },\n\n  integer(value) {\n    return /^-?\\d+$/.test(value) ? null : 'must be an integer';\n  },\n\n  number(value) {\n    // Although not entirely clear, let us assume the number follows the html5 specification\n    return /^-?(?:\\d+\\.\\d+|\\d+|\\.\\d+)(?:[eE][+-]?\\d+)?$/.test(value) ? null : 'must be a floating point number';\n  },\n\n  token(value, { tokens }) {\n    return tokens.includes(value) ? null : `must be one of: ${tokens.join(', ')}`;\n  },\n\n  tokenlist(value, { tokens, alone }) {\n    const values = value.split(/\\s+/).filter(Boolean);\n    const unknown = values.filter(token => !tokens.includes(token));\n    if (values.length === 0) {\n      return `must be one or more of: ${tokens.join(', ')}`;\n    }\n    if (unknown.length) {\n      return `contains unknown values: ${unknown.join(', ')}`;\n    }\n    if (alone && values.length > 1) {\n      const alones = values.filter(token => alone.includes(token));\n      if (alones.length) {\n        return `should only contain the following values on their own: ${alones.join(', ')}`;\n      }\n    }\n    return null;\n  },\n\n  id(value) {\n    if (!value.trim()) {\n      return 'must be an element id';\n    }\n\n    if (rSpace.test(value)) {\n      return 'must not contain spaces';\n    }\n\n    return document.getElementById(value) ? null : `no element can be found with an id of ${value}`;\n  },\n\n  idlist(value) {\n    if (!value.trim()) {\n      return 'must be a list of one of more ids';\n    }\n    const missing = value.split(rSpace).filter(id => !document.getElementById(id));\n    if (!missing.length) {\n      return null;\n    }\n    return missing.map(id => `no element can be found with an id of ${id}`);\n  },\n};\n\nmodule.exports = class extends Rule {\n  selector(utils) {\n    return this._selector || (this._selector = Object.keys(utils.config.ariaAttributes).map(name => `[aria-${name}]`).join(','));\n  }\n\n  test(el, utils) {\n    return ExtendedArray.from(el.attributes)\n      .map(({ name, value }) => {\n        if (!name.startsWith('aria-')) {\n          return null;\n        }\n        name = name.slice(5);\n        const description = utils.config.ariaAttributes[name];\n        if (!description) {\n          return null;\n        }\n        return new ExtendedArray()\n          .concat(checkers[description.values.type](value, description.values))\n          .compact()\n          .map(message => `aria-${name} ${message}`);\n      })\n      .compact()\n      .flatten();\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  deprecated(utils) {\n    return this._deprecated || (this._deprecated = Object.entries(utils.config.ariaAttributes)\n      .filter(([, value]) => value.deprecated)\n      .map(([name]) => `aria-${name}`));\n  }\n\n  selector(utils) {\n    return this.deprecated(utils).map(name => `[${name}]`).join(',');\n  }\n\n  test(el, utils) {\n    return Array.from(el.attributes)\n      .filter(({ name }) => this.deprecated(utils).includes(name))\n      .map(({ name }) => `${name} is deprecated`);\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  constructor(settings) {\n    super(settings);\n    this.history = new WeakMap();\n  }\n\n  selector() {\n    return '[role]';\n  }\n\n  test(el) {\n    const role = el.getAttribute('role');\n    if (this.history.has(el)) {\n      if (this.history.get(el) !== role) {\n        return 'an elements role must not be modified';\n      }\n    } else {\n      this.history.set(el, role);\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'header,[role~=banner]';\n  }\n\n  get role() {\n    return 'banner';\n  }\n\n  get message() {\n    return `there should only be one element with a role of ${this.role} in each document or application`;\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, this.role)) {\n      return null;\n    }\n\n    const found = utils.$$(this.selector())\n      .filter(elm => utils.aria.hasRole(elm, this.role))\n      .groupBy(elm => utils.aria.closestRole(elm, ['application', 'document']))\n      .filter(group => group.includes(el))\n      .flatten();\n\n    if (found.length > 1) {\n      return this.message;\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst BannerRule = require('../one-banner/rule');\n\nmodule.exports = class extends BannerRule {\n  selector() {\n    return 'footer,[role~=contentinfo]';\n  }\n\n  get role() {\n    return 'contentinfo';\n  }\n};\n",
    "\"use strict\";\nconst BannerRule = require('../one-banner/rule');\n\nmodule.exports = class extends BannerRule {\n  selector() {\n    return 'main,[role~=main]';\n  }\n\n  get role() {\n    return 'main';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return ':not(main)[role~=main]';\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, 'main')) {\n      return null;\n    }\n\n    return 'use a main element for role=main';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../../rule.js');\n\nfunction hasLandmark(nodeName, role, utils) {\n  return utils.$$(`${nodeName},[role~=${role}]`, document.body)\n    .filter(el => !utils.hidden(el))\n    .filter(el => utils.aria.hasRole(el, role))\n    .filter(el => utils.aria.closestRole(el, ['document', 'application']) === document.body)\n    .filter(el => el.innerText)\n    .length > 0;\n}\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'body';\n  }\n\n  test(el, utils) {\n    const errors = [];\n\n    if (!hasLandmark('main', 'main', utils)) {\n      errors.push('document should have a <main>');\n    }\n\n    if (!hasLandmark('header', 'banner', utils)) {\n      errors.push('document should have a <header>');\n    }\n\n    if (!hasLandmark('footer', 'contentinfo', utils)) {\n      errors.push('document should have a <footer>');\n    }\n\n    return errors;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nconst focusable = ['button:not(:disabled)', 'input:not([type=\"hidden\"]):not(:disabled)', 'select:not(:disabled)', 'textarea:not(:disabled)', 'a[href]', 'area[href]', '[tabindex]'];\n\nmodule.exports = class extends Rule {\n  selector() {\n    return this._selector || (this._selector = focusable.map(selector => `${selector}[aria-hidden=\"true\"]`).join(','));\n  }\n\n  test(el, utils) {\n    if (el.nodeName.toLowerCase() === 'area' || !utils.hidden(el)) {\n      return 'do not mark focusable elements with `aria-hidden=\"true\"`';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nconst focusable = 'button,input:not([type=\"hidden\"]),meter,output,progress,select,textarea,a[href],area[href],[tabindex]';\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[role~=none],[role~=presentation]';\n  }\n\n  test(el, utils) {\n    if (el.matches(focusable) && utils.aria.hasRole(el, ['none', 'presentation'])) {\n      return 'do not mark focusable elements with a role of presentation or none';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[role=\"none\"]';\n  }\n\n  test() {\n    return 'use a role of \"none presentation\" to support older user-agents';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[role]';\n  }\n\n  test(el) {\n    const roles = el.getAttribute('role').split(rSpace).filter(Boolean);\n    if (roles.join(' ') === 'none presentation') {\n      return null;\n    }\n\n    if (roles.length > 1) {\n      return 'do not add multiple roles';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nfunction isSupported(el, utils) {\n  return !(utils.config.elements[el.nodeName.toLowerCase()] || {}).unsupported;\n}\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[role]';\n  }\n\n  test(el, utils) {\n    const role = el.getAttribute('role').trim();\n    if (!role) {\n      return 'role attribute should not be empty';\n    }\n\n    let error;\n    const allowed = utils.aria.allowed(el);\n    const supported = isSupported(el, utils);\n\n    role.split(rSpace).some((name) => {\n      if (!utils.config.roles[name]) {\n        error = `role \"${name}\" is not a known role`;\n        return true;\n      }\n\n      if (utils.config.roles[name].abstract) {\n        error = `role \"${name}\" is an abstract role and should not be used`;\n        return true;\n      }\n\n      if (supported && allowed.implicit.includes(name)) {\n        error = `role \"${name}\" is implicit for this element and should not be specified`;\n        return true;\n      }\n\n      if (allowed.roles === '*') {\n        return null;\n      }\n\n      if (!allowed.roles.includes(name) && (supported || !allowed.implicit.includes(name))) {\n        error = `role \"${name}\" is not allowed for this element`;\n      }\n\n      return null;\n    });\n\n    return error;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector(utils) {\n    return this._selector || (this._selector = Array.from(Object.entries(utils.config.elements))\n      .filter(([, { unsupported }]) => unsupported)\n      .map(([name]) => `${name}:not([role])`)\n      .join(','));\n  }\n\n  test(el, utils) {\n    const allowed = utils.aria.allowed(el);\n    if (!allowed.implicit.length) {\n      return null;\n    }\n\n    return 'element should have a role for backwards compatibility';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[data],[data-]';\n  }\n\n  test() {\n    return 'data is an attribute prefix';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule.js');\n\nmodule.exports = class extends Rule {\n  selector(utils) {\n    return this._selector\n      || (this._selector = utils.config.attributes.eventHandlerAttributes.map(name => `[${name}]`).join(','));\n  }\n\n  test(el, utils) {\n    const handlers = Array.from(el.attributes)\n      .filter(({ name }) => utils.config.attributes.eventHandlerAttributes.includes(name))\n      .map(({ name }) => name);\n\n    return `do not use event handler attributes. Found: ${handlers.join(', ')}`;\n  }\n};\n\n",
    "\"use strict\";\nconst Rule = require('../../rule.js');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[tabindex]';\n  }\n\n  test(el, utils) {\n    if (el.tabIndex <= 0 || utils.hidden(el)) {\n      return null;\n    }\n\n    return 'no tabindex greater than 0';\n  }\n};\n\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst ExtendedArray = require('../../../support/extended-array');\n\n/**\n *  Check the colour contrast for all visible nodes with child text nodes\n */\nmodule.exports = class extends Rule {\n  setDefaults() {\n    this.enabled = false;\n    this.min = 4.5;\n    this.minLarge = 3;\n  }\n\n  run(context, filter = () => true, utils) {\n    return this.iterate(context, utils, false)\n      .filter(filter)\n      .map(el => this.findAncestor(el, utils))\n      .unique()\n      .filter(filter)\n      .map(el => [el, this.test(el, utils)])\n      .filter(([, ratio]) => ratio)\n      .map(([el, ratio]) => this.message(el, ratio));\n  }\n\n  iterate(node, utils, iterateSiblings) {\n    let found = new ExtendedArray();\n    let cursor = node;\n    while (cursor) {\n      if (!utils.hidden(cursor, { noAria: true })) {\n        if (this.hasTextNode(cursor)) {\n          found.push(cursor);\n        }\n\n        if (cursor.firstElementChild) {\n          found = found.concat(this.iterate(cursor.firstElementChild, utils, true));\n        }\n      }\n\n      if (iterateSiblings) {\n        cursor = cursor.nextElementSibling;\n      } else {\n        cursor = null;\n      }\n    }\n\n    return found;\n  }\n\n  // Does the element have a text node with content\n  hasTextNode(el) {\n    return Array.from(el.childNodes)\n      .filter(node => node.nodeType === Node.TEXT_NODE)\n      .some(node => node.data.trim());\n  }\n\n  // Find the last ancestor or self with the same colours\n  findAncestor(el, utils) {\n    const colour = utils.contrast.textColour(el);\n    const backgroundColour = utils.contrast.backgroundColour(el);\n\n    let cursor = el;\n    while (cursor.parentNode !== document) {\n      const parent = cursor.parentNode;\n      if (utils.contrast.textColour(parent) !== colour\n        && utils.contrast.backgroundColour(parent) !== backgroundColour) {\n        break;\n      }\n      cursor = parent;\n    }\n\n    return cursor;\n  }\n\n  // Does the element meet AAA or AA standards\n  test(el, utils) {\n    const ratio = parseFloat(utils.contrast.textContrast(el).toFixed(2));\n\n    if (ratio >= this.min) {\n      return null;\n    }\n\n    const fontSize = parseFloat(utils.style(el, 'fontSize'));\n    let fontWeight = utils.style(el, 'fontWeight');\n    if (fontWeight === 'bold') {\n      fontWeight = 700;\n    } else if (fontWeight === 'normal') {\n      fontWeight = 400;\n    }\n    const large = fontSize >= 24 /* 18pt */ || (fontSize >= 18.66 /* 14pt */ && fontWeight >= 700);\n\n    if (large && ratio >= this.minLarge) {\n      return null;\n    }\n\n    return ratio;\n  }\n\n  message(el, ratio) {\n    return { el, message: `contrast is too low ${parseFloat(ratio.toFixed(2))}:1` };\n  }\n};\n",
    "\"use strict\";\nconst ColourContrastAARule = require('../aa/rule.js');\n\nmodule.exports = class extends ColourContrastAARule {\n  setDefaults() {\n    this.min = 7;\n    this.minLarge = 4.5;\n    this.enabled = false;\n  }\n};\n",
    "\"use strict\";\nconst FieldsetRule = require('../fieldset-and-legend/rule');\n\nmodule.exports = class extends FieldsetRule {\n  get parent() {\n    return 'details';\n  }\n\n  get child() {\n    return 'summary';\n  }\n\n  isHidden(el, utils) {\n    // summary will be hidden if details is not open\n    return el.nodeName.toLowerCase() !== 'summary' && utils.hidden(el);\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector({ config }) {\n    return this._selector || (this._selector = Object.keys(config.elements).filter(el => config.elements[el].obsolete).join(','));\n  }\n\n  test() {\n    return 'do not use obsolete elements';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector({ config }) {\n    return this._selector || (this._selector = Object.keys(config.elements).map(name => `:not(${name})`).join(''));\n  }\n\n  test(el) {\n    if (el.closest('svg,math')) {\n      return null;\n    }\n    return 'unknown element';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nfunction getFirstChild(el) {\n  let cursor = el.firstChild;\n  while (cursor instanceof Text && !cursor.data.trim()) {\n    cursor = cursor.nextSibling;\n  }\n  return cursor;\n}\n\nmodule.exports = class extends Rule {\n  get parent() {\n    return 'fieldset';\n  }\n\n  get child() {\n    return 'legend';\n  }\n\n  isHidden(el, utils) {\n    return utils.hidden(el);\n  }\n\n  selector() {\n    return `${this.parent},${this.child}`;\n  }\n\n  test(el, utils) {\n    if (this.isHidden(el, utils)) {\n      return null;\n    }\n\n    if (el.nodeName.toLowerCase() === this.parent) {\n      const firstChild = getFirstChild(el);\n      if (firstChild\n        && firstChild instanceof HTMLElement\n        && firstChild.nodeName.toLowerCase() === this.child\n        && !utils.hidden(firstChild)) {\n        return null;\n      }\n      return `a <${this.parent}> must have a visible <${this.child}> as their first child`;\n    }\n\n    // Legend\n    if (el.parentNode.nodeName.toLowerCase() === this.parent) {\n      const firstChild = getFirstChild(el.parentNode);\n      if (firstChild === el) {\n        return null;\n      }\n    }\n    return `a <${this.child}> must be the first child of a <${this.parent}>`;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nconst selector = 'h2,h3,h4,h5,h6,[role~=heading]';\n\nfunction previous(el) {\n  let cursor = el.previousElementSibling;\n  while (cursor && cursor.lastElementChild) {\n    cursor = cursor.lastElementChild;\n  }\n  return cursor;\n}\n\nfunction getLevel(el) {\n  return /h[1-6]/i.test(el.nodeName) ? +el.nodeName[1] : (+el.getAttribute('aria-level') || 2);\n}\n\nmodule.exports = class extends Rule {\n  selector() {\n    return `${selector}:not([aria-level=\"1\"])`;\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, 'heading') || utils.hidden(el)) {\n      return null;\n    }\n    let cursor = el;\n    const level = getLevel(el);\n    do {\n      cursor = previous(cursor) || cursor.parentElement;\n      if (cursor && cursor.matches(`h1,${selector}`) && !utils.hidden(cursor) && utils.aria.hasRole(cursor, 'heading')) {\n        const previousLevel = getLevel(cursor);\n        if (level <= previousLevel + 1) {\n          return null;\n        }\n        break;\n      }\n    } while (cursor && cursor !== document.body);\n    return 'headings must be nested correctly';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nconst selector = ['button', 'fieldset', 'input', 'object', 'output', 'select', 'textarea'].map(name => `${name}[form]`).join(',');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return selector;\n  }\n\n  test(el) {\n    const formId = el.getAttribute('form');\n    if (!formId) {\n      return 'form attribute should be an id';\n    }\n\n    if (rSpace.test(formId)) {\n      return 'form attribute should not contain spaces';\n    }\n\n    const form = document.getElementById(formId);\n    if (!form) {\n      return `cannot find element for form attribute with id \"${formId}\"`;\n    }\n\n    if (form.nodeName.toLowerCase() !== 'form') {\n      return 'form attribute does not point to a form';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'map';\n  }\n\n  test(el, utils) {\n    if (!el.name) {\n      return 'name attribute is required';\n    }\n\n    if (rSpace.test(el.name)) {\n      return 'name attribute must not contain spaces';\n    }\n\n    const name = el.name.toLowerCase();\n    const mapNames = utils.$$('map[name]').map(map => map.name.toLowerCase());\n    if (mapNames.filter(item => item === name).length > 1) {\n      return 'name attribute must be case-insensitively unique';\n    }\n\n    const imgUseMaps = utils.$$('img[usemap]').map(img => img.useMap.toLowerCase());\n    if (!imgUseMaps.includes(`#${name}`)) {\n      return 'name attribute should be referenced by an img usemap attribute';\n    }\n\n    if (el.id && el.id !== el.name) {\n      return 'if the id attribute is present it must equal the name attribute';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'label[for]';\n  }\n\n  test(el) {\n    if (!el.htmlFor) {\n      return 'for attribute should not be empty';\n    }\n\n    if (rSpace.test(el.htmlFor)) {\n      return 'for attribute should not contain spaces';\n    }\n\n    if (document.getElementById(el.htmlFor)) {\n      return null;\n    }\n\n    return 'no element can be found with id of id attribute';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'input[list]';\n  }\n\n  test(el, utils) {\n    const listId = el.getAttribute('list');\n\n    if (!listId) {\n      return 'list attribute should not be empty';\n    }\n\n    if (rSpace.test(listId)) {\n      return 'list attribute should not contain spaces';\n    }\n\n    if (listId && utils.$(`datalist[id=\"${utils.cssEscape(listId)}\"]`)) {\n      return null;\n    }\n    return 'no datalist found';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a[name]';\n  }\n\n  test(el, utils) {\n    if (!el.name) {\n      return 'name should not be empty';\n    }\n    if (el.id && el.id !== el.name) {\n      return 'if the id attribute is present it must equal the name attribute';\n    }\n    const id = utils.cssEscape(el.name);\n    if (id && utils.$$(`a[name=\"${id}\"],[id=\"${id}\"]`).length > 1) {\n      return 'name is not unique';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst { rSpace } = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[id]';\n  }\n\n  test(el, utils) {\n    if (!el.id) {\n      return 'id should not be empty';\n    }\n    if (rSpace.test(el.id)) {\n      return 'id should not contain space characters';\n    }\n    if (!el.id || utils.$$(`[id=\"${utils.cssEscape(el.id)}\"]`).length > 1) {\n      return 'id is not unique';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'area[href]';\n  }\n\n  test(el, utils) {\n    const map = el.closest('map');\n    if (!map || !map.name) {\n      return null;\n    }\n    const img = utils.$(`img[usemap=\"#${utils.cssEscape(map.name)}\"]`);\n    if (!img || utils.hidden(img)) {\n      return null;\n    }\n    if (el.alt) {\n      return null;\n    }\n    return 'area with a href must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector(utils) {\n    return this._selector || (this._selector = utils.aria.rolesOfType('command').map(role => `[role~=\"${role}\"]`).join(','));\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, utils.aria.rolesOfType('command'))) {\n      return null;\n    }\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'elements with a role with a superclass of command must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'button,input:not([type=\"hidden\"]),meter,output,progress,select,textarea';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'form controls must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'fieldset,details,[role~=group],[role~=radiogroup]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)\n      || (el.nodeName.toLowerCase() !== 'fieldset' && !utils.aria.hasRole(el, ['group', 'radiogroup']))\n      || utils.accessibleName(el)) {\n      return null;\n    }\n    const name = el.matches('fieldset,details') ? el.nodeName.toLowerCase() : utils.aria.getRole(el);\n    return `${name} must have a label`;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'h1,h2,h3,h4,h5,h6,[role~=\"heading\"]';\n  }\n\n  test(el, utils) {\n    if (!utils.aria.hasRole(el, 'heading')) {\n      return null;\n    }\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'headings must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  setDefaults() {\n    this.includeHidden = true;\n  }\n\n  selector() {\n    return 'img:not([alt])';\n  }\n\n  test() {\n    return 'missing alt attribute';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a[href]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'links with a href must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return '[tabindex]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el, { ariaHidden: true }) || utils.accessibleName(el)) {\n      return null;\n    }\n    return 'focusable elements must have a label';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\n// Language tags are defined in http://www.ietf.org/rfc/bcp/bcp47.txt\nconst match = /^((en-gb-oed)|([a-z]{2,3}(-[a-z]{3})?(-[a-z]{4})?(-[a-z]{2}|-\\d{3})?(-[a-z0-9]{5,8}|-(\\d[a-z0-9]{3}))*))$/i;\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'html';\n  }\n\n  test(el) {\n    if (!el.lang) {\n      return 'missing lang attribute';\n    }\n    if (!match.test(el.lang)) {\n      return 'language code is invalid';\n    }\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nconst excludeTypes = ['hidden', 'image', 'submit', 'reset', 'button'];\nconst excludeSelector = excludeTypes.map(type => `:not([type=${type}])`).join('');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return this._selector || (this._selector = `input[name]${excludeSelector},textarea[name],select[name],object[name]`);\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n    let group;\n\n    if (el.form) {\n      const elements = el.form.elements[el.name];\n      if (elements instanceof Node) {\n        return null;\n      }\n      group = Array.from(elements)\n        .filter(elm => !excludeTypes.includes(elm.type))\n        .filter(elm => !utils.hidden(elm));\n    } else {\n      const namePart = `[name=\"${utils.cssEscape(el.name)}\"]`;\n      group = utils.$$(`input${namePart}${excludeSelector},textarea${namePart},select${namePart},object${namePart}`)\n        .filter(elm => !elm.form)\n        .filter(elm => !utils.hidden(elm));\n    }\n\n    if (group.length === 1 || el.closest('fieldset') || utils.aria.closestRole(el, ['group', 'radiogroup'])) {\n      return null;\n    }\n\n    return 'multiple inputs with the same name should be in a fieldset, group or radiogroup';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'button:not([type])';\n  }\n\n  test() {\n    return 'all buttons should have a type attribute';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nfunction isBr(el) {\n  return el instanceof Element && el.nodeName.toLowerCase() === 'br';\n}\n\nfunction previousElementIsBr(el, utils) {\n  while ((el = el.previousSibling)) {\n    if ((el instanceof Element && !utils.hidden(el)) || (el instanceof Text && el.data.trim())) {\n      break;\n    }\n  }\n  return isBr(el);\n}\n\nfunction nextElementIsBr(el, utils) {\n  while ((el = el.nextSibling)) {\n    if ((el instanceof Element && !utils.hidden(el)) || (el instanceof Text && el.data.trim())) {\n      break;\n    }\n  }\n  return isBr(el);\n}\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'br + br';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el) || !previousElementIsBr(el, utils) || nextElementIsBr(el, utils)) {\n      return null;\n    }\n\n    return 'do not use <br>s for spacing';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'select:not(:disabled)';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el) || utils.$$('option', el).length) {\n      return null;\n    }\n    return 'selects should have options';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a[role~=button],a[href=\"#\"],a[href=\"#!\"],a[href^=\"javascript:\"]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n    return 'use a button instead of a link';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nfunction removeHash(ob) {\n  return ob.href.replace(/#.*$/, '');\n}\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a[href*=\"#\"]';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n    if (removeHash(window.location) !== removeHash(el)) {\n      return null;\n    }\n    const id = utils.cssEscape(decodeURI(el.hash.slice(1)));\n    const found = utils.$(`[id=\"${id}\"],a[name=\"${id}\"]`);\n\n    if (!found) {\n      return 'fragment not found in document';\n    }\n\n    if (utils.hidden(found)) {\n      return 'link target is hidden';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'select[multiple]:not(:disabled)';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n    return 'do not use multiple selects';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'input,textarea,select,button:not([type]),button[type=\"submit\"],button[type=\"reset\"]';\n  }\n\n  test(el, utils) {\n    if (el.form || utils.hidden(el) || el.disabled) {\n      return null;\n    }\n    return 'all controls should be associated with a form';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule.js');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a:not([href]),area:not([href])';\n  }\n\n  test(el, utils) {\n    if (el.nodeName.toLowerCase() === 'a' && utils.hidden(el)) {\n      return null;\n    }\n\n    return 'links should have a href attribute';\n  }\n};\n\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'input[type=reset],button[type=reset]';\n  }\n\n  test() {\n    return 'do not use reset buttons';\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nconst labelable = 'input:not([type=hidden]),select,textarea,button,meter,output,progress';\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'label';\n  }\n\n  test(el, utils) {\n    if (utils.hidden(el)) {\n      return null;\n    }\n\n    if (el.htmlFor) {\n      const forEl = document.getElementById(el.htmlFor);\n      if (!forEl) {\n        return 'label is not labelling an element';\n      }\n      if (utils.hidden(forEl)) {\n        return 'label is labelling a hidden element';\n      }\n      return null;\n    }\n\n    const targets = utils.$$(labelable, el);\n\n    if (targets.length && !targets.filter(elm => !utils.hidden(elm)).length) {\n      return 'label is labelling a hidden element';\n    }\n\n    if (!targets.length) {\n      return 'label is not labelling an element';\n    }\n\n    return null;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\n\nmodule.exports = class extends Rule {\n  run(context, filter = () => true, utils) {\n    const errors = [];\n\n    if (!context.contains(document.documentElement)) {\n      return [];\n    }\n\n    if (document.characterSet !== 'UTF-8') {\n      errors.push({ el: document.documentElement, message: 'all HTML documents should be authored in UTF-8' });\n    }\n\n    const meta = utils.$$('meta[charset],meta[http-equiv=\"content-type\" i]');\n\n    if (meta.length > 1) {\n      meta.forEach(el => errors.push({ el, message: 'more than one meta charset tag found' }));\n    }\n\n    if (!meta.length) {\n      errors.push({ el: document.head, message: 'missing `<meta charset=\"UTF-8\">`' });\n    }\n\n    meta\n      .filter(el => el.httpEquiv)\n      .forEach(el => errors.push({ el, message: 'use the form `<meta charset=\"UTF-8\">`' }));\n\n    meta\n      .filter(el => document.head.firstElementChild !== el)\n      .forEach(el => errors.push({ el, message: 'meta charset should be the first child of <head>' }));\n\n    return errors.filter(({ el }) => filter(el));\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../../rule');\nconst constants = require('../../../support/constants');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'a[href][target],area[href][target],form[target],base[target],form button[type=submit][formtarget],form input[type=submit][formtarget],form input[type=image][formtarget]';\n  }\n\n  test(el, utils) {\n    if (el.target === '_self' || el.formTarget === '_self') {\n      return null;\n    }\n    const nodeName = el.nodeName.toLowerCase();\n    if (nodeName !== 'base' && nodeName !== 'area' && utils.hidden(el)) {\n      return null;\n    }\n\n    const rel = el.rel && el.rel.split(constants.rSpace);\n    if (rel && rel.includes('noopener') && rel.includes('noreferrer')) {\n      return null;\n    }\n\n    let url = el.href;\n    if (nodeName === 'form') {\n      url = el.action;\n    } else if (nodeName === 'button' || nodeName === 'input') {\n      // Chrome returns the page url for el.formaction\n      url = el.getAttribute('formaction') || el.form.action;\n    }\n\n    try {\n      url = new URL(url, location.href);\n    } catch (_) {\n      url = null;\n    }\n\n    if (url && url.host === location.host) {\n      return null;\n    }\n\n    let message = 'target attribute has opener vulnerability';\n    if (nodeName === 'a' || nodeName === 'area') {\n      message += '. Add `rel=\"noopener noreferrer\"`';\n    }\n    return message;\n  }\n};\n",
    "\"use strict\";\nconst Rule = require('../rule');\n\nmodule.exports = class extends Rule {\n  selector() {\n    return 'html';\n  }\n\n  test() {\n    if (document.title.trim()) {\n      return null;\n    }\n    return 'document must have a title';\n  }\n};\n",
    "\"use strict\";\nmodule.exports = [\"aria/allowed-attributes\",\"aria/attribute-values\",\"aria/deprecated-attributes\",\"aria/immutable-role\",\"aria/landmark/one-banner\",\"aria/landmark/one-contentinfo\",\"aria/landmark/one-main\",\"aria/landmark/prefer-main\",\"aria/landmark/required\",\"aria/no-focusable-hidden\",\"aria/no-focusable-role-none\",\"aria/no-none-without-presentation\",\"aria/one-role\",\"aria/roles\",\"aria/unsupported-elements\",\"attributes/data\",\"attributes/no-javascript-handlers\",\"attributes/no-positive-tab-index\",\"colour-contrast/aa\",\"colour-contrast/aaa\",\"details-and-summary\",\"elements/obsolete\",\"elements/unknown\",\"fieldset-and-legend\",\"headings\",\"ids/form-attribute\",\"ids/imagemap-ids\",\"ids/labels-have-inputs\",\"ids/list-id\",\"ids/no-duplicate-anchor-names\",\"ids/unique-id\",\"labels/area\",\"labels/aria-command\",\"labels/controls\",\"labels/group\",\"labels/headings\",\"labels/img\",\"labels/links\",\"labels/tabindex\",\"lang\",\"multiple-in-group\",\"no-button-without-type\",\"no-consecutive-brs\",\"no-empty-select\",\"no-links-as-buttons\",\"no-links-to-missing-fragments\",\"no-multiple-select\",\"no-outside-controls\",\"no-placeholder-links\",\"no-reset\",\"no-unassociated-labels\",\"security/charset\",\"security/target\",\"title\"];",
    "\"use strict\";\nmodule.exports = \"1.14.0\"",
    "\"use strict\";\n/**\n * Aria rules for a HTML element\n *\n * https://w3c.github.io/html-aria/\n */\nconst { $$ } = require('../utils/selectors.js');\n\n/**\n * Describes what roles and aria attributes all allowed on an element\n *\n * @typedef {Object} allowedAria\n * @property {String} selector\n * @property {String[]} implicitRoles\n * @property {String[]} roles\n * @property {Boolean} anyRole\n */\n\n/**\n * Generate a rule\n * @returns {allowedAria}\n */\nfunction rule({ selector = '*', implicit = [], roles = [], anyRole = false, ariaForImplicit = false, noAria = false }) {\n  return {\n    selector,\n    implicit: [].concat(implicit),\n    roles: anyRole ? '*' : roles,\n    noAria,\n    ariaForImplicit,\n  };\n}\n\n// Common rules\n// TODO: include aria attribute rules\nconst noRoleOrAria = rule({ noAria: true });\nconst noRole = rule({});\nconst anyRole = rule({ anyRole: true });\n\n/** @enum {(allowedAria|allowedAria[])} */\nmodule.exports = {\n  _default: anyRole,\n  a: [\n    rule({\n      selector: '[href]',\n      implicit: 'link',\n      roles: [\n        'button', 'checkbox', 'menuitem', 'menuitemcheckbox',\n        'menuitemradio', 'option', 'radio', 'tab', 'switch', 'treeitem',\n      ],\n      ariaForImplicit: true,\n    }),\n    rule({\n      selector: ':not([href])',\n      anyRole: true,\n    }),\n  ],\n  address: anyRole,\n  area: [\n    rule({\n      selector: '[href]',\n      implicit: 'link',\n      ariaForImplicit: true,\n    }),\n  ],\n  article: rule({\n    implicit: 'article',\n    roles: ['feed', 'presentation', 'document', 'application', 'main', 'region'],\n  }),\n  aside: rule({\n    implicit: 'complementary',\n    roles: ['feed', 'note', 'region', 'search'],\n  }),\n  audio: rule({\n    roles: ['application'],\n  }),\n  base: noRoleOrAria,\n  body: rule({\n    implicit: ['document'],\n    ariaForImplicit: true,\n  }),\n  button: [\n    rule({\n      selector: '[type=menu]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio'],\n    }),\n    rule({\n      implicit: 'button',\n      roles: [\n        'checkbox', 'link', 'menuitem', 'menuitemcheckbox',\n        'menuitemradio', 'radio', 'switch', 'tab',\n      ],\n    }),\n  ],\n  canvas: anyRole,\n  caption: noRole,\n  col: noRoleOrAria,\n  colgroup: noRoleOrAria,\n  data: anyRole,\n  datalist: rule({\n    implicit: 'listbox',\n    ariaForImplicit: true,\n  }),\n  dd: rule({\n    implicit: 'definition',\n    ariaForImplicit: true,\n  }),\n  details: rule({\n    implicit: 'group',\n    ariaForImplicit: true,\n  }),\n  dialog: rule({\n    implicit: 'dialog',\n    roles: ['alertdialog'],\n    ariaForImplicit: true,\n  }),\n  div: anyRole,\n  dl: rule({\n    implicit: 'list',\n    roles: ['group', 'presentation'],\n  }),\n  dt: rule({\n    implicit: 'listitem',\n    ariaForImplicit: true,\n  }),\n  embed: rule({\n    roles: ['application', 'document', 'presentation', 'img'],\n  }),\n  fieldset: rule({\n    roles: ['group', 'presentation'],\n  }),\n  figcaption: rule({\n    roles: ['group', 'presentation'],\n  }),\n  figure: rule({\n    implicit: 'figure',\n    roles: ['group', 'presentation'],\n  }),\n  footer: [\n    rule({\n      selector(el, aria) {\n        const selector = ['article', 'aside', 'main', 'nav', 'section'].map(name => `:scope ${name} footer`).join(',');\n        return $$(selector, aria.closestRole(el, ['application', 'document'], { exact: true }))\n          .includes(el);\n      },\n      roles: ['group', 'presentation'],\n    }),\n    rule({\n      implicit: 'contentinfo',\n      roles: ['group', 'presentation'],\n    }),\n  ],\n  form: rule({\n    implicit: 'form',\n    roles: ['search', 'presentation'],\n  }),\n  p: anyRole,\n  pre: anyRole,\n  blockquote: anyRole,\n  h1: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h2: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h3: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h4: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h5: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  h6: rule({\n    implicit: 'heading',\n    roles: ['tab', 'presentation'],\n  }),\n  head: noRoleOrAria,\n  header: [\n    rule({\n      selector(el, aria) {\n        const selector = ['article', 'aside', 'main', 'nav', 'section'].map(name => `:scope ${name} header`).join(',');\n        return $$(selector, aria.closestRole(el, ['application', 'document'], { exact: true }))\n          .includes(el);\n      },\n      roles: ['group', 'presentation'],\n    }),\n    rule({\n      implicit: 'banner',\n      roles: ['group', 'presentation'],\n    }),\n  ],\n  hr: rule({\n    implicit: 'separator',\n    roles: ['presentation'],\n    ariaForImplicit: true,\n  }),\n  html: noRoleOrAria,\n  iframe: rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  img: [\n    rule({\n      selector: '[alt=\"\"]',\n      roles: ['presentation', 'none'],\n      aria: false,\n    }),\n    rule({\n      implicit: 'img',\n      anyRole: true,\n    }),\n  ],\n  input: [\n    rule({\n      selector: '[list]:not([type]),[list][type=text],[list][type=search],[list][type=tel],[list][type=url],[list][type=email]',\n      implicit: 'combobox',\n      ariaForImplicit: true,\n    }),\n    rule({\n      selector: '[type=button]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio', 'switch', 'tab'],\n    }),\n    rule({\n      selector: '[type=image]',\n      implicit: 'button',\n      roles: ['link', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'radio', 'switch'],\n    }),\n    rule({\n      selector: '[type=checkbox]',\n      implicit: 'checkbox',\n      roles: ['button', 'menuitemcheckbox', 'switch'],\n    }),\n    rule({\n      selector: ':not([type]),[type=tel],[type=text],[type=url]',\n      implicit: 'textbox',\n      ariaForImplicit: true,\n    }),\n    rule({\n      selector: '[type=email]',\n      implicit: 'textbox',\n      ariaForImplicit: true,\n    }),\n    rule({\n      selector: '[type=hidden]',\n      aria: false,\n    }),\n    rule({\n      selector: '[type=number]',\n      implicit: 'spinbutton',\n      ariaForImplicit: true,\n    }),\n    rule({\n      selector: '[type=radio]',\n      implicit: 'radio',\n      roles: ['menuitemradio'],\n    }),\n    rule({\n      selector: '[type=range]',\n      implicit: 'slider',\n      ariaForImplicit: true,\n    }),\n    rule({\n      selector: '[type=reset],[type=submit]',\n      implicit: 'button',\n      ariaForImplicit: true,\n    }),\n    rule({\n      selector: '[type=search]',\n      implicit: 'searchbox',\n      ariaForImplicit: true,\n    }),\n    noRole,\n  ],\n  ins: anyRole,\n  del: anyRole,\n  label: noRole,\n  legend: noRole,\n  li: [\n    rule({\n      selector: 'ol>li,ul>li',\n      implicit: 'listitem',\n      roles: [\n        'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option',\n        'presentation', 'separator', 'tab', 'treeitem',\n      ],\n    }),\n  ],\n  link: [\n    rule({\n      selector: '[href]',\n      implicit: 'link',\n      globalAria: false,\n    }),\n  ],\n  main: rule({\n    implicit: 'main',\n    ariaForImplicit: true,\n  }),\n  map: noRoleOrAria,\n  math: rule({\n    implicit: 'math',\n    ariaForImplicit: true,\n  }),\n  menu: [\n    rule({\n      selector: '[type=context]',\n      implicit: 'menu',\n      ariaForImplicit: true,\n    }),\n  ],\n  menuitem: [\n    rule({\n      selector: '[type=command]',\n      implicit: 'menuitem',\n      ariaForImplicit: true,\n    }),\n    rule({\n      selector: '[type=checkbox]',\n      implicit: 'menuitemcheckbox',\n      ariaForImplicit: true,\n    }),\n    rule({\n      selector: '[type=radio]',\n      implicit: 'menuitemradio',\n      ariaForImplicit: true,\n    }),\n  ],\n  meta: noRoleOrAria,\n  meter: rule({\n    implicit: 'progressbar',\n  }),\n  nav: rule({\n    implicit: 'navigation',\n    ariaForImplicit: true,\n  }),\n  noscript: noRoleOrAria,\n  object: rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  ol: rule({\n    implicit: 'list',\n    roles: [\n      'directory', 'group', 'listbox', 'menu', 'menubar', 'presentation',\n      'radiogroup', 'tablist', 'toolbar', 'tree',\n    ],\n  }),\n  optgroup: rule({\n    implicit: 'group',\n    ariaForImplicit: true,\n  }),\n  option: [\n    rule({\n      selector: 'select>option,select>optgroup>option,datalist>option',\n      implicit: 'option',\n      ariaForImplicit: true,\n    }),\n    noRoleOrAria,\n  ],\n  output: rule({\n    implicit: 'status',\n    anyRole: true,\n  }),\n  param: noRoleOrAria,\n  picture: noRoleOrAria,\n  progress: rule({\n    implicit: 'progressbar',\n    ariaForImplicit: true,\n  }),\n  script: noRoleOrAria,\n  section: rule({\n    implicit: 'region',\n    roles: [\n      'alert', 'alertdialog', 'application', 'banner', 'complementary',\n      'contentinfo', 'dialog', 'document', 'feed', 'log', 'main', 'marquee',\n      'navigation', 'search', 'status', 'tabpanel',\n    ],\n  }),\n  select: rule({\n    implicit: 'listbox',\n    roles: ['menu'],\n    ariaForImplicit: true,\n  }),\n  source: noRoleOrAria,\n  span: anyRole,\n  style: noRoleOrAria,\n  svg: rule({\n    roles: ['application', 'document', 'img'],\n  }),\n  summary: rule({\n    implicit: 'button',\n    ariaForImplicit: true,\n  }),\n  table: rule({\n    implicit: 'table',\n    anyRole: true,\n  }),\n  template: noRoleOrAria,\n  textarea: rule({\n    implicit: 'textbox',\n    ariaForImplicit: true,\n  }),\n  tbody: rule({\n    implicit: 'rowgroup',\n    anyRole: true,\n  }),\n  thead: rule({\n    implicit: 'rowgroup',\n    anyRole: true,\n  }),\n  tfoot: rule({\n    implicit: 'rowgroup',\n    anyRole: true,\n  }),\n  title: noRoleOrAria,\n  td: rule({\n    implicit: 'cell',\n    anyRole: true,\n  }),\n  em: anyRole,\n  strong: anyRole,\n  small: anyRole,\n  s: anyRole,\n  cite: anyRole,\n  q: anyRole,\n  dfn: anyRole,\n  abbr: anyRole,\n  time: anyRole,\n  code: anyRole,\n  var: anyRole,\n  samp: anyRole,\n  kbd: anyRole,\n  sub: anyRole,\n  sup: anyRole,\n  i: anyRole,\n  b: anyRole,\n  u: anyRole,\n  mark: anyRole,\n  ruby: anyRole,\n  rb: anyRole,\n  rtc: anyRole,\n  rt: anyRole,\n  rp: anyRole,\n  bdi: anyRole,\n  bdo: anyRole,\n  br: anyRole,\n  wbr: anyRole,\n  th: rule({\n    implicit: ['columnheader', 'rowheader'],\n    anyRole: true,\n  }),\n  tr: rule({\n    implicit: 'row',\n    anyRole: true,\n  }),\n  track: noRoleOrAria,\n  ul: rule({\n    implicit: 'list',\n    roles: [\n      'directory', 'group', 'listbox', 'menu', 'menubar',\n      'radiogroup', 'tablist', 'toolbar', 'tree', 'presentation',\n    ],\n  }),\n  video: rule({\n    roles: ['application'],\n  }),\n};\n",
    "\"use strict\";\n/**\n *  Aria properties\n */\n\n/**\n * Describes an aria value\n *\n * @typedef {Object} ariaValue\n * @property {String} type One of string, integer, number, id, idlist, token, tokenlist\n * @property {String[]} tokens\n * @property {String[]} alone\n */\n\n/**\n * Describes an aria property\n *\n * @typedef {Object} ariaProperty\n * @property {ariaValue} values\n * @property {Boolean} global\n */\n\nconst boolean = {\n  type: 'token',\n  tokens: ['true', 'false'],\n};\n\nconst tristate = {\n  type: 'token',\n  tokens: ['true', 'false', 'mixed', 'undefined'],\n};\n\nconst nilableBoolean = {\n  type: 'token',\n  tokens: ['true', 'false', 'undefined'],\n};\n\n\n/** @enum {ariaProperty} */\nmodule.exports = {\n  activedescendant: {\n    values: { type: 'id' },\n  },\n  atomic: {\n    values: boolean,\n    global: true,\n  },\n  autocomplete: {\n    values: {\n      type: 'token',\n      tokens: ['inline', 'list', 'both', 'none'],\n    },\n  },\n  busy: {\n    values: boolean,\n    global: true,\n  },\n  checked: {\n    values: tristate,\n  },\n  colcount: {\n    values: { type: 'integer' },\n  },\n  colindex: {\n    values: { type: 'integer' },\n  },\n  colspan: {\n    values: { type: 'integer' },\n  },\n  controls: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  current: {\n    values: {\n      type: 'token',\n      tokens: ['page', 'step', 'location', 'date', 'time', 'true', 'false'],\n    },\n    global: true,\n  },\n  describedby: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  details: {\n    values: { type: 'id' },\n    global: true,\n  },\n  disabled: {\n    values: boolean,\n    global: true,\n  },\n  dropeffect: {\n    values: {\n      type: 'tokenlist',\n      tokens: ['copy', 'execute', 'link', 'move', 'none', 'popup'],\n      alone: ['none'],\n    },\n    deprecated: true,\n    global: true,\n  },\n  errormessage: {\n    values: { type: 'id' },\n    global: true,\n  },\n  expanded: {\n    values: nilableBoolean,\n  },\n  flowto: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  grabbed: {\n    values: nilableBoolean,\n    deprecated: true,\n    global: true,\n  },\n  haspopup: {\n    values: {\n      type: 'token',\n      tokens: ['false', 'true', 'menu', 'listbox', 'tree', 'grid', 'dialog'],\n    },\n    global: true,\n  },\n  hidden: {\n    values: nilableBoolean,\n    global: true,\n  },\n  invalid: {\n    values: {\n      type: 'token',\n      tokens: ['grammar', 'false', 'spelling', 'true'],\n    },\n    global: true,\n  },\n  keyshortcuts: {\n    values: { type: 'string' },\n    global: true,\n  },\n  label: {\n    values: { type: 'string' },\n    global: true,\n  },\n  labelledby: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  level: {\n    values: { type: 'integer' },\n  },\n  live: {\n    values: {\n      type: 'token',\n      tokens: ['assertive', 'off', 'polite'],\n    },\n    global: true,\n  },\n  modal: {\n    values: boolean,\n  },\n  multiline: {\n    values: boolean,\n  },\n  multiselectable: {\n    values: boolean,\n  },\n  orientation: {\n    values: {\n      type: 'token',\n      tokens: ['horizontal', 'undefined', 'vertical'],\n    },\n  },\n  owns: {\n    values: { type: 'idlist' },\n    global: true,\n  },\n  placeholder: {\n    values: { type: 'string' },\n  },\n  posinset: {\n    values: { type: 'integer' },\n  },\n  pressed: {\n    values: tristate,\n  },\n  readonly: {\n    values: boolean,\n  },\n  relevant: {\n    values: {\n      type: 'tokenlist',\n      tokens: ['additions', 'all', 'removals', 'text'],\n      alone: ['all'],\n    },\n    global: true,\n  },\n  required: {\n    values: boolean,\n  },\n  roledescription: {\n    values: { type: 'string' },\n    global: true,\n  },\n  rowcount: {\n    values: { type: 'integer' },\n  },\n  rowindex: {\n    values: { type: 'integer' },\n  },\n  rowspan: {\n    values: { type: 'integer' },\n  },\n  selected: {\n    values: nilableBoolean,\n  },\n  setsize: {\n    values: { type: 'integer' },\n  },\n  sort: {\n    values: {\n      type: 'token',\n      tokens: ['ascending', 'descending', 'none', 'other'],\n    },\n  },\n  valuemax: {\n    values: { type: 'number' },\n  },\n  valuemin: {\n    values: { type: 'number' },\n  },\n  valuenow: {\n    values: { type: 'number' },\n  },\n  valuetext: {\n    values: { type: 'string' },\n  },\n};\n",
    "\"use strict\";\n/**\n * Data for HTML elements.  Based on\n * - https://www.w3.org/TR/html52/\n * - https://w3c.github.io/html-aria/\n */\n\n/**\n * Describes an aria property\n *\n * @typedef {Object} htmlElement\n * @property {Function} nativeLabel\n * @property {Function} nativeDescription\n * @property {Boolean} obsolete\n */\n\nconst labels = (el, utils) => {\n  let found = [];\n  // If more than one element has our ID we must be the first\n  if (el.id && document.getElementById(el.id) === el) {\n    found = utils.$$(`label[for=\"${utils.cssEscape(el.id)}\"]`);\n  }\n  found.push(el.closest('label:not([for])'));\n  return found.filter(Boolean).filter(elm => !utils.hidden(elm, { ariaHidden: true }));\n};\n\nconst obsolete = { obsolete: true };\n\n/** @enum {htmlElement} */\nmodule.exports = {\n  a: {},\n  abbr: {},\n  acronym: obsolete,\n  address: {},\n  applet: obsolete,\n  area: {\n    nativeLabel(el) {\n      return el.alt || '';\n    },\n  },\n  article: {},\n  aside: {},\n  audio: {},\n  b: {},\n  base: {},\n  basefont: obsolete,\n  bdi: {},\n  bdo: {},\n  bgsound: obsolete,\n  big: obsolete,\n  blink: obsolete,\n  blockquote: {},\n  body: {},\n  br: {},\n  button: {\n    nativeLabel: labels,\n  },\n  canvas: {},\n  caption: {},\n  center: obsolete,\n  cite: {},\n  code: {},\n  col: {},\n  colgroup: {},\n  command: obsolete,\n  data: {},\n  datalist: {},\n  dd: {},\n  del: {},\n  details: {\n    nativeLabel(el, utils) {\n      const found = el.querySelector('summary');\n      if (found && utils.hidden(found, { ariaHidden: true })) {\n        return null;\n      }\n      return found;\n    },\n    unsupported: true,\n  },\n  dfn: {},\n  dialog: {\n    unsupported: true,\n  },\n  dir: obsolete,\n  div: {},\n  dl: {},\n  dt: {},\n  em: {},\n  embed: {},\n  fieldset: {\n    nativeLabel(el, utils) {\n      const found = el.querySelector('legend');\n      if (found && utils.hidden(found, { ariaHidden: true })) {\n        return null;\n      }\n      return found;\n    },\n  },\n  figcaption: {},\n  figure: {},\n  font: obsolete,\n  footer: {},\n  form: {},\n  frame: obsolete,\n  frameset: obsolete,\n  h1: {},\n  h2: {},\n  h3: {},\n  h4: {},\n  h5: {},\n  h6: {},\n  head: {},\n  header: {},\n  hgroup: obsolete,\n  hr: {},\n  html: {},\n  i: {},\n  iframe: {},\n  image: obsolete,\n  img: {\n    nativeLabel(el) {\n      return el.alt || '';\n    },\n  },\n  input: {\n    nativeLabel(el, utils) {\n      if (el.type === 'hidden') {\n        return null;\n      }\n\n      if (el.type === 'image') {\n        return el.alt || el.value || '';\n      }\n\n      if (['submit', 'reset', 'button'].includes(el.type)) {\n        return el.value;\n      }\n\n      return labels(el, utils);\n    },\n  },\n  ins: {},\n  isindex: obsolete,\n  kbd: {},\n  keygen: obsolete,\n  label: {},\n  legend: {},\n  li: {},\n  link: {},\n  listing: obsolete,\n  main: {},\n  map: {},\n  mark: {},\n  marquee: obsolete,\n  math: {},\n  menu: {\n    unsupported: true,\n  },\n  menuitem: {\n    unsupported: true,\n  },\n  meta: {},\n  meter: {\n    nativeLabel: labels,\n  },\n  multicol: obsolete,\n  nav: {},\n  nextid: obsolete,\n  nobr: obsolete,\n  noembed: obsolete,\n  noframes: obsolete,\n  noscript: {},\n  object: {},\n  ol: {},\n  optgroup: {},\n  option: {},\n  output: {\n    nativeLabel: labels,\n  },\n  p: {},\n  param: {},\n  picture: {},\n  plaintext: obsolete,\n  pre: {},\n  progress: {\n    nativeLabel: labels,\n  },\n  q: {},\n  rb: {},\n  rp: {},\n  rt: {},\n  rtc: {},\n  ruby: {},\n  s: {},\n  samp: {},\n  script: {},\n  section: {},\n  select: {\n    nativeLabel: labels,\n  },\n  small: {},\n  source: {},\n  spacer: obsolete,\n  span: {},\n  strike: obsolete,\n  strong: {},\n  style: {},\n  sub: {},\n  summary: {\n    unsupported: true,\n  },\n  sup: {},\n  svg: {},\n  table: {},\n  tbody: {},\n  td: {},\n  template: {},\n  textarea: {\n    nativeLabel: labels,\n  },\n  tfoot: {},\n  th: {},\n  thead: {},\n  time: {},\n  title: {},\n  tr: {},\n  track: {},\n  tt: obsolete,\n  u: {},\n  ul: {},\n  var: {},\n  video: {},\n  wbr: {},\n  xmp: obsolete,\n};\n",
    "\"use strict\";\nexports.eventHandlerAttributes = [\n  'onabort',\n  'onauxclick',\n  'onblur',\n  'oncancel',\n  'oncanplay',\n  'oncanplaythrough',\n  'onchange',\n  'onclick',\n  'onclose',\n  'oncontextmenu',\n  'oncuechange',\n  'ondblclick',\n  'ondrag',\n  'ondragend',\n  'ondragenter',\n  'ondragexit',\n  'ondragleave',\n  'ondragover',\n  'ondragstart',\n  'ondrop',\n  'ondurationchange',\n  'onemptied',\n  'onended',\n  'onerror',\n  'onfocus',\n  'oninput',\n  'oninvalid',\n  'onkeydown',\n  'onkeypress',\n  'onkeyup',\n  'onload',\n  'onloadeddata',\n  'onloadedmetadata',\n  'onloadend',\n  'onloadstart',\n  'onmousedown',\n  'onmouseenter',\n  'onmouseleave',\n  'onmousemove',\n  'onmouseout',\n  'onmouseover',\n  'onmouseup',\n  'onwheel',\n  'onpause',\n  'onplay',\n  'onplaying',\n  'onprogress',\n  'onratechange',\n  'onreset',\n  'onresize',\n  'onscroll',\n  'onseeked',\n  'onseeking',\n  'onselect',\n  'onshow',\n  'onstalled',\n  'onsubmit',\n  'onsuspend',\n  'ontimeupdate',\n  'ontoggle',\n  'onvolumechange',\n  'onwaiting',\n];\n",
    "\"use strict\";\nconst allowedAria = require('./allowed-aria');\nconst ariaAttributes = require('./aria-attributes');\nconst elements = require('./elements');\nconst attributes = require('./event-handler-attributes');\nconst roles = require('./roles');\n\nfunction extendElements(original, config) {\n  const settings = Object.assign({}, original);\n  if (config) {\n    Object.entries(config).forEach(([key, value]) => {\n      if (!value) {\n        delete settings[key];\n        return;\n      }\n      settings[key] = Object.assign({}, settings[key] || {}, value);\n    });\n  }\n  return settings;\n}\n\nmodule.exports = class Config {\n  constructor(settings = {}) {\n    this.allowedAria = allowedAria;\n    this.ariaAttributes = ariaAttributes;\n    this.elements = extendElements(elements, settings.elements);\n    this.attributes = attributes;\n    this.roles = roles;\n  }\n};\n",
    "\"use strict\";\n/**\n * Rules for aria properties\n *\n * https://w3c.github.io/html-aria/\n */\n\n/**\n * Describes an aria role\n *\n * @typedef {Object} ariaRole\n * @property {String[]} allowed\n * @property {String[]} subclass\n * @property {String[]} required Required aria properties\n * @property {Boolean} nameFromContent\n * @property {Boolean} abstract\n */\n\n/** @enum {ariaRole} */\nmodule.exports = {\n  alert: {\n    allowed: ['expanded'],\n    subclass: ['alertdialog'],\n  },\n  alertdialog: {\n    allowed: ['expanded', 'modal'],\n  },\n  application: {\n    allowed: ['activedescendant'],\n  },\n  article: {\n    allowed: ['expanded'],\n  },\n  banner: {\n    allowed: ['expanded'],\n  },\n  button: {\n    allowed: ['expanded', 'pressed'],\n    nameFromContent: true,\n  },\n  cell: {\n    allowed: ['colindex', 'colspan', 'expanded', 'rowindex', 'rowspan'],\n    nameFromContent: true,\n    subclass: ['columnheader', 'gridcell', 'rowheader'],\n  },\n  checkbox: {\n    allowed: ['readonly'],\n    required: ['checked'],\n    nameFromContent: true,\n    subclass: ['menuitemcheckbox', 'switch'],\n  },\n  columnheader: {\n    allowed: ['colindex', 'colspan', 'expanded', 'readonly', 'required', 'rowindex', 'rowspan', 'selected', 'sort'],\n    nameFromContent: true,\n  },\n  combobox: {\n    required: ['controls', 'expanded'],\n    allowed: ['activedescendant', 'autocomplete', 'orientation', 'required'],\n  },\n  command: {\n    abstract: true,\n    subclass: ['button', 'link', 'menuitem'],\n  },\n  complementary: {\n    allowed: ['expanded'],\n  },\n  composite: {\n    abstract: true,\n    subclass: ['grid', 'select', 'spinbutton', 'tablist'],\n  },\n  contentinfo: {\n    allowed: ['expanded'],\n  },\n  definition: {\n    allowed: ['expanded'],\n  },\n  dialog: {\n    allowed: ['expanded', 'modal'],\n    subclass: ['alertdialog'],\n  },\n  directory: {\n    allowed: ['expanded'],\n  },\n  document: {\n    allowed: ['expanded'],\n    subclass: ['article'],\n  },\n  feed: {\n    allowed: ['expanded'],\n  },\n  figure: {\n    allowed: ['expanded'],\n  },\n  form: {\n    allowed: ['expanded'],\n  },\n  grid: {\n    allowed: ['activedescendant', 'colcount', 'expanded', 'level', 'multiselectable', 'readonly', 'rowcount'],\n    subclass: ['treegrid'],\n  },\n  gridcell: {\n    allowed: ['colindex', 'colspan', 'expanded', 'readonly', 'required', 'rowindex', 'rowspan', 'selected'],\n    nameFromContent: true,\n    subclass: ['columnheader', 'rowheader'],\n  },\n  group: {\n    allowed: ['activedescendant', 'expanded'],\n    subclass: ['row', 'select', 'toolbar'],\n  },\n  heading: {\n    allowed: ['expanded', 'level'],\n    nameFromContent: true,\n  },\n  img: {\n    allowed: ['expanded'],\n  },\n  input: {\n    abstract: true,\n    subclass: ['checkbox', 'option', 'radio', 'slider', 'spinbutton', 'textbox'],\n  },\n  landmark: {\n    abstract: true,\n    subclass: ['banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'region', 'search'],\n  },\n  link: {\n    allowed: ['expanded'],\n    nameFromContent: true,\n  },\n  list: {\n    allowed: ['expanded'],\n    subclass: ['directory', 'feed'],\n  },\n  listbox: {\n    allowed: ['activedescendant', 'expanded', 'multiselectable', 'orientation', 'required'],\n  },\n  listitem: {\n    allowed: ['expanded', 'level', 'posinset', 'setsize'],\n    subclass: ['treeitem'],\n  },\n  log: {\n    allowed: ['expanded'],\n  },\n  main: {\n    allowed: ['expanded'],\n  },\n  marquee: {\n    allowed: ['expanded'],\n  },\n  math: {\n    allowed: ['expanded'],\n  },\n  menu: {\n    allowed: ['activedescendant', 'expanded', 'orientation'],\n    subclass: ['menubar'],\n  },\n  menubar: {\n    allowed: ['activedescendant', 'expanded', 'orientation'],\n  },\n  menuitem: {\n    allowed: ['posinset', 'setsize'],\n    nameFromContent: true,\n    subclass: ['menuitemcheckbox'],\n  },\n  menuitemcheckbox: {\n    required: ['checked'],\n    nameFromContent: true,\n    subclass: ['menuitemradio'],\n  },\n  menuitemradio: {\n    required: ['checked'],\n    allowed: ['posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n  },\n  navigation: {\n    allowed: ['expanded'],\n  },\n  none: {},\n  note: {\n    allowed: ['expanded'],\n  },\n  option: {\n    allowed: ['checked', 'posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n    subclass: ['treeitem'],\n  },\n  presentation: {},\n  progressbar: {\n    allowed: ['valuemax', 'valuemin', 'valuenow', 'valuetext'],\n  },\n  radio: {\n    required: ['checked'],\n    allowed: ['posinset', 'setsize'],\n    nameFromContent: true,\n    subclass: ['menuitemradio'],\n  },\n  radiogroup: {\n    allowed: ['activedescendant', 'expanded', 'required', 'orientation'],\n  },\n  range: {\n    abstract: true,\n    subclass: ['progressbar', 'scrollbar', 'slider', 'spinbutton'],\n  },\n  region: {\n    allowed: ['expanded'],\n  },\n  roletype: {\n    abstract: true,\n    subclass: ['structure', 'widget', 'window'],\n  },\n  row: {\n    allowed: ['activedescendant', 'colindex', 'expanded', 'level', 'rowindex', 'selected'],\n    nameFromContent: true,\n  },\n  rowgroup: {\n    nameFromContent: true,\n  },\n  rowheader: {\n    allowed: ['colindex', 'colspan', 'expanded', 'rowindex', 'rowspan', 'readonly', 'required', 'selected', 'sort'],\n    nameFromContent: true,\n  },\n  scrollbar: {\n    required: ['controls', 'orientation', 'valuemax', 'valuemin', 'valuenow'],\n  },\n  search: {\n    allowed: ['expanded'],\n  },\n  searchbox: {\n    allowed: ['activedescendant', 'autocomplete', 'multiline', 'placeholder', 'readonly', 'required'],\n  },\n  section: {\n    abstract: true,\n    subclass: ['alert', 'cell', 'definition', 'figure', 'group', 'img', 'landmark', 'list', 'listitem', 'log', 'marquee', 'math', 'note', 'status', 'table', 'tabpanel', 'term', 'tooltip'],\n  },\n  sectionhead: {\n    abstract: true,\n    subclass: ['columnheader', 'heading', 'rowheader', 'tab'],\n  },\n  select: {\n    abstract: true,\n    subclass: ['combobox', 'listbox', 'menu', 'radiogroup', 'tree'],\n  },\n  separator: {\n    required: ['valuemax', 'valuemin', 'valuenow'],\n    allowed: ['orientation', 'valuetext'],\n  },\n  slider: {\n    required: ['valuemax', 'valuemin', 'valuenow'],\n    allowed: ['orientation', 'readonly', 'valuetext'],\n  },\n  spinbutton: {\n    required: ['valuemax', 'valuemin', 'valuenow'],\n    allowed: ['required', 'readonly', 'valuetext'],\n  },\n  status: {\n    allowed: ['expanded'],\n    subclass: ['timer'],\n  },\n  structure: {\n    abstract: true,\n    subclass: ['application', 'document', 'none', 'presentation', 'rowgroup', 'section', 'sectionhead', 'separator'],\n  },\n  switch: {\n    required: ['checked'],\n    nameFromContent: true,\n  },\n  tab: {\n    allowed: ['expanded', 'posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n  },\n  table: {\n    allowed: ['colcount', 'expanded', 'rowcount'],\n    subclass: ['grid'],\n  },\n  tablist: {\n    allowed: ['activedescendant', 'level', 'multiselectable', 'orientation'],\n  },\n  tabpanel: {\n    allowed: ['expanded'],\n  },\n  term: {\n    allowed: ['expanded'],\n  },\n  textbox: {\n    allowed: ['activedescendant', 'autocomplete', 'multiline', 'placeholder', 'readonly', 'required'],\n    subclass: ['searchbox'],\n  },\n  timer: {\n    allowed: ['expanded'],\n  },\n  toolbar: {\n    allowed: ['activedescendant', 'expanded', 'orientation'],\n  },\n  tooltip: {\n    allowed: ['expanded'],\n    nameFromContent: true,\n  },\n  tree: {\n    allowed: ['activedescendant', 'expanded', 'multiselectable', 'orientation', 'required'],\n    nameFromContent: true,\n    subclass: ['treegrid'],\n  },\n  treegrid: {\n    allowed: ['activedescendant', 'colcount', 'expanded', 'level', 'multiselectable', 'orientation', 'readonly', 'required', 'rowcount'],\n  },\n  treeitem: {\n    allowed: ['expanded', 'checked', 'level', 'posinset', 'selected', 'setsize'],\n    nameFromContent: true,\n  },\n  widget: {\n    abstract: true,\n    subclass: ['command', 'composite', 'gridcell', 'input', 'range', 'row', 'separator', 'tab'],\n  },\n  window: {\n    abstract: true,\n    subclass: ['dialog'],\n  },\n};\n",
    "\"use strict\";\n/**\n * Entry point for standalone autorunning linter\n */\nconst Linter = require('./linter');\n\nlet config = window.accessibilityLinterConfig;\nif (!config) {\n  const scriptElement = document.currentScript;\n  if (scriptElement) {\n    const settings = scriptElement.textContent.trim();\n    if (settings) {\n      config = JSON.parse(settings);\n    }\n  }\n}\n\nconst linter = new Linter(config);\nconst start = () => {\n  linter.run();\n  linter.observe();\n};\n\nif (/^(:?interactive|complete)$/.test(document.readyState)) {\n  // Document already loaded\n  start();\n} else {\n  document.addEventListener('DOMContentLoaded', start);\n}\n\nwindow.AccessibilityLinter = Linter;\nwindow.accessibilityLinter = linter;\n",
    "\"use strict\";\nconst Runner = require('./runner');\nconst Logger = require('./logger');\nconst Rule = require('./rules/rule');\nconst rules = require('./rules');\nconst Utils = require('./utils');\nconst version = require('./version');\nconst Config = require('./config');\nconst Contrast = require('./utils/contrast');\n\n// eslint-disable-next-line global-require, import/no-dynamic-require\nconst ruleList = new Map(rules.map(path => [path.replace(/\\//g, '-'), require(`./rules/${path}/rule.js`)]));\n\nclass Linter extends Runner {\n  constructor(settings) {\n    settings = settings || {};\n    settings.logger = settings.logger || new Logger();\n    settings.rules = settings.rules || ruleList;\n    settings.config = new Config(settings);\n    super(settings);\n\n    this.root = settings.root || document;\n  }\n\n  /**\n   * Start looking for issues\n   */\n  observe() {\n    this.observeDomChanges();\n    this.observeFocus();\n  }\n\n  /**\n   * Stop looking for issues\n   */\n  stopObserving() {\n    this.stopObservingDomChanges();\n    this.stopObservingFocus();\n  }\n\n  observeDomChanges() {\n    this.observer = new MutationObserver((mutations) => {\n      // De-duplicate\n      const nodes = new Set(mutations.map((record) => {\n        if (record.type === 'childList') {\n          return record.target;\n        }\n        return record.target.parentNode;\n      }).filter(Boolean));\n\n      // Remove nodes that are children of other nodes\n      nodes.forEach((node1) => {\n        nodes.forEach((node2) => {\n          if (node2 === node1 || !nodes.has(node1)) {\n            return;\n          }\n          if (node2.contains(node1)) {\n            nodes.delete(node1);\n          }\n        });\n      });\n      // Remove nodes that are disconnected\n      nodes.forEach((node) => {\n        if (!document.contains(node)) {\n          nodes.delete(node);\n        }\n      });\n      // Run test against each node\n      nodes.forEach(node => this.run(node));\n    });\n    this.observer.observe(\n      this.root,\n      { subtree: true, childList: true, attributes: true, characterData: true }\n    );\n  }\n\n  stopObservingDomChanges() {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  }\n\n  handleEvent(e) {\n    new Promise(resolve => resolve(this.run(e.target))); // eslint-disable-line no-new\n  }\n\n  observeFocus() {\n    document.addEventListener('focus', this, { capture: true, passive: true });\n    document.addEventListener('blur', this, { capture: true, passive: true });\n  }\n\n  stopObservingFocus() {\n    document.removeEventListener('focus', this, { capture: true, passive: true });\n    document.removeEventListener('blur', this, { capture: true, passive: true });\n  }\n}\n\nLinter.Config = Config;\nLinter.Logger = Logger;\nLinter.Rule = Rule;\nLinter.rules = ruleList;\nLinter[Symbol.for('accessibility-linter.rule-sources')] = rules;\nLinter.Utils = Utils;\nLinter.version = version;\nLinter.colourContrast = Contrast.colourContrast;\n\nmodule.exports = Linter;\n",
    "\"use strict\";\n/* eslint-disable no-console, class-methods-use-this */\nmodule.exports = class Logger {\n  log({ type, el, message, name }) {\n    console[type].apply(console, [message, el, name].filter(Boolean));\n  }\n};\n",
    "\"use strict\";\nconst ExtendedArray = require('../support/extended-array');\n\nmodule.exports = class Rule {\n  constructor(settings) {\n    this.type = 'error';\n    this.enabled = true;\n    this.setDefaults();\n    Object.assign(this, settings);\n  }\n\n  /**\n   * Set any default properties on the rule before the settings are merged in\n   */\n  setDefaults() {\n    // Nothing to do here\n  }\n\n  /**\n   * Run the rule\n   * @param {Element} [context=document] The element to run the rule against\n   * @param {Function} filter A filter to remove elements that don't need to be tested\n   * @param {Object} caches Utility caches\n   * @returns {String|String[]|null} Zero or more error messages\n   */\n  run(context, filter = () => true, utils) {\n    return utils.$$(this.selector(utils), context)\n      .filter(filter)\n      .map(el => (\n        ExtendedArray.of(this.test(el, utils))\n          .flatten()\n          .compact()\n          .map(message => ({ el, message }))\n      ))\n      .flatten();\n  }\n\n  /**\n   * The selector to select invalid elements\n   */\n  selector() { // eslint-disable-line class-methods-use-this\n    throw new Error('not implemented');\n  }\n\n  /**\n   * Test if an element is invalid\n   * @param {Element} el The element to test\n   * @param {Object} utils Utilities\n   * @returns {String|String[]|null} Zero or more error messages\n   */\n  test(el, utils) { // eslint-disable-line no-unused-vars\n    throw new Error('not implemented');\n  }\n};\n",
    "\"use strict\";\nconst Utils = require('./utils');\nconst SetCache = require('./support/set-cache');\n\nconst dummyCache = {\n  add() {},\n  set() {},\n  has() { return false; },\n};\n\nmodule.exports = class Runner {\n  constructor(settings) {\n    const globalSettings = {};\n    if (settings.defaultOff) {\n      globalSettings.enabled = false;\n    }\n\n    this.cacheReported = settings.cacheReported !== false;\n    this.ruleSettings = settings.ruleSettings || {};\n    this.config = settings.config;\n\n    this.rules = new Map(Array.from(settings.rules)\n      .map(([name, Rule]) => [\n        name,\n        new Rule(Object.assign({ name }, globalSettings, this.ruleSettings[name])),\n      ])\n    );\n\n    this.ignoreAttribute = settings.ignoreAttribute || 'data-accessibility-linter-ignore';\n\n    this.whitelist = settings.whitelist;\n    this.logger = settings.logger;\n\n    if (this.cacheReported) {\n      this.reported = new SetCache();\n      this.whitelisted = new SetCache();\n      this.globalWhitelisted = new WeakSet();\n      this.ignored = new SetCache();\n    } else {\n      this.reported = this.whitelisted = this.globalWhitelisted = this.ignored = dummyCache;\n    }\n\n    this.utils = null;\n  }\n\n  /**\n   * Run all the rules\n   * @param {HTMLElement} [context] A context to run the rules within\n   */\n  run(context) {\n    this.utils = new Utils(this.config);\n    Array.from(this.rules.values())\n      .filter(rule => rule.enabled)\n      .forEach(rule => this.runInternal(rule, context, (el, name) => this.filter(el, name)));\n    this.utils = null;\n  }\n\n  /**\n   * Run one rule regardless of it being enabled\n   * @name {String|Rule} rule A rule or name of a rule\n   * @param {HTMLElement} [context] A context\n   * @param {String} [whitelist] Optionally a whitelist\n   */\n  runRule(rule, { context, whitelist, ruleSettings } = {}) {\n    if (typeof rule === 'string') {\n      rule = this.rules.get(rule);\n    }\n\n    const runner = new Runner({\n      rules: new Map([[rule.name, rule.constructor]]),\n      whitelist: whitelist || this.whitelist,\n      logger: this.logger,\n      ruleSettings: {\n        [rule.name]: Object.assign(\n          {},\n          ruleSettings || this.ruleSettings[rule.name] || {},\n          { enabled: true }\n        ),\n      },\n    });\n\n    runner.run(context);\n  }\n\n  /**\n   * Filter if the element has already reported on this rule or is excluded from this rule\n   * @private\n   */\n  filter(el, name) {\n    return this.notWhitelisted(el, name)\n      && this.notIgnored(el, name)\n      && this.notReported(el, name);\n  }\n\n  /**\n   * Run a single rule\n   * @private\n   */\n  runInternal(rule, context = document, filter) {\n    rule.run(context, el => filter(el, rule.name), this.utils)\n      .forEach((issue) => {\n        this.reported.set(issue.el, rule.name);\n        this.logger.log(Object.assign({ name: rule.name, type: rule.type }, issue));\n      });\n  }\n\n  /**\n   * Has this already been reported for this element\n   * @private\n   */\n  notReported(el, name) {\n    return !this.reported.has(el, name);\n  }\n\n  /**\n   * Is this element excluded by a whitelist\n   * @private\n   */\n  notWhitelisted(el, name) {\n    if (this.globalWhitelisted.has(el) || this.whitelisted.has(el, name)) {\n      return false;\n    }\n\n    if (this.whitelist && el.matches(this.whitelist)) {\n      this.globalWhitelisted.add(el);\n      return false;\n    }\n\n    const whitelist = this.ruleSettings[name] && this.ruleSettings[name].whitelist;\n    if (whitelist && el.matches(whitelist)) {\n      this.whitelisted.set(el, name);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Is this element excluded by an attribute\n   * @private\n   */\n  notIgnored(el, ruleName) {\n    if (this.ignored.has(el, ruleName)) {\n      return false;\n    }\n\n    const ignore = el.matches(\n      `[${this.ignoreAttribute}=\"\"],[${this.ignoreAttribute}~=\"${this.utils.cssEscape(ruleName)}\"]`\n    );\n\n    if (ignore) {\n      this.ignored.set(el, ruleName);\n      return false;\n    }\n\n    return true;\n  }\n};\n",
    "\"use strict\";\n// https://www.w3.org/TR/html52/infrastructure.html#common-parser-idioms\nexports.rSpace = /[ \\t\\n\\f\\r]+/;\n",
    "\"use strict\";\n/**\n * Caching for element values\n */\n/* eslint-disable class-methods-use-this */\n\nfunction getOrSet(cache, key, setter) {\n  if (cache.has(key)) {\n    return cache.get(key);\n  }\n  const value = setter();\n  cache.set(key, value);\n  return value;\n}\n\nmodule.exports = class ElementCache {\n  constructor() {\n    this._cache = new WeakMap();\n  }\n\n  /**\n   * Generate a key from the options supplied to key\n   */\n  key(el, key) {\n    return key;\n  }\n\n  /**\n   * Sets stored value\n   */\n  setter() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   *  Get a value\n   *  @param {Object} el A key to cache against\n   */\n  get(el) {\n    const map = getOrSet(this._cache, el, () => new Map());\n    const optionsKey = this.key.apply(this, arguments);\n    return getOrSet(map, optionsKey, () => this.setter.apply(this, arguments));\n  }\n};\n",
    "\"use strict\";\nmodule.exports = class ExtendedArray extends Array {\n  tap(fn) {\n    fn(this);\n    return this;\n  }\n\n  unique() {\n    const set = new Set();\n    return this.filter(item => (set.has(item) ? false : set.add(item)));\n  }\n\n  groupBy(fn) {\n    const map = new Map();\n    this.forEach((item, i, ar) => {\n      const key = fn(item, i, ar);\n      if (map.has(key)) {\n        map.get(key).push(item);\n      } else {\n        map.set(key, ExtendedArray.of(item));\n      }\n    });\n    return ExtendedArray.from(map.values());\n  }\n\n  compact() {\n    return this.filter(Boolean);\n  }\n\n  flatten() {\n    let result = new ExtendedArray();\n    this.forEach((item) => {\n      if (Array.isArray(item)) {\n        result = result.concat(ExtendedArray.from(item).flatten());\n      } else {\n        result.push(item);\n      }\n    });\n    return result;\n  }\n};\n",
    "\"use strict\";\nmodule.exports = class ElementCache {\n  constructor() {\n    this._cache = new WeakMap();\n  }\n\n  has(el, value) {\n    const set = this._cache.get(el);\n    if (!set) {\n      return false;\n    }\n    return set.has(value);\n  }\n\n  set(el, value) {\n    let set = this._cache.get(el);\n    if (!set) {\n      set = new Set();\n      this._cache.set(el, set);\n    }\n    set.add(value);\n  }\n};\n",
    "\"use strict\";\n/**\n *  Data and functions for aria validation.  Based on\n *  - https://www.w3.org/TR/wai-aria-1.1/\n *  - https://www.w3.org/TR/html52/\n */\nconst ExtendedArray = require('../support/extended-array');\n\nmodule.exports = class Aria {\n  constructor(config) {\n    this.config = config;\n  }\n\n  /**\n   * An object with the role settings for the element\n   * @type {Object[]}\n   */\n  allowed(el) {\n    const name = el.nodeName.toLowerCase();\n    let found = this.config.allowedAria[name];\n    if (Array.isArray(found)) {\n      found = found.find(item => (\n        item.selector === '*' || (typeof item.selector === 'function' ? item.selector(el, this) : el.matches(item.selector))\n      ));\n    }\n    return found || this.config.allowedAria._default;\n  }\n\n  /**\n   * Get the elements current role based on the role attribute or implicit role\n   * @param {Element} el\n   * @returns {String|null}\n   */\n  getRole(el, allowed) {\n    let role = null;\n    // Should be the first non-abstract role in the list\n    if ((el.getAttribute('role') || '').split(/\\s+/).filter(Boolean).some((name) => {\n      if (this.config.roles[name] && !this.config.roles[name].abstract) {\n        role = name;\n        return true;\n      }\n      return false;\n    })) {\n      return role;\n    }\n    allowed = allowed || this.allowed(el);\n    return allowed.implicit[0] || null;\n  }\n\n  /**\n   * Does an element have a role. This will test against abstract roles\n   * @param {Element|String|null} target\n   * @param {String|String[]} name\n   * @param {Boolean} [options.extact=false] Match against abstract roles\n   * @returns {Boolean}\n   */\n  hasRole(target, name, { exact = false } = {}) {\n    if (target === null) {\n      return false;\n    }\n    const actualRole = typeof target === 'string' ? target : this.getRole(target);\n    if (!actualRole) {\n      return false;\n    }\n    return [].concat(name).some(function hasRole(checkRole) {\n      if (checkRole === actualRole) {\n        return true;\n      }\n      return !exact && (this.config.roles[checkRole].subclass || []).some(hasRole, this);\n    }, this);\n  }\n\n  /**\n   * Find the closest element with the specified role(s)\n   * @param {Element} el\n   * @param {String|String[]} role\n   * @param {Boolean} [options.exact=false]\n   * @returns {Boolean}\n   */\n  closestRole(el, role, { exact = false } = {}) {\n    const roles = [].concat(role);\n    let cursor = el;\n    while ((cursor = cursor.parentNode) && cursor.nodeType === Node.ELEMENT_NODE) {\n      // eslint-disable-next-line no-loop-func\n      if (roles.some(name => this.hasRole(cursor, name, { exact }))) {\n        return cursor;\n      }\n    }\n    return null;\n  }\n\n  rolesOfType(name) {\n    const roles = new ExtendedArray();\n    const role = this.config.roles[name];\n    if (!role.abstract) {\n      roles.push(name);\n    }\n    if (role.subclass) {\n      roles.push(role.subclass.map(this.rolesOfType, this));\n    }\n    return roles.flatten();\n  }\n};\n",
    "\"use strict\";\n// Luminosity calculation\n/* eslint-disable class-methods-use-this */\n\nfunction gamma(value) {\n  const n = value / 255;\n  // eslint-disable-next-line no-restricted-properties\n  return n <= 0.03928 ? n / 12.92 : Math.pow(((n + 0.055) / 1.055), 2.4);\n}\n\nfunction blendAlpha(s, d) {\n  return s + (d * (1 - s));\n}\n\nfunction blendChannel(sc, dc, sa, da, ba) {\n  return ((sc * sa) + (dc * da * (1 - sa))) / ba;\n}\n\nfunction blend(colours) {\n  let [r, g, b, a] = [0, 0, 0, 0];\n  colours.reverse().forEach(([_r, _g, _b, _a]) => {\n    const aNew = blendAlpha(_a, a);\n    r = blendChannel(_r, r, _a, a, aNew);\n    g = blendChannel(_g, g, _a, a, aNew);\n    b = blendChannel(_b, b, _a, a, aNew);\n    a = aNew;\n  });\n  return [Math.round(r), Math.round(g), Math.round(b), a];\n}\n\nfunction luminosity(r, g, b) {\n  // https://en.wikipedia.org/wiki/Relative_luminance\n  return (0.2126 * gamma(r)) + (0.7152 * gamma(g)) + (0.0722 * gamma(b));\n}\n\nfunction contrastRatio(l1, l2) {\n  // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n  if (l1 < l2) {\n    [l2, l1] = [l1, l2];\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n\n// Convert a CSS colour to an array of RGBA values\nfunction toRgbaArray(style) {\n  const el = document.createElement('div');\n  el.style.color = style;\n  document.body.appendChild(el);\n  const value = window.getComputedStyle(el).color;\n  if (!value) {\n    throw new Error('unable to parse colour');\n  }\n  return colourParts(value); // eslint-disable-line no-use-before-define\n}\n\n/**\n * Given a colour in rgba or rgb format, get its parts\n * The parts should be in the range 0 to 1\n */\nfunction colourParts(colour) {\n  if (colour === 'transparent') {\n    return [0, 0, 0, 0];\n  }\n  const match = colour.match(/^rgba?\\((\\d+), *(\\d+), *(\\d+)(?:, *(\\d+(?:\\.\\d+)?))?\\)$/);\n  if (match) {\n    return [+match[1], +match[2], +match[3], match[4] ? parseFloat(match[4]) : 1];\n  }\n  return toRgbaArray(colour);\n}\n\nmodule.exports = class Contrast {\n  constructor(styleCache) {\n    this.styleCache = styleCache;\n  }\n\n  textContrast(el) {\n    return contrastRatio(this._textLuminosity(el), this._backgroundLuminosity(el));\n  }\n\n  _blendWithBackground(colour, el) {\n    if (colour[3] === 1) {\n      return colour;\n    }\n    const colourStack = [colour];\n    let cursor = el;\n    let currentColour = colour;\n    do {\n      let background;\n      if (cursor === document) {\n        // I assume this is always the case?\n        background = [255, 255, 255, 1];\n      } else {\n        background = colourParts(this.styleCache.get(cursor, 'backgroundColor'));\n      }\n      currentColour = background;\n      if (currentColour[3] !== 0) {\n        colourStack.push(currentColour);\n      }\n    } while (currentColour[3] !== 1 && (cursor = cursor.parentNode));\n    return blend(colourStack);\n  }\n\n  textColour(el) {\n    const colour = colourParts(this.styleCache.get(el, 'color'));\n    return this._blendWithBackground(colour, el);\n  }\n\n  backgroundColour(el) {\n    return this._blendWithBackground([0, 0, 0, 0], el);\n  }\n\n  _textLuminosity(el) {\n    return luminosity.apply(null, this.textColour(el));\n  }\n\n  _backgroundLuminosity(el) {\n    return luminosity.apply(null, this.backgroundColour(el));\n  }\n\n  /**\n   * The contrast between two colours\n   */\n  static colourContrast(foreground, background) {\n    foreground = colourParts(foreground);\n    background = colourParts(background);\n    if (background[3] !== 1) {\n      background = blend([background, [255, 255, 255, 1]]);\n    }\n    if (foreground[3] !== 1) {\n      foreground = blend([foreground, background]);\n    }\n    return contrastRatio(\n      luminosity.apply(null, foreground),\n      luminosity.apply(null, background)\n    );\n  }\n};\n\n// The following are exposed for unit testing\nmodule.exports.prototype._blend = blend;\nmodule.exports.prototype._luminosity = luminosity;\nmodule.exports.prototype._colourParts = colourParts;\nmodule.exports.prototype._contrastRatio = contrastRatio;\n",
    "\"use strict\";\nmodule.exports = function cssEscape(name) {\n  return name.replace(/[\"\\\\]/g, '\\\\$&');\n};\n",
    "\"use strict\";\n/**\n *  Determine if an element is hidden or not\n */\n/* eslint-disable class-methods-use-this */\n\nconst ElementCache = require('../support/element-cache');\n\n// Elements that don't have client rectangles\nconst noRects = ['br', 'wbr'];\n\n// Is the element hidden using CSS\nfunction cssHidden(el, style) {\n  return style.get(el, 'visibility') !== 'visible' || style.get(el, 'display') === 'none';\n}\n\n// Is the element hidden from accessibility software\nfunction hidden(el, style, ariaHidden = false) {\n  if (el === document) {\n    return false;\n  }\n  return (ariaHidden && el.getAttribute('aria-hidden') === 'true')\n    || (!noRects.includes(el.nodeName.toLowerCase()) && el.getClientRects().length === 0)\n    || (ariaHidden && !!el.closest('[aria-hidden=true]'))\n    || cssHidden(el, style);\n}\n\n/**\n *  Cache of hidden element\n */\nmodule.exports = class Hidden extends ElementCache {\n  constructor(style) {\n    super();\n    this.style = style;\n  }\n\n  key(el, { ariaHidden = false } = {}) {\n    return ariaHidden;\n  }\n\n  setter(el, { ariaHidden = false } = {}) {\n    return hidden(el, this.style, ariaHidden);\n  }\n};\n",
    "\"use strict\";\nconst { $, $$ } = require('./selectors');\nconst { accessibleName, accessibleDescription } = require('./name');\nconst Aria = require('./aria');\nconst Contrast = require('./contrast');\nconst cssEscape = require('./cssEscape');\nconst Hidden = require('./hidden');\nconst Style = require('./style');\n\nconst getOrSet = (cache, el, setter) => {\n  if (cache.has(el)) {\n    return cache.get(el);\n  }\n\n  const value = setter();\n  cache.set(el, value);\n  return value;\n};\n\n/**\n * Helpers functions\n */\nconst Utils = class Utils {\n  constructor(config) {\n    this._style = new Style();\n    this._hidden = new Hidden(this._style);\n    this._nameCache = new WeakMap();\n    this._descriptionCache = new WeakMap();\n    this.contrast = new Contrast(this._style);\n    this.config = config;\n    this.aria = new Aria(config);\n  }\n\n  hidden(el, options) {\n    return this._hidden.get(el, options);\n  }\n\n  style(el, name, pseudo) {\n    return this._style.get(el, name, pseudo);\n  }\n\n  accessibleName(el) {\n    return getOrSet(\n      this._nameCache,\n      el,\n      () => accessibleName(el, Object.assign({ utils: this }))\n    );\n  }\n\n  accessibleDescription(el) {\n    return getOrSet(\n      this._descriptionCache,\n      el,\n      () => accessibleDescription(el, Object.assign({ utils: this }))\n    );\n  }\n};\n\nUtils.prototype.$ = $;\nUtils.prototype.$$ = $$;\nUtils.prototype.cssEscape = cssEscape;\n\nmodule.exports = Utils;\n",
    "\"use strict\";\n// An implementation of the text alternative computation\n// https://www.w3.org/TR/accname-aam-1.1/#mapping_additional_nd_te\nconst controlRoles = ['textbox', 'combobox', 'listbox', 'range'];\nconst nameFromContentRoles = roles => Object.keys(roles)\n  .filter(name => roles[name].nameFromContent);\n\nclass AccessibleName {\n  constructor(el, options = {}) {\n    this.utils = options.utils;\n    this.el = el;\n    this.recursion = !!options.recursion;\n    this.allowHidden = !!options.allowHidden;\n    this.includeHidden = !!options.includeHidden;\n    this.noAriaBy = !!options.noAriaBy;\n    this.history = options.history || [];\n    this.isWithinWidget = 'isWithinWidget' in options ? options.isWithinWidget : this.utils.aria.hasRole(this.role, 'widget');\n\n    this.sequence = [\n      () => this.hidden(),\n      () => this.ariaBy(),\n      () => this.embedded(),\n      () => this.ariaLabel(),\n      () => this.native(),\n      () => this.loop(),\n      () => this.dom(),\n      () => this.tooltip(),\n    ];\n  }\n\n  get role() {\n    return this._role || (this._role = this.utils.aria.getRole(this.el));\n  }\n\n  get nodeName() {\n    return this._nodeName || (this._nodeName = this.el.nodeName.toLowerCase());\n  }\n\n  build() {\n    let text = '';\n    this.sequence.some(fn => (text = fn()) != null);\n\n    text = text || '';\n\n    if (!this.recursion) {\n      // To a flat string\n      text = text.trim().replace(/\\s+/g, ' ');\n    }\n\n    return text;\n  }\n\n  loop() {\n    return this.history.includes(this.el) ? '' : null;\n  }\n\n  hidden() {\n    if (this.includeHidden) {\n      return null;\n    }\n    const isHidden = this.utils.hidden(this.el, { ariaHidden: true });\n    if (this.allowHidden && isHidden) {\n      this.includeHidden = true;\n      return null;\n    }\n    return isHidden ? '' : null;\n  }\n\n  ariaBy(attr = 'aria-labelledby') {\n    if (this.noAriaBy) {\n      return null;\n    }\n\n    const ids = this.el.getAttribute(attr) || '';\n    if (ids) {\n      return ids.trim().split(/\\s+/)\n        .map(id => document.getElementById(id))\n        .filter(Boolean)\n        .map(elm => this.recurse(elm, { allowHidden: true, noAriaBy: attr === 'aria-labelledby' }))\n        .filter(Boolean)\n        .join(' ');\n    }\n\n    return null;\n  }\n\n  ariaLabel() {\n    return this.el.getAttribute('aria-label') || null;\n  }\n\n  native(prop = 'nativeLabel') {\n    if (['none', 'presentation'].includes(this.role)) {\n      return null;\n    }\n\n    const element = this.utils.config.elements[this.nodeName];\n    if (element && element[prop]) {\n      let value = element[prop](this.el, this.utils);\n      if (typeof value === 'string') {\n        return value;\n      }\n      if (value instanceof HTMLElement) {\n        value = [value];\n      }\n      if (Array.isArray(value)) {\n        return value\n          .filter(Boolean)\n          .map(elm => this.recurse(elm, { allowHidden: true }))\n          .join(' ') || null;\n      }\n    }\n    return null;\n  }\n\n  embedded() {\n    const useEmbeddedName = this.isWithinWidget\n      && this.recursion\n      && controlRoles.some(name => this.utils.aria.hasRole(this.role, name));\n\n    if (!useEmbeddedName) {\n      return null;\n    }\n\n    const { el, role } = this;\n\n    if (['input', 'textarea'].includes(this.nodeName) && !this.utils.aria.hasRole(role, 'button')) {\n      return el.value;\n    }\n\n    if (this.nodeName === 'select') {\n      return Array.from(this.el.selectedOptions)\n        .map(option => option.value)\n        .join(' ');\n    }\n\n    if (this.utils.aria.hasRole(role, 'textbox')) {\n      return el.textContent;\n    }\n\n    if (this.utils.aria.hasRole(role, 'combobox')) {\n      const input = this.utils.$('input', el);\n      if (input) {\n        return input.value;\n      }\n      return '';\n    }\n\n    if (this.utils.aria.hasRole(role, 'listbox')) {\n      return this.utils.$$('[aria-selected=\"true\"]', el)\n        .map(elm => this.recurse(elm))\n        .join(' ');\n    }\n\n    if (this.utils.aria.hasRole(role, 'range')) {\n      return el.getAttribute('aria-valuetext') || el.getAttribute('aria-valuenow') || '';\n    }\n\n    return null;\n  }\n\n  // Find the label from the dom\n  dom() {\n    if (!this.recursion && !nameFromContentRoles(this.utils.config.roles).includes(this.role)) {\n      return null;\n    }\n\n    return Array.from(this.el.childNodes)\n      .map((node) => {\n        if (node instanceof Text) {\n          return node.textContent;\n        }\n        if (node instanceof Element) {\n          return this.recurse(node);\n        }\n        return null;\n      })\n      .filter(Boolean)\n      .join('') || null;\n  }\n\n  // Find a tooltip label\n  tooltip() {\n    return this.el.title || null;\n  }\n\n  recurse(el, options = {}) {\n    return new this.constructor(el, Object.assign({\n      history: this.history.concat(this.el),\n      includeHidden: this.includeHidden,\n      noAriaBy: this.noAriaBy,\n      recursion: true,\n      isWithinWidget: this.isWithinWidget,\n      utils: this.utils,\n    }, options)).build();\n  }\n}\n\nclass AccessibleDescription extends AccessibleName {\n  constructor(el, options) {\n    super(el, options);\n\n    this.sequence.unshift(() => this.describedBy());\n  }\n\n  describedBy() {\n    if (this.recursion) {\n      return null;\n    }\n\n    if (this.utils.hidden(this.el, { ariaHidden: true })) {\n      return '';\n    }\n\n    const ariaBy = this.ariaBy('aria-describedby');\n    if (ariaBy !== null) {\n      return ariaBy;\n    }\n\n    return this.native('nativeDescription') || '';\n  }\n}\n\nexports.accessibleName = (el, options) => new AccessibleName(el, options).build();\nexports.accessibleDescription = (el, options) => new AccessibleDescription(el, options).build();\n",
    "\"use strict\";\nconst ExtendedArray = require('../support/extended-array');\n\nexports.$$ = function $$(selector, context) {\n  const root = context || document;\n  const els = ExtendedArray.from(root.querySelectorAll(selector));\n  if (context && context instanceof Element && context.matches(selector)) {\n    els.push(context);\n  }\n  return els;\n};\n\nexports.$ = function $(selector, context) {\n  return exports.$$(selector, context)[0];\n};\n",
    "\"use strict\";\n/**\n * A cache of computed style properties\n */\n/* eslint-disable class-methods-use-this */\nconst ElementCache = require('../support/element-cache');\n\nfunction getStyle(el, name, pseudo) {\n  return window.getComputedStyle(el, pseudo ? `::${pseudo}` : null)[name];\n}\n\nmodule.exports = class Style extends ElementCache {\n  key(el, name, pseudo) {\n    return `${name}~${pseudo}`;\n  }\n\n  setter(el, name, pseudo) {\n    return getStyle(el, name, pseudo);\n  }\n};\n"
  ],
  "sourceRoot": ""
}